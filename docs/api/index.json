{"repository_name":"crytic","body":"<h1 align=\"center\">Crytic</h1>\n\n<p align=\"center\">\n    <img alt=\"Crytic logo\" height=\"250\" src=\"searching-1.png\" align=\"center\" />\n</p>\n\n<p align=\"center\">\n    <a href=\"#installation\">Installation</a> &bull;\n    <a href=\"#usage\">Usage</a> &bull;\n    <a href=\"CHANGELOG.md\">Changelog</a> &bull;\n    <a href=\"#credits--inspiration\">Credits</a>\n</p>\n\nCrytic, pronounced /ˈkrɪtɪk/, is a mutation testing framework for the crystal programming language. Mutation testing is a type of software testing where specific statements in the code are changed to determine if test cases find this defect.\n\n> Crytic is in a very early state of development. It is not very clever, making it slow as well.\n\n[![Latest Tag](https://img.shields.io/github/tag-date/hanneskaeufler/crytic.svg)](https://github.com/hanneskaeufler/crytic/releases) [![CircleCI](https://circleci.com/gh/hanneskaeufler/crytic/tree/master.svg?style=svg)](https://circleci.com/gh/hanneskaeufler/crytic/tree/master) [![codecov](https://codecov.io/gh/hanneskaeufler/crytic/branch/master/graph/badge.svg)](https://codecov.io/gh/hanneskaeufler/crytic) ![Mutation Score](https://badge.stryker-mutator.io/github.com/hanneskaeufler/crytic/master)\n\n### Blog posts\n\n* [Introducing crytic - mutation testing in crystal-lang](https://hannes.kaeufler.net/posts/introducing-crytic---mutation-testing-in-crystal-lang)\n* [Building a mutation test framework in crystal - Part 1](http://hannes.kaeufler.net/posts/building-a-mutation-test-framework-in-crystal---part-1)\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndevelopment_dependencies:\n  crytic:\n    github: hanneskaeufler/crytic\n    version: ~> 8\n```\n\nAfter `shards install`, this will place the `crytic` executable into the `bin/` folder inside your project.\n\n## Usage\n\nCrytic understands two commands: `test` and `noop`.\n\nRunning `crytic test` without further arguments will mutate all of the source files found by `src/**/*.cr` and use the test-suite containing `spec/**/*_spec.cr`. Depending on the size of your project and the duration of a full `crystal spec`, this might take quite a bit of time.\n\n```shell\n./bin/crytic test\n```\n\nCrytic can also be run to only mutate statements in one file, let's call that our subject, or `--subject` in the command line interface. You can also provide a list of test files to be executed in order to find the defects. This might be helpful to exclude certain long-running integration specs in order to speed up the test suite.\n\n```shell\n./bin/crytic test --subject src/blog/pages/archive.cr spec/blog_spec.cr spec/blog/pages/archive_spec.cr\n```\n\nThe above command determines a list of mutations that can be performed on the source code of `archive.cr` and joins the `blog_spec.cr` and `archive_spec.cr` as a test-suite to find suriving mutants.\n\nRunning `./bin/crytic noop` will output the source code as if crytic applied a no-operation mutation. This can help with debugging crytic bugs by\nexecuting e.g. `./bin/crytic noop | crystal eval`.\n\n### CLI options\n\n#### For \"test\" command\n\n`--subject`/`-s` specifies a relative filepath to the sourcecode being mutated.\n\n`--min-msi`/`-m` specifies a threshold as to when to exit the program with 0 even when mutants survived. MSI is the Mutation Score Indicator.\n\n`--preamble`/`-p` specifies some source code to prepended to the combination of mutated source and specs. By default this will inject a bit of code to enable the \"fail fast\" mode of crystal [spec](https://crystal-lang.org/api/0.27.0/Spec.html). This can be used to disable the fail fast behaviour or avoid errors if you don't use crystal spec.\n\n`--reporters/-r` specifies which reporters to enable via a comma separated list. Reporters `Console`, `Stryker` and `ConsoleFileSummary` exist. `Console` is enabled by default if the option is omitted.\n\nThe rest of the unnamed positional arguments are relative filepaths to the specs to be run.\n\n#### For \"noop\" command\n\nAll unnamed positional arguments are relative filepaths to the specs source code to be printed.\n\n### How to read the output\n\n```shell\n\n✅ Original test suite passed.\nRunning 138 mutations.\n\n    ❌ AndOrSwap\n        in source.cr:26:7\n        The following change didn't fail the test-suite:\n            @@ -26,7 +26,7 @@\n                     end\n                   end\n                   def ==(other : Chunk)\n            -        ((type == other.type) && (range_a == other.range_a)) && (range_b == other.range_b)\n            +        ((type == other.type) && (range_a == other.range_a)) || (range_b == other.range_b)\n                   end\n                 end\n                 enum Type\n\n    ✅ AndOrSwap\n        in source.cr:109:13\n\nFinished in 14:02 minutes:\n138 mutations, 85 covered, 36 uncovered, 0 errored, 17 timeout. Mutation Score Indicator (MSI): 73.91%\n```\n\nThe first good message here is that the `Original test suite passed`. Crytic ran `crystal spec [with all spec files]` and that exited with exit code `0`. Any other result on your inital test suite and it would not have made sense to continue. Intentionally breaking source code which is already broken is of no use.\n\nEach occurance of `✅` shows that a mutant has been killed, ergo that the change in the source code was detected by the test suite. The line and column numbers are printed to follow the progress through the subject file.\n\n`❌ AndOrSwap` is signaling that indeed a mutant, an intentional change in the subject, was not detected. The diff below shows the change that was made which was not caught by the test suite.\n\n### Mutation Badge\n\nTo show a badge about your mutation testing efforts like at the top of this readme you can make use of the [dashboard](https://dashboard.stryker-mutator.io) of stryker by letting crytic post  the msi score to the stryker API. To do that, make sure to have the following env vars set:\n\n```\nCIRCLE_BRANCH             => \"master\",\nCIRCLE_PROJECT_REPONAME   => \"crytic\",\nCIRCLE_PROJECT_USERNAME   => \"hanneskaeufler\",\nSTRYKER_DASHBOARD_API_KEY => \"apikey\",\n```\n\nIt is currently limited to work with Circle CI and assumes your project is hosted on GitHub.\n\n### Available mutants\n\nThere are many ways a code-base can be modified to introduce arbitrary failures. Crytic only provides mutators which keep the code compiling (at least in theory). Currently, available mutators are:\n\n#### AndOrSwap\n\nThis mutant replaces the `&&` operator by the `||` operator and vice-versa. A typical mutation is:\n\n```diff\n- if cool && nice\n+ if cool || nice\n```\n\n#### BoolLiteralFlip\n\nThis mutant flips literal occurances of `true` or `false`. A typical mutation is:\n```diff\n  def valid\n-   return true\n+   return false\n  end\n```\n\n#### ConditionFlip\n\nThis mutant flips the `if` and `else` branch in conditions. It will create an `else` branch even if there is none. A typical mutation is:\n\n```diff\n  if true\n+ else\n    doSomething()\n  end\n```\n\n#### NumberLiteralChange\n\nThis mutant changes literal occurances of numbers by replacing them with \"0\". \"0\" gets replaces by \"1\". A typical mutation is:\n\n```diff\n-  0\n+  1\n```\n\n#### NumberLiteralSignChange\n\nThis mutant changes the sign of literal numbers. It ignores literal \"0\". A typical mutation is:\n\n```diff\n- 5\n+ -5\n```\n\n#### StringLiteralChange\n\nThis mutant changes literal occurances of string by replacing empty strings with `__crytic__` and all other strings with the empty string. Typical mutations are:\n\n```diff\n- \"Welcome\"\n+ \"\"\n```\n\n#### AnyAllSwap\n\nThis mutant exchanges calls to [Enumerable#all?](https://crystal-lang.org/api/0.27.0/Enumerable.html#all%3F-instance-method) with calls to [Enumerable#any?](https://crystal-lang.org/api/0.27.0/Enumerable.html#any%3F-instance-method) and vice-versa. A typical mutation is:\n\n```diff\n- [false].all?\n+ [false].any?\n```\n\n#### RegexpLiteralChange\n\nThis mutant modifies any regular expression literal to never match anything. A typical mutation is:\n\n```diff\n- /\\d+/\n+ /a^/\n```\n\n#### SelectRejectSwap\n\nThis mutant exchanges calls to [Enumerable#select](https://crystal-lang.org/api/0.27.0/Enumerable.html#select%28%26block%3AT-%3E%29-instance-method) with calls to [Enumerable#reject](https://crystal-lang.org/api/0.27.0/Enumerable.html#reject%28%26block%3AT-%3E%29-instance-method) and vice-versa. A typical mutation is:\n\n```diff\n- [1].select(&.nil?)\n+ [1].reject(&.nil?)\n```\n\n#### DropCallInVoidDef\n\nThis mutant replaces method calls with `nil`. The mutation is only performed inside methods that are of void return type.\n\n```diff\ndef some_method : Nil\n- perform_side_effect\n+ nil\nend\n```\n\n#### SymbolLiteralChange\n\nThis mutant modifies symbol literals by prefixing them with `__crytic__`.\n\n```diff\n- :hello\n+ :__crytic__hello\n```\n\n## Credits & inspiration\n\nI have to credit the crystal [code-coverage](https://github.com/anykeyh/crystal-coverage) shard which finally helped me create a working mutation testing tool after one or two failed attempts. I took heavy inspirations from its [SourceFile](https://github.com/anykeyh/crystal-coverage/blob/master/src/coverage/inject/source_file.cr) class and actually lifted nearly all the code.\n\nOne of the more difficult parts of crytic was the resolving of `require` statements. In order to work for most projects, crytic has to resolve those statements identical to the way crystal itself does. I achieved this (for now) by copying a bunch of methods from crystal-lang itself.\n\nIn order to avoid dependencies for tiny amounts of savings I rather copied/adapted a bit of code from [timeout.cr](https://github.com/hugoabonizio/timeout.cr) and [crystal-diff](https://github.com/MakeNowJust/crystal-diff).\n\nObviously I didn't invent mutation testing. While I cannot remember where I have read about it initially, my first recollection is the [mutant](https://github.com/mbj/mutant) gem for ruby. [Markus Shirp](https://github.com/mbj), author of mutant is also the one who explained the notion of a \"neutral\" mutant to me in private chat. I took his idea and implemented it in crytic as well. Thanks!\n\nThe logo above is free from [icons8.com](https://icons8.com/ouch/illustration/searching-1#).\n\n### Alternatives\n\nAlthough not having tested it myself yet, the [mull](https://github.com/mull-project/mull) libray is supposed to work for any llvm based language, which I believe crystal is.\n\n## Execution flow\n\nThe following diagram shows a rough sequence of how crytic works. It was generated in [mermaidjs.github.io](https://mermaidjs.github.io/mermaid-live-editor/#/edit/eyJjb2RlIjoiZ3JhcGggVERcbkJJTj5Vc2VyIGludm9rZXMgLi9iaW4vY3J5dGljXSAtLT4gfENoZWNrIGFyZ3VtZW50c3wgUlVOTkVSKFN0YXJ0IHJ1bm5lcilcblJVTk5FUiAtLT5JTklUSUFMKFwiSW5pdGlhbCB0ZXN0IHJ1biB3aXRoICdjcnlzdGFsIHNwZWMnXCIpXG5JTklUSUFMIC0tPklOSVRfUEFTU3tQYXNzZXM_fVxuSU5JVF9QQVNTLS0-fFllc3wgUE9TU0lCSUxJVElFUyhGaW5kIG11dGF0aW9uIHBvc3NpYmlsaXRpZXMpXG5QT1NTSUJJTElUSUVTLS0-fEZvciBlYWNoIHN1YmplY3R8IE5FVVRSQUwoUnVuIG5ldXRyYWwgbXV0YXRpb24pXG5JTklUX1BBU1MtLT58Tm98IEFCT1JUKEFib3J0IGNyeXRpYylcbk5FVVRSQUwtLT5ORVVUUkFMX1BBU1N7UGFzc2VzP31cbk5FVVRSQUxfUEFTUy0tPnxZZXN8IFJVTl9NVVRBVElPTlMoUnVuIG11dGF0aW9ucylcblJVTl9NVVRBVElPTlMtLT4gfE5leHQgc3ViamVjdHwgTkVVVFJBTFxuTkVVVFJBTF9QQVNTLS0-fE5vfCBTS0lQX1NVQkpFQ1QoU2tpcCBzdWJqZWN0KVxuU0tJUF9TVUJKRUNULS0-IHxOZXh0IHN1YmplY3R8IE5FVVRSQUxcblJVTl9NVVRBVElPTlMtLT5GSU5JU0hFRD5GaW5pc2hlZF1cbiIsIm1lcm1haWQiOnsidGhlbWUiOiJkZWZhdWx0In19).\n\n<p align=\"center\">\n    <img alt=\"Sequence flow\" height=\"1000\" src=\"./flow.svg\" />\n</p>\n\n## Contributing\n\n1. Fork it (<https://github.com/hanneskaeufler/crytic/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Run tests locally with `crystal spec`\n4. Commit your changes (`git commit -am 'Add some feature'`)\n5. Push to the branch (`git push origin my-new-feature`)\n6. Create a new Pull Request\n\n## Contributors\n\n- [hanneskaeufler](https://github.com/hanneskaeufler) Hannes Käufler - creator, maintainer\n- [anicholson](https://github.com/anicholson) Andy Nicholson - contributor\n","program":{"html_id":"crytic/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"ancestors":[{"html_id":"crytic/Spec/Methods","kind":"module","full_name":"Spec::Methods","name":"Methods"},{"html_id":"crytic/Spec/Expectations","kind":"module","full_name":"Spec::Expectations","name":"Expectations"}],"locations":[],"repository_name":"crytic","program":true,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"crytic/Spec/Expectations","kind":"module","full_name":"Spec::Expectations","name":"Expectations"},{"html_id":"crytic/Spec/Methods","kind":"module","full_name":"Spec::Methods","name":"Methods"}],"extended_modules":[{"html_id":"crytic/Spec/Expectations","kind":"module","full_name":"Spec::Expectations","name":"Expectations"},{"html_id":"crytic/Spec/Methods","kind":"module","full_name":"Spec::Methods","name":"Methods"}],"types":[{"html_id":"crytic/Crytic","path":"Crytic.html","kind":"module","full_name":"Crytic","name":"Crytic","abstract":false,"locations":[{"filename":"src/crytic/cli.cr","line_number":4,"url":null},{"filename":"src/crytic/cli_options.cr","line_number":8,"url":null},{"filename":"src/crytic/diff.cr","line_number":1,"url":null},{"filename":"src/crytic/msi_calculator.cr","line_number":4,"url":null},{"filename":"src/crytic/mutation/require_resolver.cr","line_number":1,"url":null},{"filename":"src/crytic/process_process_runner.cr","line_number":4,"url":null},{"filename":"src/crytic/process_runner.cr","line_number":1,"url":null},{"filename":"src/crytic/subject.cr","line_number":6,"url":null},{"filename":"src/crytic/timeout.cr","line_number":1,"url":null},{"filename":"src/crytic/version.cr","line_number":1,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"8.0.1\""}],"types":[{"html_id":"crytic/Crytic/Cli","path":"Crytic/Cli.html","kind":"class","full_name":"Crytic::Cli","name":"Cli","abstract":false,"superclass":{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/cli.cr","line_number":6,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic","kind":"module","full_name":"Crytic","name":"Crytic"},"doc":"Main entrypoint for the crytic program. Delegates to the chosen command.","summary":"<p>Main entrypoint for the crytic program.</p>","constructors":[{"html_id":"new(side_effects:SideEffects)-class-method","name":"new","abstract":false,"args":[{"name":"side_effects","external_name":"side_effects","restriction":"SideEffects"}],"args_string":"(side_effects : SideEffects)","args_html":"(side_effects : <a href=\"../Crytic/SideEffects.html\">SideEffects</a>)","location":{"filename":"src/crytic/cli.cr","line_number":7,"url":null},"def":{"name":"new","args":[{"name":"side_effects","external_name":"side_effects","restriction":"SideEffects"}],"visibility":"Public","body":"_ = allocate\n_.initialize(side_effects)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"run(args)-instance-method","name":"run","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(args)","args_html":"(args)","location":{"filename":"src/crytic/cli.cr","line_number":10,"url":null},"def":{"name":"run","args":[{"name":"args","external_name":"args","restriction":""}],"visibility":"Public","body":"case args.first?\nwhen \"test\"\n  (Command::Test.new(@side_effects)).execute(args.tap(&.shift))\nwhen \"noop\"\n  (Command::Noop.new(@side_effects, Command::Noop::DEFAULT_SPEC_FILES_GLOB)).execute(args.tap(&.shift))\nelse\n  (Command::Test.new(@side_effects)).execute(args)\nend"}}]},{"html_id":"crytic/Crytic/CliOptions","path":"Crytic/CliOptions.html","kind":"class","full_name":"Crytic::CliOptions","name":"CliOptions","abstract":false,"superclass":{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/cli_options.cr","line_number":9,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"DEFAULT_SPEC_FILES_GLOB","name":"DEFAULT_SPEC_FILES_GLOB","value":"\"./spec/**/*_spec.cr\""}],"namespace":{"html_id":"crytic/Crytic","kind":"module","full_name":"Crytic","name":"Crytic"},"constructors":[{"html_id":"new(side_effects:SideEffects,spec_files_glob:String)-class-method","name":"new","abstract":false,"args":[{"name":"side_effects","external_name":"side_effects","restriction":"SideEffects"},{"name":"spec_files_glob","external_name":"spec_files_glob","restriction":"String"}],"args_string":"(side_effects : SideEffects, spec_files_glob : String)","args_html":"(side_effects : <a href=\"../Crytic/SideEffects.html\">SideEffects</a>, spec_files_glob : String)","location":{"filename":"src/crytic/cli_options.cr","line_number":18,"url":null},"def":{"name":"new","args":[{"name":"side_effects","external_name":"side_effects","restriction":"SideEffects"},{"name":"spec_files_glob","external_name":"spec_files_glob","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(side_effects, spec_files_glob)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"msi_threshold:Float64-instance-method","name":"msi_threshold","abstract":false,"location":{"filename":"src/crytic/cli_options.cr","line_number":11,"url":null},"def":{"name":"msi_threshold","visibility":"Public","body":"@msi_threshold"}},{"html_id":"mutants:Array(Mutant::Possibilities)-instance-method","name":"mutants","abstract":false,"location":{"filename":"src/crytic/cli_options.cr","line_number":12,"url":null},"def":{"name":"mutants","return_type":"Array(Mutant::Possibilities)","visibility":"Public","body":"@mutants"}},{"html_id":"parse(args)-instance-method","name":"parse","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(args)","args_html":"(args)","location":{"filename":"src/crytic/cli_options.cr","line_number":22,"url":null},"def":{"name":"parse","args":[{"name":"args","external_name":"args","restriction":""}],"visibility":"Public","body":"OptionParser.parse(args) do |parser|\n  parser.banner = \"Usage: crytic [test|noop] [arguments]\"\n  parser.on(\"-h\", \"--help\", \"Show this help\") do\n    @side_effects.std_out.puts(parser)\n    @side_effects.exit_fun.call(0)\n  end\n  parser.on(\"-m\", \"--min-msi=THRESHOLD\", \"Crytic will exit with zero if this threshold is reached.\") do |threshold|\n    @msi_threshold = threshold.to_f\n  end\n  parser.on(\"-p PREAMBLE\", \"--preamble=PREAMBLE\", \"Specifies the source code that is prepended to every full mutation source code. Will enable the fail_fast option of crystal spec by default.\") do |code|\n    @preamble = code\n  end\n  parser.on(\"-s SOURCE\", \"--subject=SOURCE\", \"Specifies the source file for the subject\") do |source|\n    @subject = [source]\n  end\n  parser.on(\"-r REPORTERS\", \"--reporters=REPORTERS\", \"Comma-separated list of reporters to be used.\") do |list|\n    list = (list.split(\",\")).map do |__arg0|\n      __arg0.strip.downcase\n    end\n    @reporters = [] of Reporter::Reporter\n    if list.includes?(\"console\")\n      @reporters << console_reporter\n    end\n    if list.includes?(\"stryker\")\n      @reporters << stryker_reporter\n    end\n    if list.includes?(\"consolefilesummary\")\n      @reporters << file_summary_reporter\n    end\n  end\n  parser.unknown_args do |unknown|\n    @spec_files = unknown\n  end\n  parser.invalid_option do |flag|\n    error(\"ERROR: #{flag} is not a valid option.\\n#{parser}\")\n  end\nend\nself\n"}},{"html_id":"preamble:String-instance-method","name":"preamble","abstract":false,"location":{"filename":"src/crytic/cli_options.cr","line_number":91,"url":null},"def":{"name":"preamble","visibility":"Public","body":"@preamble"}},{"html_id":"reporters:Array(Crytic::Reporter::Reporter)-instance-method","name":"reporters","abstract":false,"location":{"filename":"src/crytic/cli_options.cr","line_number":13,"url":null},"def":{"name":"reporters","visibility":"Public","body":"@reporters"}},{"html_id":"spec_files:Array(String)-instance-method","name":"spec_files","abstract":false,"location":{"filename":"src/crytic/cli_options.cr","line_number":63,"url":null},"def":{"name":"spec_files","return_type":"Array(String)","visibility":"Public","body":"files = if @spec_files.empty?\n  Dir[@spec_files_glob]\nelse\n  @spec_files\nend\nif files.empty?\n  error(\"No spec files given or found.\")\nend\nfiles.each do |spec_file|\n  if File.exists?(spec_file)\n  else\n    error(\"Spec file #{spec_file} doesn't exist.\")\n  end\nend\nfiles\n"}},{"html_id":"subject-instance-method","name":"subject","abstract":false,"location":{"filename":"src/crytic/cli_options.cr","line_number":83,"url":null},"def":{"name":"subject","visibility":"Public","body":"(if @subject.empty?\n  Dir[\"./src/**/*.cr\"]\nelse\n  @subject\nend).map do |path|\n  Subject.from_filepath(path)\nend"}}]},{"html_id":"crytic/Crytic/Command","path":"Crytic/Command.html","kind":"module","full_name":"Crytic::Command","name":"Command","abstract":false,"locations":[{"filename":"src/crytic/command/noop.cr","line_number":7,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic","kind":"module","full_name":"Crytic","name":"Crytic"},"types":[{"html_id":"crytic/Crytic/Command/Noop","path":"Crytic/Command/Noop.html","kind":"class","full_name":"Crytic::Command::Noop","name":"Noop","abstract":false,"superclass":{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/command/noop.cr","line_number":7,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"DEFAULT_SPEC_FILES_GLOB","name":"DEFAULT_SPEC_FILES_GLOB","value":"\"./spec/**/*_spec.cr\""}],"namespace":{"html_id":"crytic/Crytic/Command","kind":"module","full_name":"Crytic::Command","name":"Command"},"constructors":[{"html_id":"new(side_effects:SideEffects,spec_files_glob:String)-class-method","name":"new","abstract":false,"args":[{"name":"side_effects","external_name":"side_effects","restriction":"SideEffects"},{"name":"spec_files_glob","external_name":"spec_files_glob","restriction":"String"}],"args_string":"(side_effects : SideEffects, spec_files_glob : String)","args_html":"(side_effects : <a href=\"../../Crytic/SideEffects.html\">SideEffects</a>, spec_files_glob : String)","location":{"filename":"src/crytic/command/noop.cr","line_number":10,"url":null},"def":{"name":"new","args":[{"name":"side_effects","external_name":"side_effects","restriction":"SideEffects"},{"name":"spec_files_glob","external_name":"spec_files_glob","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(side_effects, spec_files_glob)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"execute(args)-instance-method","name":"execute","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(args)","args_html":"(args)","location":{"filename":"src/crytic/command/noop.cr","line_number":13,"url":null},"def":{"name":"execute","args":[{"name":"args","external_name":"args","restriction":""}],"visibility":"Public","body":"spec_files = parse_args(args)\ntracker = Mutation::Tracker.new\n@side_effects.std_out.puts(spec_files.join(\"\\n\") do |spec_file|\n  (Mutation::InjectMutatedSubjectIntoSpecs.new(spec_file, File.read(spec_file), irrelevant_subject, tracker)).to_mutated_source\nend)\ntrue\n"}}]},{"html_id":"crytic/Crytic/Command/Test","path":"Crytic/Command/Test.html","kind":"class","full_name":"Crytic::Command::Test","name":"Test","abstract":false,"superclass":{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/command/test.cr","line_number":8,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Command","kind":"module","full_name":"Crytic::Command","name":"Command"},"constructors":[{"html_id":"new(side_effects:SideEffects)-class-method","name":"new","abstract":false,"args":[{"name":"side_effects","external_name":"side_effects","restriction":"SideEffects"}],"args_string":"(side_effects : SideEffects)","args_html":"(side_effects : <a href=\"../../Crytic/SideEffects.html\">SideEffects</a>)","location":{"filename":"src/crytic/command/test.cr","line_number":9,"url":null},"def":{"name":"new","args":[{"name":"side_effects","external_name":"side_effects","restriction":"SideEffects"}],"visibility":"Public","body":"_ = allocate\n_.initialize(side_effects)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"execute(args)-instance-method","name":"execute","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(args)","args_html":"(args)","location":{"filename":"src/crytic/command/test.cr","line_number":12,"url":null},"def":{"name":"execute","args":[{"name":"args","external_name":"args","restriction":""}],"visibility":"Public","body":"options = parse_options(args)\ngenerator = build_generator(options)\nfactory = ->(specs : Array(String)) do\n  Mutation::NoMutation.with(specs)\nend\nCrytic::Runner::Sequential.new.run(Crytic::Runner::Run.from_options(options, generator, factory), @side_effects)\n"}}]}]},{"html_id":"crytic/Crytic/Diff","path":"Crytic/Diff.html","kind":"class","full_name":"Crytic::Diff(A, B)","name":"Diff","abstract":false,"superclass":{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/diff.cr","line_number":2,"url":null},{"filename":"src/crytic/diff.cr","line_number":180,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic","kind":"module","full_name":"Crytic","name":"Crytic"},"class_methods":[{"html_id":"unified_diff(a:String,b:String,n=3,newline=\"\\n\")-class-method","name":"unified_diff","abstract":false,"args":[{"name":"a","external_name":"a","restriction":"String"},{"name":"b","external_name":"b","restriction":"String"},{"name":"n","default_value":"3","external_name":"n","restriction":""},{"name":"newline","default_value":"\"\\n\"","external_name":"newline","restriction":""}],"args_string":"(a : String, b : String, n = 3, newline = \"\\n\")","args_html":"(a : String, b : String, n = <span class=\"n\">3</span>, newline = <span class=\"s\">&quot;\\n&quot;</span>)","location":{"filename":"src/crytic/diff.cr","line_number":244,"url":null},"def":{"name":"unified_diff","args":[{"name":"a","external_name":"a","restriction":"String"},{"name":"b","external_name":"b","restriction":"String"},{"name":"n","default_value":"3","external_name":"n","restriction":""},{"name":"newline","default_value":"\"\\n\"","external_name":"newline","restriction":""}],"visibility":"Public","body":"(unified_diff(a.lines, b.lines, n, newline)).join"}},{"html_id":"unified_diff(a,b,n=3,newline=\"\\n\")-class-method","name":"unified_diff","abstract":false,"args":[{"name":"a","external_name":"a","restriction":""},{"name":"b","external_name":"b","restriction":""},{"name":"n","default_value":"3","external_name":"n","restriction":""},{"name":"newline","default_value":"\"\\n\"","external_name":"newline","restriction":""}],"args_string":"(a, b, n = 3, newline = \"\\n\")","args_html":"(a, b, n = <span class=\"n\">3</span>, newline = <span class=\"s\">&quot;\\n&quot;</span>)","location":{"filename":"src/crytic/diff.cr","line_number":181,"url":null},"def":{"name":"unified_diff","args":[{"name":"a","external_name":"a","restriction":""},{"name":"b","external_name":"b","restriction":""},{"name":"n","default_value":"3","external_name":"n","restriction":""},{"name":"newline","default_value":"\"\\n\"","external_name":"newline","restriction":""}],"visibility":"Public","body":"diff = Diff.new(a, b)\nchunks = diff.run\nresult = [] of String\ngroup = [] of String\nstart_a = start_b = 0\nchunks.each_with_index do |cur, i|\n  if cur.no_change?\n    next\n  end\n  prv = i > 0 ? chunks[i - 1] : Chunk.new(diff, Type::NO_CHANGE, 0...0, 0...0)\n  nxt = chunks.fetch(i + 1) do\n    Chunk.new(diff, Type::NO_CHANGE, a.size...a.size, b.size...b.size)\n  end\n  if group.empty? && prv.no_change?\n    start_a = {prv.range_a.end - n, 0}.max\n    start_b = {prv.range_b.end - n, 0}.max\n    add_with_prefix(' ', prv.data.last(n), group)\n  end\n  add_with_prefix(cur.prefix, cur.colored_data, group)\n  if (!(group.last.ends_with?(newline))) && (cur.is_last_chunk?(a.size, b.size))\n    group[-1] = group[-1] + newline\n    group.push(\"\\\\ No newline at end of file#{newline}\")\n  end\n  if nxt.no_change?\n    if nxt.data.size > (n * 2) || i >= (chunks.size - 2)\n      add_with_prefix(' ', nxt.data.first(n), group)\n      size_a = {nxt.range_a.begin + n, a.size}.min - start_a\n      size_b = {nxt.range_b.begin + n, b.size}.min - start_b\n      if size_a == 0\n      else\n        start_a = start_a + 1\n      end\n      if size_b == 0\n      else\n        start_b = start_b + 1\n      end\n      result.push(build_group_header(start_a, size_a, start_b, size_b))\n      result = result + group\n      group.clear\n    else\n      add_with_prefix(' ', nxt.data, group)\n    end\n  end\nend\nresult\n"}}],"constructors":[{"html_id":"new(a:A,b:B)-class-method","name":"new","abstract":false,"args":[{"name":"a","external_name":"a","restriction":"A"},{"name":"b","external_name":"b","restriction":"B"}],"args_string":"(a : A, b : B)","args_html":"(a : A, b : B)","location":{"filename":"src/crytic/diff.cr","line_number":76,"url":null},"def":{"name":"new","args":[{"name":"a","external_name":"a","restriction":"A"},{"name":"b","external_name":"b","restriction":"B"}],"visibility":"Public","body":"_ = Diff(A, B).allocate\n_.initialize(a, b)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"a-instance-method","name":"a","abstract":false,"location":{"filename":"src/crytic/diff.cr","line_number":87,"url":null},"def":{"name":"a","visibility":"Public","body":"@reverse ? @b : @a"}},{"html_id":"b-instance-method","name":"b","abstract":false,"location":{"filename":"src/crytic/diff.cr","line_number":91,"url":null},"def":{"name":"b","visibility":"Public","body":"@reverse ? @a : @b"}},{"html_id":"edit_distance-instance-method","name":"edit_distance","abstract":false,"location":{"filename":"src/crytic/diff.cr","line_number":95,"url":null},"def":{"name":"edit_distance","visibility":"Public","body":"if ed = @edit_distance\n  return ed\nend\noffset = @m + 1\ndelta = @n - @m\nfp = Array.new((@m + @n) + 3, -1)\np = 0\nloop do\n  ((-p)..(delta - 1)).each do |k|\n    fp[k + offset] = snake(k, [fp[(k - 1) + offset] + 1, fp[(k + 1) + offset]].max)\n  end\n  ((delta + 1)..(delta + p)).reverse_each do |k|\n    fp[k + offset] = snake(k, [fp[(k - 1) + offset] + 1, fp[(k + 1) + offset]].max)\n  end\n  fp[delta + offset] = snake(delta, [fp[(delta - 1) + offset] + 1, fp[(delta + 1) + offset]].max)\n  if fp[delta + offset] == @n\n    return @edit_distance = delta + (p * 2)\n  end\n  p = p + 1\nend\n"}},{"html_id":"run-instance-method","name":"run","abstract":false,"location":{"filename":"src/crytic/diff.cr","line_number":130,"url":null},"def":{"name":"run","visibility":"Public","body":"edit_distance\nx, y = @m, @n\nchunk_list = [] of Chunk(self)\nloop do\n  i = @table[{x, y}]\n  if i != 0\n    chunk_list.push(chunk(Type::NO_CHANGE, (x - i)...x, (y - i)...y))\n  end\n  x, y = x - i, y - i\n  i = 0\n  flag = false\n  while @table[{x, y - 1}]?\n    y = y - 1\n    i = i + 1\n  end\n  if i != 0\n    chunk_list.push(chunk(Type::APPEND, x...x, y...(y + i)))\n    flag = true\n  end\n  i = 0\n  while @table[{x - 1, y}]?\n    x = x - 1\n    i = i + 1\n  end\n  if i != 0\n    chunk_list.push(chunk(Type::DELETE, x...(x + i), y...y))\n    if flag && @reverse\n      chunk_list[-1], chunk_list[-2] = chunk_list[-2], chunk_list[-1]\n    end\n  end\n  if (x == 0) && (y == 0)\n    return chunk_list.reverse!\n  end\nend\n"}}],"types":[{"html_id":"crytic/Crytic/Diff/Chunk","path":"Crytic/Diff/Chunk.html","kind":"struct","full_name":"Crytic::Diff::Chunk(T)","name":"Chunk","abstract":false,"superclass":{"html_id":"crytic/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crytic/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crytic/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/diff.cr","line_number":3,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Diff","kind":"class","full_name":"Crytic::Diff(A, B)","name":"Diff"},"constructors":[{"html_id":"new(diff:T,type:Type,range_a:Range(Int32,Int32),range_b:Range(Int32,Int32))-class-method","name":"new","abstract":false,"args":[{"name":"diff","external_name":"diff","restriction":"T"},{"name":"type","external_name":"type","restriction":"Type"},{"name":"range_a","external_name":"range_a","restriction":"Range(Int32, Int32)"},{"name":"range_b","external_name":"range_b","restriction":"Range(Int32, Int32)"}],"args_string":"(diff : T, type : Type, range_a : Range(Int32, Int32), range_b : Range(Int32, Int32))","args_html":"(diff : T, type : <a href=\"../../Crytic/Diff/Type.html\">Type</a>, range_a : Range(Int32, Int32), range_b : Range(Int32, Int32))","location":{"filename":"src/crytic/diff.cr","line_number":4,"url":null},"def":{"name":"new","args":[{"name":"diff","external_name":"diff","restriction":"T"},{"name":"type","external_name":"type","restriction":"Type"},{"name":"range_a","external_name":"range_a","restriction":"Range(Int32, Int32)"},{"name":"range_b","external_name":"range_b","restriction":"Range(Int32, Int32)"}],"visibility":"Public","body":"_ = Chunk(T).allocate\n_.initialize(diff, type, range_a, range_b)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"==(other:Chunk)-instance-method","name":"==","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Chunk"}],"args_string":"(other : Chunk)","args_html":"(other : <a href=\"../../Crytic/Diff/Chunk.html\">Chunk</a>)","location":{"filename":"src/crytic/diff.cr","line_number":35,"url":null},"def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":"Chunk"}],"visibility":"Public","body":"((type == other.type) && (range_a == other.range_a)) && (range_b == other.range_b)"}},{"html_id":"append?-instance-method","name":"append?","abstract":false,"location":{"filename":"src/crytic/diff.cr","line_number":14,"url":null},"def":{"name":"append?","visibility":"Public","body":"type == Type::APPEND"}},{"html_id":"colored_data-instance-method","name":"colored_data","abstract":false,"location":{"filename":"src/crytic/diff.cr","line_number":45,"url":null},"def":{"name":"colored_data","visibility":"Public","body":"data.map do |__arg0|\n  (__arg0.colorize(append? ? :green : :red)).to_s\nend"}},{"html_id":"data-instance-method","name":"data","abstract":false,"location":{"filename":"src/crytic/diff.cr","line_number":26,"url":null},"def":{"name":"data","visibility":"Public","body":"case type\nin Type::APPEND\n  diff.b[range_b]\nin Type::DELETE, Type::NO_CHANGE\n  diff.a[range_a]\nend"}},{"html_id":"delete?-instance-method","name":"delete?","abstract":false,"location":{"filename":"src/crytic/diff.cr","line_number":18,"url":null},"def":{"name":"delete?","visibility":"Public","body":"type == Type::DELETE"}},{"html_id":"diff-instance-method","name":"diff","abstract":false,"location":{"filename":"src/crytic/diff.cr","line_number":12,"url":null},"def":{"name":"diff","visibility":"Public","body":"@diff"}},{"html_id":"diff=(diff)-instance-method","name":"diff=","abstract":false,"args":[{"name":"diff","external_name":"diff","restriction":""}],"args_string":"(diff)","args_html":"(diff)","location":{"filename":"src/crytic/diff.cr","line_number":12,"url":null},"def":{"name":"diff=","args":[{"name":"diff","external_name":"diff","restriction":""}],"visibility":"Public","body":"@diff = diff"}},{"html_id":"is_last_chunk?(a_size,b_size)-instance-method","name":"is_last_chunk?","abstract":false,"args":[{"name":"a_size","external_name":"a_size","restriction":""},{"name":"b_size","external_name":"b_size","restriction":""}],"args_string":"(a_size, b_size)","args_html":"(a_size, b_size)","location":{"filename":"src/crytic/diff.cr","line_number":49,"url":null},"def":{"name":"is_last_chunk?","args":[{"name":"a_size","external_name":"a_size","restriction":""},{"name":"b_size","external_name":"b_size","restriction":""}],"visibility":"Public","body":"delete? ? range_a.end == a_size : range_b.end == b_size"}},{"html_id":"no_change?-instance-method","name":"no_change?","abstract":false,"location":{"filename":"src/crytic/diff.cr","line_number":22,"url":null},"def":{"name":"no_change?","visibility":"Public","body":"type == Type::NO_CHANGE"}},{"html_id":"prefix-instance-method","name":"prefix","abstract":false,"location":{"filename":"src/crytic/diff.cr","line_number":41,"url":null},"def":{"name":"prefix","visibility":"Public","body":"append? ? ('+'.colorize(:green)).to_s : ('-'.colorize(:red)).to_s"}},{"html_id":"range_a-instance-method","name":"range_a","abstract":false,"location":{"filename":"src/crytic/diff.cr","line_number":12,"url":null},"def":{"name":"range_a","visibility":"Public","body":"@range_a"}},{"html_id":"range_a=(range_a)-instance-method","name":"range_a=","abstract":false,"args":[{"name":"range_a","external_name":"range_a","restriction":""}],"args_string":"(range_a)","args_html":"(range_a)","location":{"filename":"src/crytic/diff.cr","line_number":12,"url":null},"def":{"name":"range_a=","args":[{"name":"range_a","external_name":"range_a","restriction":""}],"visibility":"Public","body":"@range_a = range_a"}},{"html_id":"range_b-instance-method","name":"range_b","abstract":false,"location":{"filename":"src/crytic/diff.cr","line_number":12,"url":null},"def":{"name":"range_b","visibility":"Public","body":"@range_b"}},{"html_id":"range_b=(range_b)-instance-method","name":"range_b=","abstract":false,"args":[{"name":"range_b","external_name":"range_b","restriction":""}],"args_string":"(range_b)","args_html":"(range_b)","location":{"filename":"src/crytic/diff.cr","line_number":12,"url":null},"def":{"name":"range_b=","args":[{"name":"range_b","external_name":"range_b","restriction":""}],"visibility":"Public","body":"@range_b = range_b"}},{"html_id":"type-instance-method","name":"type","abstract":false,"location":{"filename":"src/crytic/diff.cr","line_number":12,"url":null},"def":{"name":"type","visibility":"Public","body":"@type"}},{"html_id":"type=(type)-instance-method","name":"type=","abstract":false,"args":[{"name":"type","external_name":"type","restriction":""}],"args_string":"(type)","args_html":"(type)","location":{"filename":"src/crytic/diff.cr","line_number":12,"url":null},"def":{"name":"type=","args":[{"name":"type","external_name":"type","restriction":""}],"visibility":"Public","body":"@type = type"}}]},{"html_id":"crytic/Crytic/Diff/Type","path":"Crytic/Diff/Type.html","kind":"enum","full_name":"Crytic::Diff::Type","name":"Type","abstract":false,"ancestors":[{"html_id":"crytic/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"crytic/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"crytic/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/diff.cr","line_number":54,"url":null}],"repository_name":"crytic","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"NO_CHANGE","name":"NO_CHANGE","value":"0"},{"id":"APPEND","name":"APPEND","value":"1"},{"id":"DELETE","name":"DELETE","value":"2"}],"namespace":{"html_id":"crytic/Crytic/Diff","kind":"class","full_name":"Crytic::Diff(A, B)","name":"Diff"},"instance_methods":[{"html_id":"append?-instance-method","name":"append?","abstract":false,"location":{"filename":"src/crytic/diff.cr","line_number":56,"url":null},"def":{"name":"append?","visibility":"Public","body":"self == APPEND"}},{"html_id":"delete?-instance-method","name":"delete?","abstract":false,"location":{"filename":"src/crytic/diff.cr","line_number":57,"url":null},"def":{"name":"delete?","visibility":"Public","body":"self == DELETE"}},{"html_id":"no_change?-instance-method","name":"no_change?","abstract":false,"location":{"filename":"src/crytic/diff.cr","line_number":55,"url":null},"def":{"name":"no_change?","visibility":"Public","body":"self == NO_CHANGE"}},{"html_id":"reverse-instance-method","name":"reverse","abstract":false,"location":{"filename":"src/crytic/diff.cr","line_number":59,"url":null},"def":{"name":"reverse","visibility":"Public","body":"case self\nwhen APPEND\n  DELETE\nwhen DELETE\n  APPEND\nelse\n  self\nend"}}]}]},{"html_id":"crytic/Crytic/Generator","path":"Crytic/Generator.html","kind":"module","full_name":"Crytic::Generator","name":"Generator","abstract":false,"locations":[{"filename":"src/crytic/generator/generator.cr","line_number":5,"url":null},{"filename":"src/crytic/generator/in_memory_generator.cr","line_number":7,"url":null},{"filename":"src/crytic/generator/isolated_mutation_factory.cr","line_number":3,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"extended_modules":[{"html_id":"crytic/Crytic/Generator","kind":"module","full_name":"Crytic::Generator","name":"Generator"}],"namespace":{"html_id":"crytic/Crytic","kind":"module","full_name":"Crytic","name":"Crytic"},"instance_methods":[{"html_id":"isolated_mutation_factory(environment:Crytic::Mutation::Environment)-instance-method","name":"isolated_mutation_factory","abstract":false,"args":[{"name":"environment","external_name":"environment","restriction":"Crytic::Mutation::Environment"}],"args_string":"(environment : Crytic::Mutation::Environment)","args_html":"(environment : <a href=\"../Crytic/Mutation/Environment.html\">Crytic::Mutation::Environment</a>)","location":{"filename":"src/crytic/generator/isolated_mutation_factory.cr","line_number":6,"url":null},"def":{"name":"isolated_mutation_factory","args":[{"name":"environment","external_name":"environment","restriction":"Crytic::Mutation::Environment"}],"visibility":"Public","body":"(Mutation::IsolatedMutation.with(environment)).as(Mutation::Mutation)"}}],"types":[{"html_id":"crytic/Crytic/Generator/Generator","path":"Crytic/Generator/Generator.html","kind":"class","full_name":"Crytic::Generator::Generator","name":"Generator","abstract":true,"superclass":{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/generator/generator.cr","line_number":12,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"ALL_MUTANTS","name":"ALL_MUTANTS","value":"[Mutant::AndOrSwapPossibilities.new, Mutant::AnyAllSwapPossibilities.new, Mutant::BoolLiteralFlipPossibilities.new, Mutant::ConditionFlipPossibilities.new, Mutant::DropCallInVoidDefPossibilities.new, Mutant::NumberLiteralChangePossibilities.new, Mutant::NumberLiteralSignFlipPossibilities.new, Mutant::RegexLiteralChangePossibilities.new, Mutant::SelectRejectSwapPossibilities.new, Mutant::StringLiteralChangePossibilities.new, Mutant::SymbolLiteralChangePossibilities.new] of Mutant::Possibilities"},{"id":"DEFAULT_PREAMBLE","name":"DEFAULT_PREAMBLE","value":"\"require \\\"spec\\\"\\nSpec.fail_fast = true\\n\""}],"subclasses":[{"html_id":"crytic/Crytic/Generator/InMemoryMutationsGenerator","kind":"class","full_name":"Crytic::Generator::InMemoryMutationsGenerator","name":"InMemoryMutationsGenerator"}],"namespace":{"html_id":"crytic/Crytic/Generator","kind":"module","full_name":"Crytic::Generator","name":"Generator"},"instance_methods":[{"html_id":"mutations_for(subject:Array(Subject),specs:Array(String)):Array(MutationSet)-instance-method","name":"mutations_for","abstract":true,"args":[{"name":"subject","external_name":"subject","restriction":"Array(Subject)"},{"name":"specs","external_name":"specs","restriction":"Array(String)"}],"args_string":"(subject : Array(Subject), specs : Array(String)) : Array(MutationSet)","args_html":"(subject : Array(<a href=\"../../Crytic/Subject.html\">Subject</a>), specs : Array(String)) : Array(<a href=\"../../Crytic/Generator/MutationSet.html\">MutationSet</a>)","location":{"filename":"src/crytic/generator/generator.cr","line_number":33,"url":null},"def":{"name":"mutations_for","args":[{"name":"subject","external_name":"subject","restriction":"Array(Subject)"},{"name":"specs","external_name":"specs","restriction":"Array(String)"}],"return_type":"Array(MutationSet)","visibility":"Public","body":""}}]},{"html_id":"crytic/Crytic/Generator/InMemoryMutationsGenerator","path":"Crytic/Generator/InMemoryMutationsGenerator.html","kind":"class","full_name":"Crytic::Generator::InMemoryMutationsGenerator","name":"InMemoryMutationsGenerator","abstract":false,"superclass":{"html_id":"crytic/Crytic/Generator/Generator","kind":"class","full_name":"Crytic::Generator::Generator","name":"Generator"},"ancestors":[{"html_id":"crytic/Crytic/Generator/Generator","kind":"class","full_name":"Crytic::Generator::Generator","name":"Generator"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/generator/in_memory_generator.cr","line_number":9,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Generator","kind":"module","full_name":"Crytic::Generator","name":"Generator"},"doc":"Determines all possible mutations for the given source files.","summary":"<p>Determines all possible mutations for the given source files.</p>","constructors":[{"html_id":"new(possibilities:Array(Mutant::Possibilities),preamble:String,mutation_factory:MutationFactory,side_effects:SideEffects)-class-method","name":"new","abstract":false,"args":[{"name":"possibilities","external_name":"possibilities","restriction":"Array(Mutant::Possibilities)"},{"name":"preamble","external_name":"preamble","restriction":"String"},{"name":"mutation_factory","external_name":"mutation_factory","restriction":"MutationFactory"},{"name":"side_effects","external_name":"side_effects","restriction":"SideEffects"}],"args_string":"(possibilities : Array(Mutant::Possibilities), preamble : String, mutation_factory : MutationFactory, side_effects : SideEffects)","args_html":"(possibilities : Array(<a href=\"../../Crytic/Mutant/Possibilities.html\">Mutant::Possibilities</a>), preamble : String, mutation_factory : <a href=\"../../Crytic/Generator/InMemoryMutationsGenerator/MutationFactory.html\">MutationFactory</a>, side_effects : <a href=\"../../Crytic/SideEffects.html\">SideEffects</a>)","location":{"filename":"src/crytic/generator/in_memory_generator.cr","line_number":12,"url":null},"def":{"name":"new","args":[{"name":"possibilities","external_name":"possibilities","restriction":"Array(Mutant::Possibilities)"},{"name":"preamble","external_name":"preamble","restriction":"String"},{"name":"mutation_factory","external_name":"mutation_factory","restriction":"MutationFactory"},{"name":"side_effects","external_name":"side_effects","restriction":"SideEffects"}],"visibility":"Public","body":"_ = allocate\n_.initialize(possibilities, preamble, mutation_factory, side_effects)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"mutations_for(sources:Array(Subject),specs:Array(String)):Array(MutationSet)-instance-method","name":"mutations_for","abstract":false,"args":[{"name":"sources","external_name":"sources","restriction":"Array(Subject)"},{"name":"specs","external_name":"specs","restriction":"Array(String)"}],"args_string":"(sources : Array(Subject), specs : Array(String)) : Array(MutationSet)","args_html":"(sources : Array(<a href=\"../../Crytic/Subject.html\">Subject</a>), specs : Array(String)) : Array(<a href=\"../../Crytic/Generator/MutationSet.html\">MutationSet</a>)","location":{"filename":"src/crytic/generator/in_memory_generator.cr","line_number":20,"url":null},"def":{"name":"mutations_for","args":[{"name":"sources","external_name":"sources","restriction":"Array(Subject)"},{"name":"specs","external_name":"specs","restriction":"Array(String)"}],"return_type":"Array(MutationSet)","visibility":"Public","body":"sources.map do |src|\n  MutationSet.new(neutral: noop_mutation_for(src, specs), mutated: mutations_for(src, specs))\nend.reject do |__arg0|\n  __arg0.mutated.empty?\nend"}}],"types":[{"html_id":"crytic/Crytic/Generator/InMemoryMutationsGenerator/MutationFactory","path":"Crytic/Generator/InMemoryMutationsGenerator/MutationFactory.html","kind":"alias","full_name":"Crytic::Generator::InMemoryMutationsGenerator::MutationFactory","name":"MutationFactory","abstract":false,"locations":[{"filename":"src/crytic/generator/in_memory_generator.cr","line_number":10,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":true,"aliased":"Proc(Crytic::Mutation::Environment, Crytic::Mutation::Mutation)","aliased_html":"<a href=\"../../../Crytic/Mutation/Environment.html\">Crytic::Mutation::Environment</a> -> <a href=\"../../../Crytic/Mutation/Mutation.html\">Crytic::Mutation::Mutation</a>","const":false,"namespace":{"html_id":"crytic/Crytic/Generator/InMemoryMutationsGenerator","kind":"class","full_name":"Crytic::Generator::InMemoryMutationsGenerator","name":"InMemoryMutationsGenerator"}}]},{"html_id":"crytic/Crytic/Generator/MutationSet","path":"Crytic/Generator/MutationSet.html","kind":"struct","full_name":"Crytic::Generator::MutationSet","name":"MutationSet","abstract":false,"superclass":{"html_id":"crytic/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crytic/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crytic/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/generator/generator.cr","line_number":6,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Generator","kind":"module","full_name":"Crytic::Generator","name":"Generator"},"constructors":[{"html_id":"new(neutral:Mutation::Mutation,mutated:Array(Mutation::Mutation))-class-method","name":"new","abstract":false,"args":[{"name":"neutral","external_name":"neutral","restriction":"Mutation::Mutation"},{"name":"mutated","external_name":"mutated","restriction":"Array(Mutation::Mutation)"}],"args_string":"(neutral : Mutation::Mutation, mutated : Array(Mutation::Mutation))","args_html":"(neutral : <a href=\"../../Crytic/Mutation/Mutation.html\">Mutation::Mutation</a>, mutated : Array(<a href=\"../../Crytic/Mutation/Mutation.html\">Mutation::Mutation</a>))","location":{"filename":"src/crytic/generator/generator.cr","line_number":6,"url":null},"def":{"name":"new","args":[{"name":"neutral","external_name":"neutral","restriction":"Mutation::Mutation"},{"name":"mutated","external_name":"mutated","restriction":"Array(Mutation::Mutation)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(neutral, mutated)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"clone-instance-method","name":"clone","abstract":false,"location":{"filename":"src/crytic/generator/generator.cr","line_number":6,"url":null},"def":{"name":"clone","visibility":"Public","body":"self.class.new(@neutral.clone, @mutated.clone)"}},{"html_id":"copy_with(neutral_neutral=@neutral,mutated_mutated=@mutated)-instance-method","name":"copy_with","abstract":false,"args":[{"name":"_neutral","default_value":"@neutral","external_name":"neutral","restriction":""},{"name":"_mutated","default_value":"@mutated","external_name":"mutated","restriction":""}],"args_string":"(neutral _neutral = @neutral, mutated _mutated = @mutated)","args_html":"(neutral _neutral = @neutral, mutated _mutated = @mutated)","location":{"filename":"src/crytic/generator/generator.cr","line_number":6,"url":null},"def":{"name":"copy_with","args":[{"name":"_neutral","default_value":"@neutral","external_name":"neutral","restriction":""},{"name":"_mutated","default_value":"@mutated","external_name":"mutated","restriction":""}],"visibility":"Public","body":"self.class.new(_neutral, _mutated)"}},{"html_id":"mutated:Array(Mutation::Mutation)-instance-method","name":"mutated","abstract":false,"def":{"name":"mutated","return_type":"Array(Mutation::Mutation)","visibility":"Public","body":"@mutated"}},{"html_id":"neutral:Mutation::Mutation-instance-method","name":"neutral","abstract":false,"def":{"name":"neutral","return_type":"Mutation::Mutation","visibility":"Public","body":"@neutral"}},{"html_id":"number_of_mutations-instance-method","name":"number_of_mutations","abstract":false,"location":{"filename":"src/crytic/generator/generator.cr","line_number":7,"url":null},"def":{"name":"number_of_mutations","visibility":"Public","body":"mutated.size"}}]}]},{"html_id":"crytic/Crytic/MsiCalculator","path":"Crytic/MsiCalculator.html","kind":"class","full_name":"Crytic::MsiCalculator","name":"MsiCalculator","abstract":false,"superclass":{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/msi_calculator.cr","line_number":27,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic","kind":"module","full_name":"Crytic","name":"Crytic"},"doc":"Calculates a score based on\nhttps://infection.github.io/guide/#Mutation-Score-Indicator-MSI","summary":"<p>Calculates a score based on https://infection.github.io/guide/#Mutation-Score-Indicator-MSI</p>","constructors":[{"html_id":"new(results)-class-method","name":"new","abstract":false,"args":[{"name":"results","external_name":"results","restriction":""}],"args_string":"(results)","args_html":"(results)","location":{"filename":"src/crytic/msi_calculator.cr","line_number":30,"url":null},"def":{"name":"new","args":[{"name":"results","external_name":"results","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(results)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"msi:MutationScoreIndicator-instance-method","name":"msi","doc":"Returns the mutation score indicator for the mutation results of this\ninstance","summary":"<p>Returns the mutation score indicator for the mutation results of this instance</p>","abstract":false,"location":{"filename":"src/crytic/msi_calculator.cr","line_number":35,"url":null},"def":{"name":"msi","return_type":"MutationScoreIndicator","visibility":"Public","body":"total_defeated = (results.covered_count + results.timeout_count) + results.errored_count\nMutationScoreIndicator.new((total_defeated.to_f / results.total_count) * 100)\n"}}]},{"html_id":"crytic/Crytic/Mutant","path":"Crytic/Mutant.html","kind":"module","full_name":"Crytic::Mutant","name":"Mutant","abstract":false,"locations":[{"filename":"src/crytic/mutant/and_or_swap.cr","line_number":4,"url":null},{"filename":"src/crytic/mutant/and_or_swap_possibilities.cr","line_number":3,"url":null},{"filename":"src/crytic/mutant/any_all_swap.cr","line_number":4,"url":null},{"filename":"src/crytic/mutant/any_all_swap_possibilities.cr","line_number":3,"url":null},{"filename":"src/crytic/mutant/bool_literal_flip.cr","line_number":4,"url":null},{"filename":"src/crytic/mutant/bool_literal_flip_possibilities.cr","line_number":4,"url":null},{"filename":"src/crytic/mutant/condition_flip.cr","line_number":4,"url":null},{"filename":"src/crytic/mutant/condition_flip_possibilities.cr","line_number":4,"url":null},{"filename":"src/crytic/mutant/drop_call_in_void_def.cr","line_number":4,"url":null},{"filename":"src/crytic/mutant/drop_call_in_void_def_possibilities.cr","line_number":3,"url":null},{"filename":"src/crytic/mutant/full_location.cr","line_number":3,"url":null},{"filename":"src/crytic/mutant/mutant.cr","line_number":3,"url":null},{"filename":"src/crytic/mutant/noop.cr","line_number":4,"url":null},{"filename":"src/crytic/mutant/number_literal_change.cr","line_number":4,"url":null},{"filename":"src/crytic/mutant/number_literal_change_possibilities.cr","line_number":4,"url":null},{"filename":"src/crytic/mutant/number_literal_sign_flip.cr","line_number":4,"url":null},{"filename":"src/crytic/mutant/number_literal_sign_flip_possibilities.cr","line_number":3,"url":null},{"filename":"src/crytic/mutant/possibilities.cr","line_number":4,"url":null},{"filename":"src/crytic/mutant/regex_literal_change.cr","line_number":4,"url":null},{"filename":"src/crytic/mutant/regex_literal_change_possibilities.cr","line_number":4,"url":null},{"filename":"src/crytic/mutant/select_reject_swap.cr","line_number":4,"url":null},{"filename":"src/crytic/mutant/select_reject_swap_possibilities.cr","line_number":3,"url":null},{"filename":"src/crytic/mutant/string_literal_change.cr","line_number":4,"url":null},{"filename":"src/crytic/mutant/string_literal_change_possibilities.cr","line_number":3,"url":null},{"filename":"src/crytic/mutant/symbol_literal_change.cr","line_number":3,"url":null},{"filename":"src/crytic/mutant/symbol_literal_change_possibilities.cr","line_number":3,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic","kind":"module","full_name":"Crytic","name":"Crytic"},"macros":[{"html_id":"generate_possibilities_subclass(name,node)-macro","name":"generate_possibilities_subclass","abstract":false,"args":[{"name":"name","external_name":"name","restriction":""},{"name":"node","external_name":"node","restriction":""}],"args_string":"(name, node)","args_html":"(name, node)","location":{"filename":"src/crytic/mutant/possibilities.cr","line_number":33,"url":null},"def":{"name":"generate_possibilities_subclass","args":[{"name":"name","external_name":"name","restriction":""},{"name":"node","external_name":"node","restriction":""}],"visibility":"Public","body":"    class \n{{ name.id }}\n < Possibilities\n      def visit(node : \n{{ node }}\n)\n        location = node.location\n        unless location.nil?\n          @locations << FullLocation.new(location)\n        \nend\n        true\n      \nend\n    \nend\n  \n"}}],"types":[{"html_id":"crytic/Crytic/Mutant/AndOrSwap","path":"Crytic/Mutant/AndOrSwap.html","kind":"class","full_name":"Crytic::Mutant::AndOrSwap","name":"AndOrSwap","abstract":false,"superclass":{"html_id":"crytic/Crytic/Mutant/TransformerMutant","kind":"class","full_name":"Crytic::Mutant::TransformerMutant","name":"TransformerMutant"},"ancestors":[{"html_id":"crytic/Crytic/Mutant/TransformerMutant","kind":"class","full_name":"Crytic::Mutant::TransformerMutant","name":"TransformerMutant"},{"html_id":"crytic/Crystal/Transformer","kind":"class","full_name":"Crystal::Transformer","name":"Transformer"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/and_or_swap.cr","line_number":5,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"instance_methods":[{"html_id":"transform(node:Crystal::And|Crystal::Or)-instance-method","name":"transform","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::And | Crystal::Or"}],"args_string":"(node : Crystal::And | Crystal::Or)","args_html":"(node : Crystal::And | Crystal::Or)","location":{"filename":"src/crytic/mutant/and_or_swap.cr","line_number":6,"url":null},"def":{"name":"transform","args":[{"name":"node","external_name":"node","restriction":"Crystal::And | Crystal::Or"}],"visibility":"Public","body":"super(node)\nif @location.matches?(node)\n  return case node\n  when Crystal::And\n    Crystal::Or.new(node.left, node.right)\n  else\n    Crystal::And.new(node.left, node.right)\n  end\nend\nnode\n"}}]},{"html_id":"crytic/Crytic/Mutant/AndOrSwapPossibilities","path":"Crytic/Mutant/AndOrSwapPossibilities.html","kind":"class","full_name":"Crytic::Mutant::AndOrSwapPossibilities","name":"AndOrSwapPossibilities","abstract":false,"superclass":{"html_id":"crytic/Crytic/Mutant/Possibilities","kind":"class","full_name":"Crytic::Mutant::Possibilities","name":"Possibilities"},"ancestors":[{"html_id":"crytic/Crytic/Mutant/Possibilities","kind":"class","full_name":"Crytic::Mutant::Possibilities","name":"Possibilities"},{"html_id":"crytic/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/and_or_swap_possibilities.cr","line_number":4,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"instance_methods":[{"html_id":"mutant_class-instance-method","name":"mutant_class","abstract":false,"location":{"filename":"src/crytic/mutant/and_or_swap_possibilities.cr","line_number":4,"url":null},"def":{"name":"mutant_class","visibility":"Public","body":"Crytic::Mutant::AndOrSwap"}},{"html_id":"visit(node:Crystal::And|Crystal::Or)-instance-method","name":"visit","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::And | Crystal::Or"}],"args_string":"(node : Crystal::And | Crystal::Or)","args_html":"(node : Crystal::And | Crystal::Or)","location":{"filename":"src/crytic/mutant/and_or_swap_possibilities.cr","line_number":5,"url":null},"def":{"name":"visit","args":[{"name":"node","external_name":"node","restriction":"Crystal::And | Crystal::Or"}],"visibility":"Public","body":"location = node.location\nif location.nil?\nelse\n  @locations << (FullLocation.new(location, node.end_location))\nend\ntrue\n"}}]},{"html_id":"crytic/Crytic/Mutant/AnyAllSwap","path":"Crytic/Mutant/AnyAllSwap.html","kind":"class","full_name":"Crytic::Mutant::AnyAllSwap","name":"AnyAllSwap","abstract":false,"superclass":{"html_id":"crytic/Crytic/Mutant/TransformerMutant","kind":"class","full_name":"Crytic::Mutant::TransformerMutant","name":"TransformerMutant"},"ancestors":[{"html_id":"crytic/Crytic/Mutant/TransformerMutant","kind":"class","full_name":"Crytic::Mutant::TransformerMutant","name":"TransformerMutant"},{"html_id":"crytic/Crystal/Transformer","kind":"class","full_name":"Crystal::Transformer","name":"Transformer"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/any_all_swap.cr","line_number":5,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"instance_methods":[{"html_id":"transform(node:Crystal::Call)-instance-method","name":"transform","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::Call"}],"args_string":"(node : Crystal::Call)","args_html":"(node : Crystal::Call)","location":{"filename":"src/crytic/mutant/any_all_swap.cr","line_number":6,"url":null},"def":{"name":"transform","args":[{"name":"node","external_name":"node","restriction":"Crystal::Call"}],"visibility":"Public","body":"super(node)\nif @location.matches?(node)\nelse\n  return node\nend\nnew_node = node.clone\nnew_node.name = node.name == \"any?\" ? \"all?\" : \"any?\"\nnew_node\n"}}]},{"html_id":"crytic/Crytic/Mutant/AnyAllSwapPossibilities","path":"Crytic/Mutant/AnyAllSwapPossibilities.html","kind":"class","full_name":"Crytic::Mutant::AnyAllSwapPossibilities","name":"AnyAllSwapPossibilities","abstract":false,"superclass":{"html_id":"crytic/Crytic/Mutant/Possibilities","kind":"class","full_name":"Crytic::Mutant::Possibilities","name":"Possibilities"},"ancestors":[{"html_id":"crytic/Crytic/Mutant/Possibilities","kind":"class","full_name":"Crytic::Mutant::Possibilities","name":"Possibilities"},{"html_id":"crytic/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/any_all_swap_possibilities.cr","line_number":4,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"instance_methods":[{"html_id":"mutant_class-instance-method","name":"mutant_class","abstract":false,"location":{"filename":"src/crytic/mutant/any_all_swap_possibilities.cr","line_number":4,"url":null},"def":{"name":"mutant_class","visibility":"Public","body":"Crytic::Mutant::AnyAllSwap"}},{"html_id":"visit(node:Crystal::Call)-instance-method","name":"visit","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::Call"}],"args_string":"(node : Crystal::Call)","args_html":"(node : Crystal::Call)","location":{"filename":"src/crytic/mutant/any_all_swap_possibilities.cr","line_number":7,"url":null},"def":{"name":"visit","args":[{"name":"node","external_name":"node","restriction":"Crystal::Call"}],"visibility":"Public","body":"if ANY_ALL.includes?(node.name)\nelse\n  return true\nend\nlocation = node.location\nif location.nil?\nelse\n  @locations << (FullLocation.new(location, node.name_location))\nend\ntrue\n"}}]},{"html_id":"crytic/Crytic/Mutant/BoolLiteralFlip","path":"Crytic/Mutant/BoolLiteralFlip.html","kind":"class","full_name":"Crytic::Mutant::BoolLiteralFlip","name":"BoolLiteralFlip","abstract":false,"superclass":{"html_id":"crytic/Crytic/Mutant/VisitorMutant","kind":"class","full_name":"Crytic::Mutant::VisitorMutant","name":"VisitorMutant"},"ancestors":[{"html_id":"crytic/Crytic/Mutant/VisitorMutant","kind":"class","full_name":"Crytic::Mutant::VisitorMutant","name":"VisitorMutant"},{"html_id":"crytic/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/bool_literal_flip.cr","line_number":5,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"instance_methods":[{"html_id":"visit(node:Crystal::BoolLiteral)-instance-method","name":"visit","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::BoolLiteral"}],"args_string":"(node : Crystal::BoolLiteral)","args_html":"(node : Crystal::BoolLiteral)","location":{"filename":"src/crytic/mutant/bool_literal_flip.cr","line_number":6,"url":null},"def":{"name":"visit","args":[{"name":"node","external_name":"node","restriction":"Crystal::BoolLiteral"}],"visibility":"Public","body":"if @location.matches?(node)\n  node.value = !node.value\nend\ntrue\n"}}]},{"html_id":"crytic/Crytic/Mutant/BoolLiteralFlipPossibilities","path":"Crytic/Mutant/BoolLiteralFlipPossibilities.html","kind":"class","full_name":"Crytic::Mutant::BoolLiteralFlipPossibilities","name":"BoolLiteralFlipPossibilities","abstract":false,"superclass":{"html_id":"crytic/Crytic/Mutant/Possibilities","kind":"class","full_name":"Crytic::Mutant::Possibilities","name":"Possibilities"},"ancestors":[{"html_id":"crytic/Crytic/Mutant/Possibilities","kind":"class","full_name":"Crytic::Mutant::Possibilities","name":"Possibilities"},{"html_id":"crytic/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/bool_literal_flip_possibilities.cr","line_number":5,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"instance_methods":[{"html_id":"mutant_class-instance-method","name":"mutant_class","abstract":false,"def":{"name":"mutant_class","visibility":"Public","body":"Crytic::Mutant::BoolLiteralFlip"}},{"html_id":"visit(node:Crystal::BoolLiteral)-instance-method","name":"visit","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::BoolLiteral"}],"args_string":"(node : Crystal::BoolLiteral)","args_html":"(node : Crystal::BoolLiteral)","location":{"filename":"src/crytic/mutant/bool_literal_flip_possibilities.cr","line_number":5,"url":null},"def":{"name":"visit","args":[{"name":"node","external_name":"node","restriction":"Crystal::BoolLiteral"}],"visibility":"Public","body":"location = node.location\nif location.nil?\nelse\n  @locations << (FullLocation.new(location))\nend\ntrue\n"}}]},{"html_id":"crytic/Crytic/Mutant/ConditionFlip","path":"Crytic/Mutant/ConditionFlip.html","kind":"class","full_name":"Crytic::Mutant::ConditionFlip","name":"ConditionFlip","abstract":false,"superclass":{"html_id":"crytic/Crytic/Mutant/VisitorMutant","kind":"class","full_name":"Crytic::Mutant::VisitorMutant","name":"VisitorMutant"},"ancestors":[{"html_id":"crytic/Crytic/Mutant/VisitorMutant","kind":"class","full_name":"Crytic::Mutant::VisitorMutant","name":"VisitorMutant"},{"html_id":"crytic/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/condition_flip.cr","line_number":5,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"instance_methods":[{"html_id":"visit(node:Crystal::If)-instance-method","name":"visit","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::If"}],"args_string":"(node : Crystal::If)","args_html":"(node : Crystal::If)","location":{"filename":"src/crytic/mutant/condition_flip.cr","line_number":6,"url":null},"def":{"name":"visit","args":[{"name":"node","external_name":"node","restriction":"Crystal::If"}],"visibility":"Public","body":"if @location.matches?(node)\n  tmp = node.else\n  node.else = node.then\n  node.then = tmp\nend\ntrue\n"}}]},{"html_id":"crytic/Crytic/Mutant/ConditionFlipPossibilities","path":"Crytic/Mutant/ConditionFlipPossibilities.html","kind":"class","full_name":"Crytic::Mutant::ConditionFlipPossibilities","name":"ConditionFlipPossibilities","abstract":false,"superclass":{"html_id":"crytic/Crytic/Mutant/Possibilities","kind":"class","full_name":"Crytic::Mutant::Possibilities","name":"Possibilities"},"ancestors":[{"html_id":"crytic/Crytic/Mutant/Possibilities","kind":"class","full_name":"Crytic::Mutant::Possibilities","name":"Possibilities"},{"html_id":"crytic/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/condition_flip_possibilities.cr","line_number":5,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"instance_methods":[{"html_id":"mutant_class-instance-method","name":"mutant_class","abstract":false,"def":{"name":"mutant_class","visibility":"Public","body":"Crytic::Mutant::ConditionFlip"}},{"html_id":"visit(node:Crystal::If)-instance-method","name":"visit","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::If"}],"args_string":"(node : Crystal::If)","args_html":"(node : Crystal::If)","location":{"filename":"src/crytic/mutant/condition_flip_possibilities.cr","line_number":5,"url":null},"def":{"name":"visit","args":[{"name":"node","external_name":"node","restriction":"Crystal::If"}],"visibility":"Public","body":"location = node.location\nif location.nil?\nelse\n  @locations << (FullLocation.new(location))\nend\ntrue\n"}}]},{"html_id":"crytic/Crytic/Mutant/DropCallInVoidDef","path":"Crytic/Mutant/DropCallInVoidDef.html","kind":"class","full_name":"Crytic::Mutant::DropCallInVoidDef","name":"DropCallInVoidDef","abstract":false,"superclass":{"html_id":"crytic/Crytic/Mutant/TransformerMutant","kind":"class","full_name":"Crytic::Mutant::TransformerMutant","name":"TransformerMutant"},"ancestors":[{"html_id":"crytic/Crytic/Mutant/TransformerMutant","kind":"class","full_name":"Crytic::Mutant::TransformerMutant","name":"TransformerMutant"},{"html_id":"crytic/Crystal/Transformer","kind":"class","full_name":"Crystal::Transformer","name":"Transformer"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/drop_call_in_void_def.cr","line_number":5,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"instance_methods":[{"html_id":"transform(node:Crystal::Call)-instance-method","name":"transform","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::Call"}],"args_string":"(node : Crystal::Call)","args_html":"(node : Crystal::Call)","location":{"filename":"src/crytic/mutant/drop_call_in_void_def.cr","line_number":6,"url":null},"def":{"name":"transform","args":[{"name":"node","external_name":"node","restriction":"Crystal::Call"}],"visibility":"Public","body":"super(node)\nif @location.matches?(node)\nelse\n  return node\nend\nCrystal::NilLiteral.new\n"}}]},{"html_id":"crytic/Crytic/Mutant/DropCallInVoidDefPossibilities","path":"Crytic/Mutant/DropCallInVoidDefPossibilities.html","kind":"class","full_name":"Crytic::Mutant::DropCallInVoidDefPossibilities","name":"DropCallInVoidDefPossibilities","abstract":false,"superclass":{"html_id":"crytic/Crytic/Mutant/Possibilities","kind":"class","full_name":"Crytic::Mutant::Possibilities","name":"Possibilities"},"ancestors":[{"html_id":"crytic/Crytic/Mutant/Possibilities","kind":"class","full_name":"Crytic::Mutant::Possibilities","name":"Possibilities"},{"html_id":"crytic/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/drop_call_in_void_def_possibilities.cr","line_number":4,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"instance_methods":[{"html_id":"mutant_class-instance-method","name":"mutant_class","abstract":false,"location":{"filename":"src/crytic/mutant/drop_call_in_void_def_possibilities.cr","line_number":4,"url":null},"def":{"name":"mutant_class","visibility":"Public","body":"Crytic::Mutant::DropCallInVoidDef"}},{"html_id":"visit(node:Crystal::Def)-instance-method","name":"visit","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::Def"}],"args_string":"(node : Crystal::Def)","args_html":"(node : Crystal::Def)","location":{"filename":"src/crytic/mutant/drop_call_in_void_def_possibilities.cr","line_number":5,"url":null},"def":{"name":"visit","args":[{"name":"node","external_name":"node","restriction":"Crystal::Def"}],"visibility":"Public","body":"location = node.location\nif location.nil?\nelse\n  if def_is_return_void(node)\n    node_body = node.body\n    case node_body\n    when Crystal::Expressions\n      mark_calls_in_body_expression(node_body)\n    when Crystal::Call\n      mark_single_call_in_body(node_body)\n    end\n  end\nend\ntrue\n"}}]},{"html_id":"crytic/Crytic/Mutant/FullLocation","path":"Crytic/Mutant/FullLocation.html","kind":"struct","full_name":"Crytic::Mutant::FullLocation","name":"FullLocation","abstract":false,"superclass":{"html_id":"crytic/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crytic/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crytic/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/full_location.cr","line_number":4,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"class_methods":[{"html_id":"at(filename,line_number,column_number,name_location=nil)-class-method","name":"at","abstract":false,"args":[{"name":"filename","external_name":"filename","restriction":""},{"name":"line_number","external_name":"line_number","restriction":""},{"name":"column_number","external_name":"column_number","restriction":""},{"name":"name_location","default_value":"nil","external_name":"name_location","restriction":""}],"args_string":"(filename, line_number, column_number, name_location = nil)","args_html":"(filename, line_number, column_number, name_location = <span class=\"n\">nil</span>)","location":{"filename":"src/crytic/mutant/full_location.cr","line_number":8,"url":null},"def":{"name":"at","args":[{"name":"filename","external_name":"filename","restriction":""},{"name":"line_number","external_name":"line_number","restriction":""},{"name":"column_number","external_name":"column_number","restriction":""},{"name":"name_location","default_value":"nil","external_name":"name_location","restriction":""}],"visibility":"Public","body":"new(Crystal::Location.new(filename, line_number, column_number), name_location)"}}],"constructors":[{"html_id":"new(location:Crystal::Location,name_location:Crystal::Location?=nil)-class-method","name":"new","abstract":false,"args":[{"name":"location","external_name":"location","restriction":"Crystal::Location"},{"name":"name_location","default_value":"nil","external_name":"name_location","restriction":"Crystal::Location | ::Nil"}],"args_string":"(location : Crystal::Location, name_location : Crystal::Location? = nil)","args_html":"(location : Crystal::Location, name_location : Crystal::Location? = <span class=\"n\">nil</span>)","location":{"filename":"src/crytic/mutant/full_location.cr","line_number":4,"url":null},"def":{"name":"new","args":[{"name":"location","external_name":"location","restriction":"Crystal::Location"},{"name":"name_location","default_value":"nil","external_name":"name_location","restriction":"Crystal::Location | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(location, name_location)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"clone-instance-method","name":"clone","abstract":false,"location":{"filename":"src/crytic/mutant/full_location.cr","line_number":4,"url":null},"def":{"name":"clone","visibility":"Public","body":"self.class.new(@location.clone, @name_location.clone)"}},{"html_id":"column_number(*args,**options)-instance-method","name":"column_number","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crytic/mutant/full_location.cr","line_number":7,"url":null},"def":{"name":"column_number","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"location.column_number(*args, **options)"}},{"html_id":"column_number(*args,**options,&)-instance-method","name":"column_number","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crytic/mutant/full_location.cr","line_number":7,"url":null},"def":{"name":"column_number","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"location.column_number(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"copy_with(location_location=@location,name_location_name_location=@name_location)-instance-method","name":"copy_with","abstract":false,"args":[{"name":"_location","default_value":"@location","external_name":"location","restriction":""},{"name":"_name_location","default_value":"@name_location","external_name":"name_location","restriction":""}],"args_string":"(location _location = @location, name_location _name_location = @name_location)","args_html":"(location _location = @location, name_location _name_location = @name_location)","location":{"filename":"src/crytic/mutant/full_location.cr","line_number":4,"url":null},"def":{"name":"copy_with","args":[{"name":"_location","default_value":"@location","external_name":"location","restriction":""},{"name":"_name_location","default_value":"@name_location","external_name":"name_location","restriction":""}],"visibility":"Public","body":"self.class.new(_location, _name_location)"}},{"html_id":"line_number(*args,**options)-instance-method","name":"line_number","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crytic/mutant/full_location.cr","line_number":7,"url":null},"def":{"name":"line_number","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"location.line_number(*args, **options)"}},{"html_id":"line_number(*args,**options,&)-instance-method","name":"line_number","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crytic/mutant/full_location.cr","line_number":7,"url":null},"def":{"name":"line_number","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"location.line_number(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"location:Crystal::Location-instance-method","name":"location","abstract":false,"def":{"name":"location","return_type":"Crystal::Location","visibility":"Public","body":"@location"}},{"html_id":"matches?(node:Crystal::And|Crystal::Or)-instance-method","name":"matches?","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::And | Crystal::Or"}],"args_string":"(node : Crystal::And | Crystal::Or)","args_html":"(node : Crystal::And | Crystal::Or)","location":{"filename":"src/crytic/mutant/full_location.cr","line_number":13,"url":null},"def":{"name":"matches?","args":[{"name":"node","external_name":"node","restriction":"Crystal::And | Crystal::Or"}],"visibility":"Public","body":"node_location = node.location\nif node_location.nil?\n  return false\nend\nif name_location.nil?\n  return is_same(node_location, location)\nend\n(is_same(node_location, location)) && (is_same(node.end_location, name_location))\n"}},{"html_id":"matches?(node:Crystal::ASTNode)-instance-method","name":"matches?","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::ASTNode"}],"args_string":"(node : Crystal::ASTNode)","args_html":"(node : Crystal::ASTNode)","location":{"filename":"src/crytic/mutant/full_location.cr","line_number":21,"url":null},"def":{"name":"matches?","args":[{"name":"node","external_name":"node","restriction":"Crystal::ASTNode"}],"visibility":"Public","body":"node_location = node.location\nif node_location.nil?\n  return false\nend\nif name_location.nil?\n  return is_same(node_location, location)\nend\n(is_same(node_location, location)) && (is_same(node.name_location, name_location))\n"}},{"html_id":"name_location:Crystal::Location?-instance-method","name":"name_location","abstract":false,"def":{"name":"name_location","return_type":"Crystal::Location | ::Nil","visibility":"Public","body":"@name_location"}}]},{"html_id":"crytic/Crytic/Mutant/Mutant","path":"Crytic/Mutant/Mutant.html","kind":"alias","full_name":"Crytic::Mutant::Mutant","name":"Mutant","abstract":false,"locations":[{"filename":"src/crytic/mutant/mutant.cr","line_number":4,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":true,"aliased":"(Crytic::Mutant::TransformerMutant | Crytic::Mutant::VisitorMutant)","aliased_html":"<a href=\"../../Crytic/Mutant/TransformerMutant.html\">Crytic::Mutant::TransformerMutant</a> | <a href=\"../../Crytic/Mutant/VisitorMutant.html\">Crytic::Mutant::VisitorMutant</a>","const":false,"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"}},{"html_id":"crytic/Crytic/Mutant/Noop","path":"Crytic/Mutant/Noop.html","kind":"class","full_name":"Crytic::Mutant::Noop","name":"Noop","abstract":false,"superclass":{"html_id":"crytic/Crytic/Mutant/VisitorMutant","kind":"class","full_name":"Crytic::Mutant::VisitorMutant","name":"VisitorMutant"},"ancestors":[{"html_id":"crytic/Crytic/Mutant/VisitorMutant","kind":"class","full_name":"Crytic::Mutant::VisitorMutant","name":"VisitorMutant"},{"html_id":"crytic/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/noop.cr","line_number":5,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"class_methods":[{"html_id":"at_irrelevant_location(src)-class-method","name":"at_irrelevant_location","abstract":false,"args":[{"name":"src","external_name":"src","restriction":""}],"args_string":"(src)","args_html":"(src)","location":{"filename":"src/crytic/mutant/noop.cr","line_number":6,"url":null},"def":{"name":"at_irrelevant_location","args":[{"name":"src","external_name":"src","restriction":""}],"visibility":"Public","body":"at(FullLocation.at(src, 0, 0))"}}]},{"html_id":"crytic/Crytic/Mutant/NumberLiteralChange","path":"Crytic/Mutant/NumberLiteralChange.html","kind":"class","full_name":"Crytic::Mutant::NumberLiteralChange","name":"NumberLiteralChange","abstract":false,"superclass":{"html_id":"crytic/Crytic/Mutant/VisitorMutant","kind":"class","full_name":"Crytic::Mutant::VisitorMutant","name":"VisitorMutant"},"ancestors":[{"html_id":"crytic/Crytic/Mutant/VisitorMutant","kind":"class","full_name":"Crytic::Mutant::VisitorMutant","name":"VisitorMutant"},{"html_id":"crytic/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/number_literal_change.cr","line_number":5,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"instance_methods":[{"html_id":"visit(node:Crystal::NumberLiteral)-instance-method","name":"visit","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::NumberLiteral"}],"args_string":"(node : Crystal::NumberLiteral)","args_html":"(node : Crystal::NumberLiteral)","location":{"filename":"src/crytic/mutant/number_literal_change.cr","line_number":6,"url":null},"def":{"name":"visit","args":[{"name":"node","external_name":"node","restriction":"Crystal::NumberLiteral"}],"visibility":"Public","body":"if @location.matches?(node)\n  node.value = if node.value == \"0\"\n    \"1\"\n  else\n    \"0\"\n  end\nend\ntrue\n"}}]},{"html_id":"crytic/Crytic/Mutant/NumberLiteralChangePossibilities","path":"Crytic/Mutant/NumberLiteralChangePossibilities.html","kind":"class","full_name":"Crytic::Mutant::NumberLiteralChangePossibilities","name":"NumberLiteralChangePossibilities","abstract":false,"superclass":{"html_id":"crytic/Crytic/Mutant/Possibilities","kind":"class","full_name":"Crytic::Mutant::Possibilities","name":"Possibilities"},"ancestors":[{"html_id":"crytic/Crytic/Mutant/Possibilities","kind":"class","full_name":"Crytic::Mutant::Possibilities","name":"Possibilities"},{"html_id":"crytic/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/number_literal_change_possibilities.cr","line_number":5,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"instance_methods":[{"html_id":"mutant_class-instance-method","name":"mutant_class","abstract":false,"def":{"name":"mutant_class","visibility":"Public","body":"Crytic::Mutant::NumberLiteralChange"}},{"html_id":"visit(node:Crystal::NumberLiteral)-instance-method","name":"visit","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::NumberLiteral"}],"args_string":"(node : Crystal::NumberLiteral)","args_html":"(node : Crystal::NumberLiteral)","location":{"filename":"src/crytic/mutant/number_literal_change_possibilities.cr","line_number":5,"url":null},"def":{"name":"visit","args":[{"name":"node","external_name":"node","restriction":"Crystal::NumberLiteral"}],"visibility":"Public","body":"location = node.location\nif location.nil?\nelse\n  @locations << (FullLocation.new(location))\nend\ntrue\n"}}]},{"html_id":"crytic/Crytic/Mutant/NumberLiteralSignFlip","path":"Crytic/Mutant/NumberLiteralSignFlip.html","kind":"class","full_name":"Crytic::Mutant::NumberLiteralSignFlip","name":"NumberLiteralSignFlip","abstract":false,"superclass":{"html_id":"crytic/Crytic/Mutant/VisitorMutant","kind":"class","full_name":"Crytic::Mutant::VisitorMutant","name":"VisitorMutant"},"ancestors":[{"html_id":"crytic/Crytic/Mutant/VisitorMutant","kind":"class","full_name":"Crytic::Mutant::VisitorMutant","name":"VisitorMutant"},{"html_id":"crytic/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/number_literal_sign_flip.cr","line_number":5,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"instance_methods":[{"html_id":"visit(node:Crystal::NumberLiteral)-instance-method","name":"visit","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::NumberLiteral"}],"args_string":"(node : Crystal::NumberLiteral)","args_html":"(node : Crystal::NumberLiteral)","location":{"filename":"src/crytic/mutant/number_literal_sign_flip.cr","line_number":6,"url":null},"def":{"name":"visit","args":[{"name":"node","external_name":"node","restriction":"Crystal::NumberLiteral"}],"visibility":"Public","body":"if @location.matches?(node)\n  node.value = \"(-1*#{node.value})\"\nend\ntrue\n"}}]},{"html_id":"crytic/Crytic/Mutant/NumberLiteralSignFlipPossibilities","path":"Crytic/Mutant/NumberLiteralSignFlipPossibilities.html","kind":"class","full_name":"Crytic::Mutant::NumberLiteralSignFlipPossibilities","name":"NumberLiteralSignFlipPossibilities","abstract":false,"superclass":{"html_id":"crytic/Crytic/Mutant/Possibilities","kind":"class","full_name":"Crytic::Mutant::Possibilities","name":"Possibilities"},"ancestors":[{"html_id":"crytic/Crytic/Mutant/Possibilities","kind":"class","full_name":"Crytic::Mutant::Possibilities","name":"Possibilities"},{"html_id":"crytic/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/number_literal_sign_flip_possibilities.cr","line_number":4,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"instance_methods":[{"html_id":"mutant_class-instance-method","name":"mutant_class","abstract":false,"location":{"filename":"src/crytic/mutant/number_literal_sign_flip_possibilities.cr","line_number":4,"url":null},"def":{"name":"mutant_class","visibility":"Public","body":"Crytic::Mutant::NumberLiteralSignFlip"}},{"html_id":"visit(node:Crystal::NumberLiteral)-instance-method","name":"visit","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::NumberLiteral"}],"args_string":"(node : Crystal::NumberLiteral)","args_html":"(node : Crystal::NumberLiteral)","location":{"filename":"src/crytic/mutant/number_literal_sign_flip_possibilities.cr","line_number":5,"url":null},"def":{"name":"visit","args":[{"name":"node","external_name":"node","restriction":"Crystal::NumberLiteral"}],"visibility":"Public","body":"if node.value == \"0\"\n  return true\nend\nif is_unsigned_type(node)\n  return true\nend\nlocation = node.location\nif location.nil?\nelse\n  @locations << (FullLocation.new(location))\nend\ntrue\n"}}]},{"html_id":"crytic/Crytic/Mutant/Possibilities","path":"Crytic/Mutant/Possibilities.html","kind":"class","full_name":"Crytic::Mutant::Possibilities","name":"Possibilities","abstract":true,"superclass":{"html_id":"crytic/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},"ancestors":[{"html_id":"crytic/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/possibilities.cr","line_number":7,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"crytic/Crytic/Mutant/AndOrSwapPossibilities","kind":"class","full_name":"Crytic::Mutant::AndOrSwapPossibilities","name":"AndOrSwapPossibilities"},{"html_id":"crytic/Crytic/Mutant/AnyAllSwapPossibilities","kind":"class","full_name":"Crytic::Mutant::AnyAllSwapPossibilities","name":"AnyAllSwapPossibilities"},{"html_id":"crytic/Crytic/Mutant/BoolLiteralFlipPossibilities","kind":"class","full_name":"Crytic::Mutant::BoolLiteralFlipPossibilities","name":"BoolLiteralFlipPossibilities"},{"html_id":"crytic/Crytic/Mutant/ConditionFlipPossibilities","kind":"class","full_name":"Crytic::Mutant::ConditionFlipPossibilities","name":"ConditionFlipPossibilities"},{"html_id":"crytic/Crytic/Mutant/DropCallInVoidDefPossibilities","kind":"class","full_name":"Crytic::Mutant::DropCallInVoidDefPossibilities","name":"DropCallInVoidDefPossibilities"},{"html_id":"crytic/Crytic/Mutant/NumberLiteralChangePossibilities","kind":"class","full_name":"Crytic::Mutant::NumberLiteralChangePossibilities","name":"NumberLiteralChangePossibilities"},{"html_id":"crytic/Crytic/Mutant/NumberLiteralSignFlipPossibilities","kind":"class","full_name":"Crytic::Mutant::NumberLiteralSignFlipPossibilities","name":"NumberLiteralSignFlipPossibilities"},{"html_id":"crytic/Crytic/Mutant/RegexLiteralChangePossibilities","kind":"class","full_name":"Crytic::Mutant::RegexLiteralChangePossibilities","name":"RegexLiteralChangePossibilities"},{"html_id":"crytic/Crytic/Mutant/SelectRejectSwapPossibilities","kind":"class","full_name":"Crytic::Mutant::SelectRejectSwapPossibilities","name":"SelectRejectSwapPossibilities"},{"html_id":"crytic/Crytic/Mutant/StringLiteralChangePossibilities","kind":"class","full_name":"Crytic::Mutant::StringLiteralChangePossibilities","name":"StringLiteralChangePossibilities"},{"html_id":"crytic/Crytic/Mutant/SymbolLiteralChangePossibilities","kind":"class","full_name":"Crytic::Mutant::SymbolLiteralChangePossibilities","name":"SymbolLiteralChangePossibilities"}],"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"doc":"An instance of this marks the possibility of a mutation at a certain\ncode location.","summary":"<p>An instance of this marks the possibility of a mutation at a certain code location.</p>","instance_methods":[{"html_id":"empty?-instance-method","name":"empty?","doc":"True if there aren't any locations found.","summary":"<p>True if there aren't any locations found.</p>","abstract":false,"location":{"filename":"src/crytic/mutant/possibilities.cr","line_number":18,"url":null},"def":{"name":"empty?","visibility":"Public","body":"@locations.size == 0"}},{"html_id":"locations:Array(Crytic::Mutant::FullLocation)-instance-method","name":"locations","abstract":false,"location":{"filename":"src/crytic/mutant/possibilities.cr","line_number":14,"url":null},"def":{"name":"locations","visibility":"Public","body":"@locations"}},{"html_id":"reset-instance-method","name":"reset","doc":"Clears the locations in this instance.","summary":"<p>Clears the locations in this instance.</p>","abstract":false,"location":{"filename":"src/crytic/mutant/possibilities.cr","line_number":23,"url":null},"def":{"name":"reset","visibility":"Public","body":"@locations = [] of FullLocation\nself\n"}},{"html_id":"visit(node:Crystal::ASTNode)-instance-method","name":"visit","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::ASTNode"}],"args_string":"(node : Crystal::ASTNode)","args_html":"(node : Crystal::ASTNode)","location":{"filename":"src/crytic/mutant/possibilities.cr","line_number":28,"url":null},"def":{"name":"visit","args":[{"name":"node","external_name":"node","restriction":"Crystal::ASTNode"}],"visibility":"Public","body":"true"}}]},{"html_id":"crytic/Crytic/Mutant/RegexLiteralChange","path":"Crytic/Mutant/RegexLiteralChange.html","kind":"class","full_name":"Crytic::Mutant::RegexLiteralChange","name":"RegexLiteralChange","abstract":false,"superclass":{"html_id":"crytic/Crytic/Mutant/VisitorMutant","kind":"class","full_name":"Crytic::Mutant::VisitorMutant","name":"VisitorMutant"},"ancestors":[{"html_id":"crytic/Crytic/Mutant/VisitorMutant","kind":"class","full_name":"Crytic::Mutant::VisitorMutant","name":"VisitorMutant"},{"html_id":"crytic/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/regex_literal_change.cr","line_number":5,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"instance_methods":[{"html_id":"visit(node:Crystal::RegexLiteral)-instance-method","name":"visit","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::RegexLiteral"}],"args_string":"(node : Crystal::RegexLiteral)","args_html":"(node : Crystal::RegexLiteral)","location":{"filename":"src/crytic/mutant/regex_literal_change.cr","line_number":6,"url":null},"def":{"name":"visit","args":[{"name":"node","external_name":"node","restriction":"Crystal::RegexLiteral"}],"visibility":"Public","body":"if @location.matches?(node)\n  node.value = Crystal::StringLiteral.new(\"a^\")\nend\ntrue\n"}}]},{"html_id":"crytic/Crytic/Mutant/RegexLiteralChangePossibilities","path":"Crytic/Mutant/RegexLiteralChangePossibilities.html","kind":"class","full_name":"Crytic::Mutant::RegexLiteralChangePossibilities","name":"RegexLiteralChangePossibilities","abstract":false,"superclass":{"html_id":"crytic/Crytic/Mutant/Possibilities","kind":"class","full_name":"Crytic::Mutant::Possibilities","name":"Possibilities"},"ancestors":[{"html_id":"crytic/Crytic/Mutant/Possibilities","kind":"class","full_name":"Crytic::Mutant::Possibilities","name":"Possibilities"},{"html_id":"crytic/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/regex_literal_change_possibilities.cr","line_number":5,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"instance_methods":[{"html_id":"mutant_class-instance-method","name":"mutant_class","abstract":false,"def":{"name":"mutant_class","visibility":"Public","body":"Crytic::Mutant::RegexLiteralChange"}},{"html_id":"visit(node:Crystal::RegexLiteral)-instance-method","name":"visit","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::RegexLiteral"}],"args_string":"(node : Crystal::RegexLiteral)","args_html":"(node : Crystal::RegexLiteral)","location":{"filename":"src/crytic/mutant/regex_literal_change_possibilities.cr","line_number":5,"url":null},"def":{"name":"visit","args":[{"name":"node","external_name":"node","restriction":"Crystal::RegexLiteral"}],"visibility":"Public","body":"location = node.location\nif location.nil?\nelse\n  @locations << (FullLocation.new(location))\nend\ntrue\n"}}]},{"html_id":"crytic/Crytic/Mutant/SelectRejectSwap","path":"Crytic/Mutant/SelectRejectSwap.html","kind":"class","full_name":"Crytic::Mutant::SelectRejectSwap","name":"SelectRejectSwap","abstract":false,"superclass":{"html_id":"crytic/Crytic/Mutant/TransformerMutant","kind":"class","full_name":"Crytic::Mutant::TransformerMutant","name":"TransformerMutant"},"ancestors":[{"html_id":"crytic/Crytic/Mutant/TransformerMutant","kind":"class","full_name":"Crytic::Mutant::TransformerMutant","name":"TransformerMutant"},{"html_id":"crytic/Crystal/Transformer","kind":"class","full_name":"Crystal::Transformer","name":"Transformer"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/select_reject_swap.cr","line_number":5,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"instance_methods":[{"html_id":"transform(node:Crystal::Call)-instance-method","name":"transform","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::Call"}],"args_string":"(node : Crystal::Call)","args_html":"(node : Crystal::Call)","location":{"filename":"src/crytic/mutant/select_reject_swap.cr","line_number":6,"url":null},"def":{"name":"transform","args":[{"name":"node","external_name":"node","restriction":"Crystal::Call"}],"visibility":"Public","body":"super(node)\nif (SelectRejectSwapPossibilities::SELECT_REJECT.includes?(node.name)) && (@location.matches?(node))\nelse\n  return node\nend\nnew_node = node.clone\nnew_node.name = node.name == \"reject\" ? \"select\" : \"reject\"\nnew_node\n"}}]},{"html_id":"crytic/Crytic/Mutant/SelectRejectSwapPossibilities","path":"Crytic/Mutant/SelectRejectSwapPossibilities.html","kind":"class","full_name":"Crytic::Mutant::SelectRejectSwapPossibilities","name":"SelectRejectSwapPossibilities","abstract":false,"superclass":{"html_id":"crytic/Crytic/Mutant/Possibilities","kind":"class","full_name":"Crytic::Mutant::Possibilities","name":"Possibilities"},"ancestors":[{"html_id":"crytic/Crytic/Mutant/Possibilities","kind":"class","full_name":"Crytic::Mutant::Possibilities","name":"Possibilities"},{"html_id":"crytic/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/select_reject_swap_possibilities.cr","line_number":4,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"SELECT_REJECT","name":"SELECT_REJECT","value":"[\"select\", \"reject\"] of ::String"}],"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"instance_methods":[{"html_id":"mutant_class-instance-method","name":"mutant_class","abstract":false,"location":{"filename":"src/crytic/mutant/select_reject_swap_possibilities.cr","line_number":4,"url":null},"def":{"name":"mutant_class","visibility":"Public","body":"Crytic::Mutant::SelectRejectSwap"}},{"html_id":"visit(node:Crystal::Call)-instance-method","name":"visit","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::Call"}],"args_string":"(node : Crystal::Call)","args_html":"(node : Crystal::Call)","location":{"filename":"src/crytic/mutant/select_reject_swap_possibilities.cr","line_number":7,"url":null},"def":{"name":"visit","args":[{"name":"node","external_name":"node","restriction":"Crystal::Call"}],"visibility":"Public","body":"if SELECT_REJECT.includes?(node.name)\nelse\n  return true\nend\nlocation = node.location\nif location.nil?\nelse\n  @locations << (FullLocation.new(location, node.name_location))\nend\ntrue\n"}}]},{"html_id":"crytic/Crytic/Mutant/StringLiteralChange","path":"Crytic/Mutant/StringLiteralChange.html","kind":"class","full_name":"Crytic::Mutant::StringLiteralChange","name":"StringLiteralChange","abstract":false,"superclass":{"html_id":"crytic/Crytic/Mutant/VisitorMutant","kind":"class","full_name":"Crytic::Mutant::VisitorMutant","name":"VisitorMutant"},"ancestors":[{"html_id":"crytic/Crytic/Mutant/VisitorMutant","kind":"class","full_name":"Crytic::Mutant::VisitorMutant","name":"VisitorMutant"},{"html_id":"crytic/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/string_literal_change.cr","line_number":5,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"instance_methods":[{"html_id":"visit(node:Crystal::StringLiteral)-instance-method","name":"visit","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::StringLiteral"}],"args_string":"(node : Crystal::StringLiteral)","args_html":"(node : Crystal::StringLiteral)","location":{"filename":"src/crytic/mutant/string_literal_change.cr","line_number":6,"url":null},"def":{"name":"visit","args":[{"name":"node","external_name":"node","restriction":"Crystal::StringLiteral"}],"visibility":"Public","body":"if @location.matches?(node)\n  node.value = if node.value.empty?\n    \"__crytic__\"\n  else\n    \"\"\n  end\nend\ntrue\n"}}]},{"html_id":"crytic/Crytic/Mutant/StringLiteralChangePossibilities","path":"Crytic/Mutant/StringLiteralChangePossibilities.html","kind":"class","full_name":"Crytic::Mutant::StringLiteralChangePossibilities","name":"StringLiteralChangePossibilities","abstract":false,"superclass":{"html_id":"crytic/Crytic/Mutant/Possibilities","kind":"class","full_name":"Crytic::Mutant::Possibilities","name":"Possibilities"},"ancestors":[{"html_id":"crytic/Crytic/Mutant/Possibilities","kind":"class","full_name":"Crytic::Mutant::Possibilities","name":"Possibilities"},{"html_id":"crytic/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/string_literal_change_possibilities.cr","line_number":4,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"instance_methods":[{"html_id":"mutant_class-instance-method","name":"mutant_class","abstract":false,"def":{"name":"mutant_class","visibility":"Public","body":"Crytic::Mutant::StringLiteralChange"}},{"html_id":"visit(node:Crystal::StringLiteral)-instance-method","name":"visit","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::StringLiteral"}],"args_string":"(node : Crystal::StringLiteral)","args_html":"(node : Crystal::StringLiteral)","location":{"filename":"src/crytic/mutant/string_literal_change_possibilities.cr","line_number":4,"url":null},"def":{"name":"visit","args":[{"name":"node","external_name":"node","restriction":"Crystal::StringLiteral"}],"visibility":"Public","body":"location = node.location\nif location.nil?\nelse\n  @locations << (FullLocation.new(location))\nend\ntrue\n"}}]},{"html_id":"crytic/Crytic/Mutant/SymbolLiteralChange","path":"Crytic/Mutant/SymbolLiteralChange.html","kind":"class","full_name":"Crytic::Mutant::SymbolLiteralChange","name":"SymbolLiteralChange","abstract":false,"superclass":{"html_id":"crytic/Crytic/Mutant/VisitorMutant","kind":"class","full_name":"Crytic::Mutant::VisitorMutant","name":"VisitorMutant"},"ancestors":[{"html_id":"crytic/Crytic/Mutant/VisitorMutant","kind":"class","full_name":"Crytic::Mutant::VisitorMutant","name":"VisitorMutant"},{"html_id":"crytic/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/symbol_literal_change.cr","line_number":4,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"instance_methods":[{"html_id":"visit(node:Crystal::SymbolLiteral)-instance-method","name":"visit","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::SymbolLiteral"}],"args_string":"(node : Crystal::SymbolLiteral)","args_html":"(node : Crystal::SymbolLiteral)","location":{"filename":"src/crytic/mutant/symbol_literal_change.cr","line_number":5,"url":null},"def":{"name":"visit","args":[{"name":"node","external_name":"node","restriction":"Crystal::SymbolLiteral"}],"visibility":"Public","body":"if @location.matches?(node)\n  node.value = \"__crytic__#{node.value}\"\nend\ntrue\n"}}]},{"html_id":"crytic/Crytic/Mutant/SymbolLiteralChangePossibilities","path":"Crytic/Mutant/SymbolLiteralChangePossibilities.html","kind":"class","full_name":"Crytic::Mutant::SymbolLiteralChangePossibilities","name":"SymbolLiteralChangePossibilities","abstract":false,"superclass":{"html_id":"crytic/Crytic/Mutant/Possibilities","kind":"class","full_name":"Crytic::Mutant::Possibilities","name":"Possibilities"},"ancestors":[{"html_id":"crytic/Crytic/Mutant/Possibilities","kind":"class","full_name":"Crytic::Mutant::Possibilities","name":"Possibilities"},{"html_id":"crytic/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/symbol_literal_change_possibilities.cr","line_number":4,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"instance_methods":[{"html_id":"mutant_class-instance-method","name":"mutant_class","abstract":false,"location":{"filename":"src/crytic/mutant/symbol_literal_change_possibilities.cr","line_number":4,"url":null},"def":{"name":"mutant_class","visibility":"Public","body":"Crytic::Mutant::SymbolLiteralChange"}},{"html_id":"visit(node:Crystal::SymbolLiteral)-instance-method","name":"visit","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::SymbolLiteral"}],"args_string":"(node : Crystal::SymbolLiteral)","args_html":"(node : Crystal::SymbolLiteral)","location":{"filename":"src/crytic/mutant/symbol_literal_change_possibilities.cr","line_number":5,"url":null},"def":{"name":"visit","args":[{"name":"node","external_name":"node","restriction":"Crystal::SymbolLiteral"}],"visibility":"Public","body":"location = node.location\nif location\n  @locations << (FullLocation.new(location))\nend\ntrue\n"}}]},{"html_id":"crytic/Crytic/Mutant/TransformerMutant","path":"Crytic/Mutant/TransformerMutant.html","kind":"class","full_name":"Crytic::Mutant::TransformerMutant","name":"TransformerMutant","abstract":true,"superclass":{"html_id":"crytic/Crystal/Transformer","kind":"class","full_name":"Crystal::Transformer","name":"Transformer"},"ancestors":[{"html_id":"crytic/Crystal/Transformer","kind":"class","full_name":"Crystal::Transformer","name":"Transformer"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/mutant.cr","line_number":6,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"crytic/Crytic/Mutant/AndOrSwap","kind":"class","full_name":"Crytic::Mutant::AndOrSwap","name":"AndOrSwap"},{"html_id":"crytic/Crytic/Mutant/AnyAllSwap","kind":"class","full_name":"Crytic::Mutant::AnyAllSwap","name":"AnyAllSwap"},{"html_id":"crytic/Crytic/Mutant/DropCallInVoidDef","kind":"class","full_name":"Crytic::Mutant::DropCallInVoidDef","name":"DropCallInVoidDef"},{"html_id":"crytic/Crytic/Mutant/SelectRejectSwap","kind":"class","full_name":"Crytic::Mutant::SelectRejectSwap","name":"SelectRejectSwap"}],"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"class_methods":[{"html_id":"at(location:FullLocation)-class-method","name":"at","abstract":false,"args":[{"name":"location","external_name":"location","restriction":"FullLocation"}],"args_string":"(location : FullLocation)","args_html":"(location : <a href=\"../../Crytic/Mutant/FullLocation.html\">FullLocation</a>)","location":{"filename":"src/crytic/mutant/mutant.cr","line_number":9,"url":null},"def":{"name":"at","args":[{"name":"location","external_name":"location","restriction":"FullLocation"}],"visibility":"Public","body":"new(location)"}}],"instance_methods":[{"html_id":"location:Crytic::Mutant::FullLocation-instance-method","name":"location","abstract":false,"location":{"filename":"src/crytic/mutant/mutant.cr","line_number":7,"url":null},"def":{"name":"location","visibility":"Public","body":"@location"}}]},{"html_id":"crytic/Crytic/Mutant/VisitorMutant","path":"Crytic/Mutant/VisitorMutant.html","kind":"class","full_name":"Crytic::Mutant::VisitorMutant","name":"VisitorMutant","abstract":true,"superclass":{"html_id":"crytic/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},"ancestors":[{"html_id":"crytic/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutant/mutant.cr","line_number":17,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"crytic/Crytic/Mutant/BoolLiteralFlip","kind":"class","full_name":"Crytic::Mutant::BoolLiteralFlip","name":"BoolLiteralFlip"},{"html_id":"crytic/Crytic/Mutant/ConditionFlip","kind":"class","full_name":"Crytic::Mutant::ConditionFlip","name":"ConditionFlip"},{"html_id":"crytic/Crytic/Mutant/Noop","kind":"class","full_name":"Crytic::Mutant::Noop","name":"Noop"},{"html_id":"crytic/Crytic/Mutant/NumberLiteralChange","kind":"class","full_name":"Crytic::Mutant::NumberLiteralChange","name":"NumberLiteralChange"},{"html_id":"crytic/Crytic/Mutant/NumberLiteralSignFlip","kind":"class","full_name":"Crytic::Mutant::NumberLiteralSignFlip","name":"NumberLiteralSignFlip"},{"html_id":"crytic/Crytic/Mutant/RegexLiteralChange","kind":"class","full_name":"Crytic::Mutant::RegexLiteralChange","name":"RegexLiteralChange"},{"html_id":"crytic/Crytic/Mutant/StringLiteralChange","kind":"class","full_name":"Crytic::Mutant::StringLiteralChange","name":"StringLiteralChange"},{"html_id":"crytic/Crytic/Mutant/SymbolLiteralChange","kind":"class","full_name":"Crytic::Mutant::SymbolLiteralChange","name":"SymbolLiteralChange"}],"namespace":{"html_id":"crytic/Crytic/Mutant","kind":"module","full_name":"Crytic::Mutant","name":"Mutant"},"class_methods":[{"html_id":"at(location:FullLocation)-class-method","name":"at","abstract":false,"args":[{"name":"location","external_name":"location","restriction":"FullLocation"}],"args_string":"(location : FullLocation)","args_html":"(location : <a href=\"../../Crytic/Mutant/FullLocation.html\">FullLocation</a>)","location":{"filename":"src/crytic/mutant/mutant.cr","line_number":20,"url":null},"def":{"name":"at","args":[{"name":"location","external_name":"location","restriction":"FullLocation"}],"visibility":"Public","body":"new(location)"}}],"instance_methods":[{"html_id":"location:Crytic::Mutant::FullLocation-instance-method","name":"location","abstract":false,"location":{"filename":"src/crytic/mutant/mutant.cr","line_number":18,"url":null},"def":{"name":"location","visibility":"Public","body":"@location"}},{"html_id":"visit(node:Crystal::ASTNode)-instance-method","name":"visit","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::ASTNode"}],"args_string":"(node : Crystal::ASTNode)","args_html":"(node : Crystal::ASTNode)","location":{"filename":"src/crytic/mutant/mutant.cr","line_number":24,"url":null},"def":{"name":"visit","args":[{"name":"node","external_name":"node","restriction":"Crystal::ASTNode"}],"visibility":"Public","body":"true"}}]}]},{"html_id":"crytic/Crytic/MutatedSubject","path":"Crytic/MutatedSubject.html","kind":"struct","full_name":"Crytic::MutatedSubject","name":"MutatedSubject","abstract":false,"superclass":{"html_id":"crytic/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crytic/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crytic/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/subject.cr","line_number":41,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic","kind":"module","full_name":"Crytic","name":"Crytic"},"constructors":[{"html_id":"new(path:String,original_source_code:String,source_code:String)-class-method","name":"new","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"String"},{"name":"original_source_code","external_name":"original_source_code","restriction":"String"},{"name":"source_code","external_name":"source_code","restriction":"String"}],"args_string":"(path : String, original_source_code : String, source_code : String)","args_html":"(path : String, original_source_code : String, source_code : String)","location":{"filename":"src/crytic/subject.cr","line_number":41,"url":null},"def":{"name":"new","args":[{"name":"path","external_name":"path","restriction":"String"},{"name":"original_source_code","external_name":"original_source_code","restriction":"String"},{"name":"source_code","external_name":"source_code","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(path, original_source_code, source_code)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"clone-instance-method","name":"clone","abstract":false,"location":{"filename":"src/crytic/subject.cr","line_number":41,"url":null},"def":{"name":"clone","visibility":"Public","body":"self.class.new(@path.clone, @original_source_code.clone, @source_code.clone)"}},{"html_id":"copy_with(path_path=@path,original_source_code_original_source_code=@original_source_code,source_code_source_code=@source_code)-instance-method","name":"copy_with","abstract":false,"args":[{"name":"_path","default_value":"@path","external_name":"path","restriction":""},{"name":"_original_source_code","default_value":"@original_source_code","external_name":"original_source_code","restriction":""},{"name":"_source_code","default_value":"@source_code","external_name":"source_code","restriction":""}],"args_string":"(path _path = @path, original_source_code _original_source_code = @original_source_code, source_code _source_code = @source_code)","args_html":"(path _path = @path, original_source_code _original_source_code = @original_source_code, source_code _source_code = @source_code)","location":{"filename":"src/crytic/subject.cr","line_number":41,"url":null},"def":{"name":"copy_with","args":[{"name":"_path","default_value":"@path","external_name":"path","restriction":""},{"name":"_original_source_code","default_value":"@original_source_code","external_name":"original_source_code","restriction":""},{"name":"_source_code","default_value":"@source_code","external_name":"source_code","restriction":""}],"visibility":"Public","body":"self.class.new(_path, _original_source_code, _source_code)"}},{"html_id":"diff-instance-method","name":"diff","abstract":false,"location":{"filename":"src/crytic/subject.cr","line_number":42,"url":null},"def":{"name":"diff","visibility":"Public","body":"(Crytic::Diff.unified_diff(original_source_code, source_code)).to_s"}},{"html_id":"original_source_code:String-instance-method","name":"original_source_code","abstract":false,"def":{"name":"original_source_code","return_type":"String","visibility":"Public","body":"@original_source_code"}},{"html_id":"path:String-instance-method","name":"path","abstract":false,"def":{"name":"path","return_type":"String","visibility":"Public","body":"@path"}},{"html_id":"source_code:String-instance-method","name":"source_code","abstract":false,"def":{"name":"source_code","return_type":"String","visibility":"Public","body":"@source_code"}},{"html_id":"source_or_other_source(other_path)-instance-method","name":"source_or_other_source","abstract":false,"args":[{"name":"other_path","external_name":"other_path","restriction":""}],"args_string":"(other_path)","args_html":"(other_path)","location":{"filename":"src/crytic/subject.cr","line_number":46,"url":null},"def":{"name":"source_or_other_source","args":[{"name":"other_path","external_name":"other_path","restriction":""}],"visibility":"Public","body":"if (File.expand_path(path.gsub(/^#{FileUtils.pwd}\\//, \"\"))) == other_path\n  source_code\nelse\n  File.read(other_path)\nend"}}]},{"html_id":"crytic/Crytic/Mutation","path":"Crytic/Mutation.html","kind":"module","full_name":"Crytic::Mutation","name":"Mutation","abstract":false,"locations":[{"filename":"src/crytic/mutation/config.cr","line_number":4,"url":null},{"filename":"src/crytic/mutation/environment.cr","line_number":3,"url":null},{"filename":"src/crytic/mutation/inject_mutated_subject_into_specs.cr","line_number":5,"url":null},{"filename":"src/crytic/mutation/isolated_mutation.cr","line_number":9,"url":null},{"filename":"src/crytic/mutation/mutation.cr","line_number":3,"url":null},{"filename":"src/crytic/mutation/no_mutation.cr","line_number":5,"url":null},{"filename":"src/crytic/mutation/original_result.cr","line_number":1,"url":null},{"filename":"src/crytic/mutation/require_resolver.cr","line_number":1,"url":null},{"filename":"src/crytic/mutation/result.cr","line_number":3,"url":null},{"filename":"src/crytic/mutation/result_set.cr","line_number":1,"url":null},{"filename":"src/crytic/mutation/tracker.cr","line_number":4,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic","kind":"module","full_name":"Crytic","name":"Crytic"},"types":[{"html_id":"crytic/Crytic/Mutation/Config","path":"Crytic/Mutation/Config.html","kind":"struct","full_name":"Crytic::Mutation::Config","name":"Config","abstract":false,"superclass":{"html_id":"crytic/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crytic/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crytic/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutation/config.cr","line_number":5,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutation","kind":"module","full_name":"Crytic::Mutation","name":"Mutation"},"class_methods":[{"html_id":"noop(src,specs,preamble)-class-method","name":"noop","abstract":false,"args":[{"name":"src","external_name":"src","restriction":""},{"name":"specs","external_name":"specs","restriction":""},{"name":"preamble","external_name":"preamble","restriction":""}],"args_string":"(src, specs, preamble)","args_html":"(src, specs, preamble)","location":{"filename":"src/crytic/mutation/config.cr","line_number":10,"url":null},"def":{"name":"noop","args":[{"name":"src","external_name":"src","restriction":""},{"name":"specs","external_name":"specs","restriction":""},{"name":"preamble","external_name":"preamble","restriction":""}],"visibility":"Public","body":"new(Mutant::Noop.at_irrelevant_location(src), Subject.from_filepath(src), specs, preamble)"}}],"constructors":[{"html_id":"new(mutant:Mutant::Mutant,subject:Subject,specs:Array(String),preamble:String)-class-method","name":"new","abstract":false,"args":[{"name":"mutant","external_name":"mutant","restriction":"Mutant::Mutant"},{"name":"subject","external_name":"subject","restriction":"Subject"},{"name":"specs","external_name":"specs","restriction":"Array(String)"},{"name":"preamble","external_name":"preamble","restriction":"String"}],"args_string":"(mutant : Mutant::Mutant, subject : Subject, specs : Array(String), preamble : String)","args_html":"(mutant : <a href=\"../../Crytic/Mutant/Mutant.html\">Mutant::Mutant</a>, subject : <a href=\"../../Crytic/Subject.html\">Subject</a>, specs : Array(String), preamble : String)","location":{"filename":"src/crytic/mutation/config.cr","line_number":5,"url":null},"def":{"name":"new","args":[{"name":"mutant","external_name":"mutant","restriction":"Mutant::Mutant"},{"name":"subject","external_name":"subject","restriction":"Subject"},{"name":"specs","external_name":"specs","restriction":"Array(String)"},{"name":"preamble","external_name":"preamble","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(mutant, subject, specs, preamble)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"clone-instance-method","name":"clone","abstract":false,"location":{"filename":"src/crytic/mutation/config.cr","line_number":5,"url":null},"def":{"name":"clone","visibility":"Public","body":"self.class.new(@mutant.clone, @subject.clone, @specs.clone, @preamble.clone)"}},{"html_id":"copy_with(mutant_mutant=@mutant,subject_subject=@subject,specs_specs=@specs,preamble_preamble=@preamble)-instance-method","name":"copy_with","abstract":false,"args":[{"name":"_mutant","default_value":"@mutant","external_name":"mutant","restriction":""},{"name":"_subject","default_value":"@subject","external_name":"subject","restriction":""},{"name":"_specs","default_value":"@specs","external_name":"specs","restriction":""},{"name":"_preamble","default_value":"@preamble","external_name":"preamble","restriction":""}],"args_string":"(mutant _mutant = @mutant, subject _subject = @subject, specs _specs = @specs, preamble _preamble = @preamble)","args_html":"(mutant _mutant = @mutant, subject _subject = @subject, specs _specs = @specs, preamble _preamble = @preamble)","location":{"filename":"src/crytic/mutation/config.cr","line_number":5,"url":null},"def":{"name":"copy_with","args":[{"name":"_mutant","default_value":"@mutant","external_name":"mutant","restriction":""},{"name":"_subject","default_value":"@subject","external_name":"subject","restriction":""},{"name":"_specs","default_value":"@specs","external_name":"specs","restriction":""},{"name":"_preamble","default_value":"@preamble","external_name":"preamble","restriction":""}],"visibility":"Public","body":"self.class.new(_mutant, _subject, _specs, _preamble)"}},{"html_id":"mutant:Mutant::Mutant-instance-method","name":"mutant","abstract":false,"def":{"name":"mutant","return_type":"Mutant::Mutant","visibility":"Public","body":"@mutant"}},{"html_id":"preamble:String-instance-method","name":"preamble","abstract":false,"def":{"name":"preamble","return_type":"String","visibility":"Public","body":"@preamble"}},{"html_id":"specs:Array(String)-instance-method","name":"specs","abstract":false,"def":{"name":"specs","return_type":"Array(String)","visibility":"Public","body":"@specs"}},{"html_id":"subject:Subject-instance-method","name":"subject","abstract":false,"def":{"name":"subject","return_type":"Subject","visibility":"Public","body":"@subject"}}]},{"html_id":"crytic/Crytic/Mutation/Environment","path":"Crytic/Mutation/Environment.html","kind":"struct","full_name":"Crytic::Mutation::Environment","name":"Environment","abstract":false,"superclass":{"html_id":"crytic/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crytic/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crytic/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutation/environment.cr","line_number":4,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutation","kind":"module","full_name":"Crytic::Mutation","name":"Mutation"},"constructors":[{"html_id":"new(config:Config,side_effects:Crytic::SideEffects)-class-method","name":"new","abstract":false,"args":[{"name":"config","external_name":"config","restriction":"Config"},{"name":"side_effects","external_name":"side_effects","restriction":"Crytic::SideEffects"}],"args_string":"(config : Config, side_effects : Crytic::SideEffects)","args_html":"(config : <a href=\"../../Crytic/Mutation/Config.html\">Config</a>, side_effects : <a href=\"../../Crytic/SideEffects.html\">Crytic::SideEffects</a>)","location":{"filename":"src/crytic/mutation/environment.cr","line_number":4,"url":null},"def":{"name":"new","args":[{"name":"config","external_name":"config","restriction":"Config"},{"name":"side_effects","external_name":"side_effects","restriction":"Crytic::SideEffects"}],"visibility":"Public","body":"_ = allocate\n_.initialize(config, side_effects)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"clone-instance-method","name":"clone","abstract":false,"location":{"filename":"src/crytic/mutation/environment.cr","line_number":4,"url":null},"def":{"name":"clone","visibility":"Public","body":"self.class.new(@config.clone, @side_effects.clone)"}},{"html_id":"config:Config-instance-method","name":"config","abstract":false,"def":{"name":"config","return_type":"Config","visibility":"Public","body":"@config"}},{"html_id":"copy_with(config_config=@config,side_effects_side_effects=@side_effects)-instance-method","name":"copy_with","abstract":false,"args":[{"name":"_config","default_value":"@config","external_name":"config","restriction":""},{"name":"_side_effects","default_value":"@side_effects","external_name":"side_effects","restriction":""}],"args_string":"(config _config = @config, side_effects _side_effects = @side_effects)","args_html":"(config _config = @config, side_effects _side_effects = @side_effects)","location":{"filename":"src/crytic/mutation/environment.cr","line_number":4,"url":null},"def":{"name":"copy_with","args":[{"name":"_config","default_value":"@config","external_name":"config","restriction":""},{"name":"_side_effects","default_value":"@side_effects","external_name":"side_effects","restriction":""}],"visibility":"Public","body":"self.class.new(_config, _side_effects)"}},{"html_id":"execute(*args,**options)-instance-method","name":"execute","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crytic/mutation/environment.cr","line_number":8,"url":null},"def":{"name":"execute","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"side_effects.execute(*args, **options)"}},{"html_id":"execute(*args,**options,&)-instance-method","name":"execute","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crytic/mutation/environment.cr","line_number":8,"url":null},"def":{"name":"execute","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"side_effects.execute(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"mutant(*args,**options)-instance-method","name":"mutant","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crytic/mutation/environment.cr","line_number":7,"url":null},"def":{"name":"mutant","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"config.mutant(*args, **options)"}},{"html_id":"mutant(*args,**options,&)-instance-method","name":"mutant","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crytic/mutation/environment.cr","line_number":7,"url":null},"def":{"name":"mutant","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"config.mutant(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"perform_mutation-instance-method","name":"perform_mutation","abstract":false,"location":{"filename":"src/crytic/mutation/environment.cr","line_number":9,"url":null},"def":{"name":"perform_mutation","visibility":"Public","body":"subject.mutated(mutant)"}},{"html_id":"preamble(*args,**options)-instance-method","name":"preamble","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crytic/mutation/environment.cr","line_number":7,"url":null},"def":{"name":"preamble","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"config.preamble(*args, **options)"}},{"html_id":"preamble(*args,**options,&)-instance-method","name":"preamble","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crytic/mutation/environment.cr","line_number":7,"url":null},"def":{"name":"preamble","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"config.preamble(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"remove_file(*args,**options)-instance-method","name":"remove_file","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crytic/mutation/environment.cr","line_number":8,"url":null},"def":{"name":"remove_file","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"side_effects.remove_file(*args, **options)"}},{"html_id":"remove_file(*args,**options,&)-instance-method","name":"remove_file","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crytic/mutation/environment.cr","line_number":8,"url":null},"def":{"name":"remove_file","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"side_effects.remove_file(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"side_effects:Crytic::SideEffects-instance-method","name":"side_effects","abstract":false,"def":{"name":"side_effects","return_type":"Crytic::SideEffects","visibility":"Public","body":"@side_effects"}},{"html_id":"spec_file_paths-instance-method","name":"spec_file_paths","abstract":false,"location":{"filename":"src/crytic/mutation/environment.cr","line_number":18,"url":null},"def":{"name":"spec_file_paths","visibility":"Public","body":"config.specs"}},{"html_id":"subject(*args,**options)-instance-method","name":"subject","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crytic/mutation/environment.cr","line_number":7,"url":null},"def":{"name":"subject","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"config.subject(*args, **options)"}},{"html_id":"subject(*args,**options,&)-instance-method","name":"subject","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crytic/mutation/environment.cr","line_number":7,"url":null},"def":{"name":"subject","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"config.subject(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"subject_path-instance-method","name":"subject_path","abstract":false,"location":{"filename":"src/crytic/mutation/environment.cr","line_number":14,"url":null},"def":{"name":"subject_path","visibility":"Public","body":"subject.path"}},{"html_id":"write_tempfile(*args,**options)-instance-method","name":"write_tempfile","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crytic/mutation/environment.cr","line_number":8,"url":null},"def":{"name":"write_tempfile","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"side_effects.write_tempfile(*args, **options)"}},{"html_id":"write_tempfile(*args,**options,&)-instance-method","name":"write_tempfile","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crytic/mutation/environment.cr","line_number":8,"url":null},"def":{"name":"write_tempfile","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"side_effects.write_tempfile(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}}]},{"html_id":"crytic/Crytic/Mutation/InjectMutatedSubjectIntoSpecs","path":"Crytic/Mutation/InjectMutatedSubjectIntoSpecs.html","kind":"class","full_name":"Crytic::Mutation::InjectMutatedSubjectIntoSpecs","name":"InjectMutatedSubjectIntoSpecs","abstract":false,"superclass":{"html_id":"crytic/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},"ancestors":[{"html_id":"crytic/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutation/inject_mutated_subject_into_specs.cr","line_number":6,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutation","kind":"module","full_name":"Crytic::Mutation","name":"Mutation"},"constructors":[{"html_id":"new(path,source:String,mutated_subject:MutatedSubject,tracker:Tracker)-class-method","name":"new","abstract":false,"args":[{"name":"path","external_name":"path","restriction":""},{"name":"source","external_name":"source","restriction":"String"},{"name":"mutated_subject","external_name":"mutated_subject","restriction":"MutatedSubject"},{"name":"tracker","external_name":"tracker","restriction":"Tracker"}],"args_string":"(path, source : String, mutated_subject : MutatedSubject, tracker : Tracker)","args_html":"(path, source : String, mutated_subject : <a href=\"../../Crytic/MutatedSubject.html\">MutatedSubject</a>, tracker : <a href=\"../../Crytic/Mutation/Tracker.html\">Tracker</a>)","location":{"filename":"src/crytic/mutation/inject_mutated_subject_into_specs.cr","line_number":11,"url":null},"def":{"name":"new","args":[{"name":"path","external_name":"path","restriction":""},{"name":"source","external_name":"source","restriction":"String"},{"name":"mutated_subject","external_name":"mutated_subject","restriction":"MutatedSubject"},{"name":"tracker","external_name":"tracker","restriction":"Tracker"}],"visibility":"Public","body":"_ = allocate\n_.initialize(path, source, mutated_subject, tracker)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"astree:Crystal::ASTNode-instance-method","name":"astree","abstract":false,"location":{"filename":"src/crytic/mutation/inject_mutated_subject_into_specs.cr","line_number":7,"url":null},"def":{"name":"astree","return_type":"Crystal::ASTNode","visibility":"Public","body":"if (value = @astree).nil?\n  ::raise(NilAssertionError.new(\"Crytic::Mutation::InjectMutatedSubjectIntoSpecs#astree cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"astree?:Crystal::ASTNode?-instance-method","name":"astree?","abstract":false,"location":{"filename":"src/crytic/mutation/inject_mutated_subject_into_specs.cr","line_number":7,"url":null},"def":{"name":"astree?","return_type":"Crystal::ASTNode | ::Nil","visibility":"Public","body":"@astree"}},{"html_id":"enriched_source:String-instance-method","name":"enriched_source","abstract":false,"location":{"filename":"src/crytic/mutation/inject_mutated_subject_into_specs.cr","line_number":8,"url":null},"def":{"name":"enriched_source","return_type":"String","visibility":"Public","body":"if (value = @enriched_source).nil?\n  ::raise(NilAssertionError.new(\"Crytic::Mutation::InjectMutatedSubjectIntoSpecs#enriched_source cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"enriched_source?:String?-instance-method","name":"enriched_source?","abstract":false,"location":{"filename":"src/crytic/mutation/inject_mutated_subject_into_specs.cr","line_number":8,"url":null},"def":{"name":"enriched_source?","return_type":"String | ::Nil","visibility":"Public","body":"@enriched_source"}},{"html_id":"path:String-instance-method","name":"path","abstract":false,"location":{"filename":"src/crytic/mutation/inject_mutated_subject_into_specs.cr","line_number":9,"url":null},"def":{"name":"path","return_type":"String","visibility":"Public","body":"@path"}},{"html_id":"process-instance-method","name":"process","doc":"Inject in AST tree if required.","summary":"<p>Inject in AST tree if required.</p>","abstract":false,"location":{"filename":"src/crytic/mutation/inject_mutated_subject_into_specs.cr","line_number":21,"url":null},"def":{"name":"process","visibility":"Public","body":"if @astree\nelse\n  @astree = Crystal::Parser.parse(@source)\n  astree.accept(self)\nend"}},{"html_id":"to_mutated_source-instance-method","name":"to_mutated_source","abstract":false,"location":{"filename":"src/crytic/mutation/inject_mutated_subject_into_specs.cr","line_number":28,"url":null},"def":{"name":"to_mutated_source","visibility":"Public","body":"if @enriched_source.nil?\n  process\n  @enriched_source = unfold_required(astree.to_s)\nelse\n  @enriched_source.not_nil!\nend"}},{"html_id":"visit(node:Crystal::Require)-instance-method","name":"visit","doc":"Management of required file is nasty and should be improved\nSince I've hard time to replace node on visit,\nI change the file argument to a number linked to an array of files\nThen on finalization, we replace each require \"xxx\" by the proper file.","summary":"<p>Management of required file is nasty and should be improved Since I've hard time to replace node on visit, I change the file argument to a number linked to an array of files Then on finalization, we replace each require &quot;xxx&quot; by the proper file.</p>","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::Require"}],"args_string":"(node : Crystal::Require)","args_html":"(node : Crystal::Require)","location":{"filename":"src/crytic/mutation/inject_mutated_subject_into_specs.cr","line_number":57,"url":null},"def":{"name":"visit","args":[{"name":"node","external_name":"node","restriction":"Crystal::Require"}],"visibility":"Public","body":"file = node.string\nif file.starts_with?(\".\")\nelse\n  return false\nend\nnew_files_to_load = RequireResolver.new.find_in_path_relative_to_dir(file, current_directory)\nif new_files_to_load.nil?\n  return\nend\nidx = @tracker.currently_tracked_count\nlist_of_required_file = @tracker.new_bag\nnew_files_to_load.each do |file_to_load|\n  @tracker.parse_file_at_path(file_to_load) do\n    required_file = InjectMutatedSubjectIntoSpecs.new(path: file_to_load, source: @mutated_subject.source_or_other_source(file_to_load), mutated_subject: @mutated_subject, tracker: @tracker)\n    required_file.process\n    list_of_required_file << required_file\n  end\nend\nnode.string = \"$#{idx}\"\nfalse\n"}},{"html_id":"visit(node:Crystal::ASTNode)-instance-method","name":"visit","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Crystal::ASTNode"}],"args_string":"(node : Crystal::ASTNode)","args_html":"(node : Crystal::ASTNode)","location":{"filename":"src/crytic/mutation/inject_mutated_subject_into_specs.cr","line_number":89,"url":null},"def":{"name":"visit","args":[{"name":"node","external_name":"node","restriction":"Crystal::ASTNode"}],"visibility":"Public","body":"true"}}]},{"html_id":"crytic/Crytic/Mutation/IsolatedMutation","path":"Crytic/Mutation/IsolatedMutation.html","kind":"class","full_name":"Crytic::Mutation::IsolatedMutation","name":"IsolatedMutation","abstract":false,"superclass":{"html_id":"crytic/Crytic/Mutation/Mutation","kind":"class","full_name":"Crytic::Mutation::Mutation","name":"Mutation"},"ancestors":[{"html_id":"crytic/Crytic/Mutation/Mutation","kind":"class","full_name":"Crytic::Mutation::Mutation","name":"Mutation"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutation/isolated_mutation.cr","line_number":11,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutation","kind":"module","full_name":"Crytic::Mutation","name":"Mutation"},"doc":"Represents a single mutation to a single source file","summary":"<p>Represents a single mutation to a single source file</p>","class_methods":[{"html_id":"with(environment:Environment)-class-method","name":"with","abstract":false,"args":[{"name":"environment","external_name":"environment","restriction":"Environment"}],"args_string":"(environment : Environment)","args_html":"(environment : <a href=\"../../Crytic/Mutation/Environment.html\">Environment</a>)","location":{"filename":"src/crytic/mutation/isolated_mutation.cr","line_number":33,"url":null},"def":{"name":"with","args":[{"name":"environment","external_name":"environment","restriction":"Environment"}],"visibility":"Public","body":"new(environment)"}}],"instance_methods":[{"html_id":"run:Result-instance-method","name":"run","doc":"Compiles the mutated source code into a binary and runs this binary,\nrecording exit code, stderr and stdout output.","summary":"<p>Compiles the mutated source code into a binary and runs this binary, recording exit code, stderr and stdout output.</p>","abstract":false,"location":{"filename":"src/crytic/mutation/isolated_mutation.cr","line_number":16,"url":null},"def":{"name":"run","return_type":"Result","visibility":"Public","body":"mutated = @environment.perform_mutation\nprocess_result = run(mutated)\nsuccess_messages_in_output = (/Finished/) =~ process_result[:output]\nstatus = if process_result[:exit_code] == ProcessRunner::SUCCESS\n  Status::Uncovered\nelse\n  if process_result[:exit_code] == ProcessRunner::TIMEOUT\n    Status::Timeout\n  else\n    if success_messages_in_output == nil\n      Status::Errored\n    else\n      Status::Covered\n    end\n  end\nend\nResult.new(status, @environment.mutant, mutated.diff, process_result[:output])\n"}}],"types":[{"html_id":"crytic/Crytic/Mutation/IsolatedMutation/Preamble","path":"Crytic/Mutation/IsolatedMutation/Preamble.html","kind":"alias","full_name":"Crytic::Mutation::IsolatedMutation::Preamble","name":"Preamble","abstract":false,"locations":[{"filename":"src/crytic/mutation/isolated_mutation.cr","line_number":12,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":true,"aliased":"String","aliased_html":"String","const":false,"namespace":{"html_id":"crytic/Crytic/Mutation/IsolatedMutation","kind":"class","full_name":"Crytic::Mutation::IsolatedMutation","name":"IsolatedMutation"}}]},{"html_id":"crytic/Crytic/Mutation/Mutation","path":"Crytic/Mutation/Mutation.html","kind":"class","full_name":"Crytic::Mutation::Mutation","name":"Mutation","abstract":true,"superclass":{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutation/mutation.cr","line_number":4,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"crytic/Crytic/Mutation/IsolatedMutation","kind":"class","full_name":"Crytic::Mutation::IsolatedMutation","name":"IsolatedMutation"}],"namespace":{"html_id":"crytic/Crytic/Mutation","kind":"module","full_name":"Crytic::Mutation","name":"Mutation"},"instance_methods":[{"html_id":"run:Result-instance-method","name":"run","abstract":true,"location":{"filename":"src/crytic/mutation/mutation.cr","line_number":5,"url":null},"def":{"name":"run","return_type":"Result","visibility":"Public","body":""}}]},{"html_id":"crytic/Crytic/Mutation/NoMutation","path":"Crytic/Mutation/NoMutation.html","kind":"class","full_name":"Crytic::Mutation::NoMutation","name":"NoMutation","abstract":false,"superclass":{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutation/no_mutation.cr","line_number":6,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutation","kind":"module","full_name":"Crytic::Mutation","name":"Mutation"},"class_methods":[{"html_id":"with(specs:Array(String))-class-method","name":"with","abstract":false,"args":[{"name":"specs","external_name":"specs","restriction":"Array(String)"}],"args_string":"(specs : Array(String))","args_html":"(specs : Array(String))","location":{"filename":"src/crytic/mutation/no_mutation.cr","line_number":14,"url":null},"def":{"name":"with","args":[{"name":"specs","external_name":"specs","restriction":"Array(String)"}],"visibility":"Public","body":"new(specs)"}}],"instance_methods":[{"html_id":"run(side_effects)-instance-method","name":"run","abstract":false,"args":[{"name":"side_effects","external_name":"side_effects","restriction":""}],"args_string":"(side_effects)","args_html":"(side_effects)","location":{"filename":"src/crytic/mutation/no_mutation.cr","line_number":7,"url":null},"def":{"name":"run","args":[{"name":"side_effects","external_name":"side_effects","restriction":""}],"visibility":"Public","body":"io = IO::Memory.new\nargs = [\"spec\"] + @specs_file_paths\nexit_code = side_effects.execute(\"crystal\", args, output: io, error: io)\nOriginalResult.new(exit_code: exit_code, output: io.to_s)\n"}}]},{"html_id":"crytic/Crytic/Mutation/OriginalResult","path":"Crytic/Mutation/OriginalResult.html","kind":"struct","full_name":"Crytic::Mutation::OriginalResult","name":"OriginalResult","abstract":false,"superclass":{"html_id":"crytic/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crytic/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crytic/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutation/original_result.cr","line_number":2,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutation","kind":"module","full_name":"Crytic::Mutation","name":"Mutation"},"constructors":[{"html_id":"new(exit_code:Int32,output:String)-class-method","name":"new","abstract":false,"args":[{"name":"exit_code","external_name":"exit_code","restriction":"Int32"},{"name":"output","external_name":"output","restriction":"String"}],"args_string":"(exit_code : Int32, output : String)","args_html":"(exit_code : Int32, output : String)","location":{"filename":"src/crytic/mutation/original_result.cr","line_number":2,"url":null},"def":{"name":"new","args":[{"name":"exit_code","external_name":"exit_code","restriction":"Int32"},{"name":"output","external_name":"output","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(exit_code, output)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"clone-instance-method","name":"clone","abstract":false,"location":{"filename":"src/crytic/mutation/original_result.cr","line_number":2,"url":null},"def":{"name":"clone","visibility":"Public","body":"self.class.new(@exit_code.clone, @output.clone)"}},{"html_id":"copy_with(exit_code_exit_code=@exit_code,output_output=@output)-instance-method","name":"copy_with","abstract":false,"args":[{"name":"_exit_code","default_value":"@exit_code","external_name":"exit_code","restriction":""},{"name":"_output","default_value":"@output","external_name":"output","restriction":""}],"args_string":"(exit_code _exit_code = @exit_code, output _output = @output)","args_html":"(exit_code _exit_code = @exit_code, output _output = @output)","location":{"filename":"src/crytic/mutation/original_result.cr","line_number":2,"url":null},"def":{"name":"copy_with","args":[{"name":"_exit_code","default_value":"@exit_code","external_name":"exit_code","restriction":""},{"name":"_output","default_value":"@output","external_name":"output","restriction":""}],"visibility":"Public","body":"self.class.new(_exit_code, _output)"}},{"html_id":"exit_code:Int32-instance-method","name":"exit_code","abstract":false,"def":{"name":"exit_code","return_type":"Int32","visibility":"Public","body":"@exit_code"}},{"html_id":"output:String-instance-method","name":"output","abstract":false,"def":{"name":"output","return_type":"String","visibility":"Public","body":"@output"}},{"html_id":"successful?-instance-method","name":"successful?","abstract":false,"location":{"filename":"src/crytic/mutation/original_result.cr","line_number":3,"url":null},"def":{"name":"successful?","visibility":"Public","body":"exit_code == 0"}}]},{"html_id":"crytic/Crytic/Mutation/RequireResolver","path":"Crytic/Mutation/RequireResolver.html","kind":"class","full_name":"Crytic::Mutation::RequireResolver","name":"RequireResolver","abstract":false,"superclass":{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutation/require_resolver.cr","line_number":2,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutation","kind":"module","full_name":"Crytic::Mutation","name":"Mutation"},"instance_methods":[{"html_id":"find_in_path_relative_to_dir(filename,relative_to):Array(String)?-instance-method","name":"find_in_path_relative_to_dir","doc":"All of the below code is stolen from crystal itself\nhttps://github.com/crystal-lang/crystal/blob/master/src/compiler/crystal/crystal_path.cr\nBecause we are caring about relative requires \"./foo/bar\" exclusively, a lot of code\nwas removed from this method.","summary":"<p>All of the below code is stolen from crystal itself https://github.com/crystal-lang/crystal/blob/master/src/compiler/crystal/crystal_path.cr Because we are caring about relative requires &quot;./foo/bar&quot; exclusively, a lot of code was removed from this method.</p>","abstract":false,"args":[{"name":"filename","external_name":"filename","restriction":""},{"name":"relative_to","external_name":"relative_to","restriction":""}],"args_string":"(filename, relative_to) : Array(String)?","args_html":"(filename, relative_to) : Array(String)?","location":{"filename":"src/crytic/mutation/require_resolver.cr","line_number":7,"url":null},"def":{"name":"find_in_path_relative_to_dir","args":[{"name":"filename","external_name":"filename","restriction":""},{"name":"relative_to","external_name":"relative_to","restriction":""}],"return_type":"Array(String) | Nil","visibility":"Public","body":"recursive = filename.ends_with?(\"/**\")\nif (filename.ends_with?(\"/*\")) || recursive\n  filename_dir_index = (filename.rindex('/')).not_nil!\n  filename_dir = filename[0..filename_dir_index]\n  relative_dir = \"#{relative_to}/#{filename_dir}\"\n  if File.exists?(relative_dir)\n    files = [] of String\n    gather_dir_files(relative_dir, files, recursive)\n    return files\n  end\nelse\n  relative_filename = \"#{relative_to}/#{filename}\"\n  relative_filename_cr = relative_filename.ends_with?(\".cr\") ? relative_filename : \"#{relative_filename}.cr\"\n  if File.exists?(relative_filename_cr)\n    return [make_relative_unless_absolute(relative_filename_cr)]\n  end\n  basename = File.basename(relative_filename)\n  absolute_filename = make_relative_unless_absolute(\"#{relative_to}/#{filename}/#{basename}.cr\")\n  if File.exists?(absolute_filename)\n    return [absolute_filename]\n  end\nend\nnil\n"}}]},{"html_id":"crytic/Crytic/Mutation/Result","path":"Crytic/Mutation/Result.html","kind":"struct","full_name":"Crytic::Mutation::Result","name":"Result","abstract":false,"superclass":{"html_id":"crytic/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crytic/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crytic/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutation/result.cr","line_number":11,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutation","kind":"module","full_name":"Crytic::Mutation","name":"Mutation"},"constructors":[{"html_id":"new(status:Status,mutant:Mutant::Mutant,diff:String,output:String)-class-method","name":"new","abstract":false,"args":[{"name":"status","external_name":"status","restriction":"Status"},{"name":"mutant","external_name":"mutant","restriction":"Mutant::Mutant"},{"name":"diff","external_name":"diff","restriction":"String"},{"name":"output","external_name":"output","restriction":"String"}],"args_string":"(status : Status, mutant : Mutant::Mutant, diff : String, output : String)","args_html":"(status : <a href=\"../../Crytic/Mutation/Status.html\">Status</a>, mutant : <a href=\"../../Crytic/Mutant/Mutant.html\">Mutant::Mutant</a>, diff : String, output : String)","location":{"filename":"src/crytic/mutation/result.cr","line_number":11,"url":null},"def":{"name":"new","args":[{"name":"status","external_name":"status","restriction":"Status"},{"name":"mutant","external_name":"mutant","restriction":"Mutant::Mutant"},{"name":"diff","external_name":"diff","restriction":"String"},{"name":"output","external_name":"output","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(status, mutant, diff, output)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"clone-instance-method","name":"clone","abstract":false,"location":{"filename":"src/crytic/mutation/result.cr","line_number":11,"url":null},"def":{"name":"clone","visibility":"Public","body":"self.class.new(@status.clone, @mutant.clone, @diff.clone, @output.clone)"}},{"html_id":"copy_with(status_status=@status,mutant_mutant=@mutant,diff_diff=@diff,output_output=@output)-instance-method","name":"copy_with","abstract":false,"args":[{"name":"_status","default_value":"@status","external_name":"status","restriction":""},{"name":"_mutant","default_value":"@mutant","external_name":"mutant","restriction":""},{"name":"_diff","default_value":"@diff","external_name":"diff","restriction":""},{"name":"_output","default_value":"@output","external_name":"output","restriction":""}],"args_string":"(status _status = @status, mutant _mutant = @mutant, diff _diff = @diff, output _output = @output)","args_html":"(status _status = @status, mutant _mutant = @mutant, diff _diff = @diff, output _output = @output)","location":{"filename":"src/crytic/mutation/result.cr","line_number":11,"url":null},"def":{"name":"copy_with","args":[{"name":"_status","default_value":"@status","external_name":"status","restriction":""},{"name":"_mutant","default_value":"@mutant","external_name":"mutant","restriction":""},{"name":"_diff","default_value":"@diff","external_name":"diff","restriction":""},{"name":"_output","default_value":"@output","external_name":"output","restriction":""}],"visibility":"Public","body":"self.class.new(_status, _mutant, _diff, _output)"}},{"html_id":"covered?(*args,**options)-instance-method","name":"covered?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crytic/mutation/result.cr","line_number":16,"url":null},"def":{"name":"covered?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"status.covered?(*args, **options)"}},{"html_id":"covered?(*args,**options,&)-instance-method","name":"covered?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crytic/mutation/result.cr","line_number":16,"url":null},"def":{"name":"covered?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"status.covered?(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"diff:String-instance-method","name":"diff","abstract":false,"def":{"name":"diff","return_type":"String","visibility":"Public","body":"@diff"}},{"html_id":"errored?(*args,**options)-instance-method","name":"errored?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crytic/mutation/result.cr","line_number":16,"url":null},"def":{"name":"errored?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"status.errored?(*args, **options)"}},{"html_id":"errored?(*args,**options,&)-instance-method","name":"errored?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crytic/mutation/result.cr","line_number":16,"url":null},"def":{"name":"errored?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"status.errored?(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"location:Crystal::Location-instance-method","name":"location","abstract":false,"location":{"filename":"src/crytic/mutation/result.cr","line_number":22,"url":null},"def":{"name":"location","return_type":"Crystal::Location","visibility":"Public","body":"mutant.location.location"}},{"html_id":"mutant:Mutant::Mutant-instance-method","name":"mutant","abstract":false,"def":{"name":"mutant","return_type":"Mutant::Mutant","visibility":"Public","body":"@mutant"}},{"html_id":"mutant_name-instance-method","name":"mutant_name","abstract":false,"location":{"filename":"src/crytic/mutation/result.cr","line_number":17,"url":null},"def":{"name":"mutant_name","visibility":"Public","body":"(mutant.class.to_s.split(\"::\")).last"}},{"html_id":"mutated_file:String-instance-method","name":"mutated_file","abstract":false,"location":{"filename":"src/crytic/mutation/result.cr","line_number":26,"url":null},"def":{"name":"mutated_file","return_type":"String","visibility":"Public","body":"location.filename.to_s"}},{"html_id":"output:String-instance-method","name":"output","abstract":false,"def":{"name":"output","return_type":"String","visibility":"Public","body":"@output"}},{"html_id":"status:Status-instance-method","name":"status","abstract":false,"def":{"name":"status","return_type":"Status","visibility":"Public","body":"@status"}},{"html_id":"timeout?(*args,**options)-instance-method","name":"timeout?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crytic/mutation/result.cr","line_number":16,"url":null},"def":{"name":"timeout?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"status.timeout?(*args, **options)"}},{"html_id":"timeout?(*args,**options,&)-instance-method","name":"timeout?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crytic/mutation/result.cr","line_number":16,"url":null},"def":{"name":"timeout?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"status.timeout?(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"uncovered?(*args,**options)-instance-method","name":"uncovered?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crytic/mutation/result.cr","line_number":16,"url":null},"def":{"name":"uncovered?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"status.uncovered?(*args, **options)"}},{"html_id":"uncovered?(*args,**options,&)-instance-method","name":"uncovered?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crytic/mutation/result.cr","line_number":16,"url":null},"def":{"name":"uncovered?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"status.uncovered?(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}}]},{"html_id":"crytic/Crytic/Mutation/ResultSet","path":"Crytic/Mutation/ResultSet.html","kind":"class","full_name":"Crytic::Mutation::ResultSet","name":"ResultSet","abstract":false,"superclass":{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutation/result_set.cr","line_number":2,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutation","kind":"module","full_name":"Crytic::Mutation","name":"Mutation"},"constructors":[{"html_id":"new(results=[]ofResult)-class-method","name":"new","abstract":false,"args":[{"name":"results","default_value":"[] of Result","external_name":"results","restriction":""}],"args_string":"(results = [] of Result)","args_html":"(results = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Result</span>)","location":{"filename":"src/crytic/mutation/result_set.cr","line_number":9,"url":null},"def":{"name":"new","args":[{"name":"results","default_value":"[] of Result","external_name":"results","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(results)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"all_covered?-instance-method","name":"all_covered?","abstract":false,"location":{"filename":"src/crytic/mutation/result_set.cr","line_number":18,"url":null},"def":{"name":"all_covered?","visibility":"Public","body":"@results.all?(&.covered?)"}},{"html_id":"covered_count-instance-method","name":"covered_count","abstract":false,"location":{"filename":"src/crytic/mutation/result_set.cr","line_number":12,"url":null},"def":{"name":"covered_count","visibility":"Public","body":"@results.count(&.covered?)"}},{"html_id":"empty?(*args,**options)-instance-method","name":"empty?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crytic/mutation/result_set.cr","line_number":3,"url":null},"def":{"name":"empty?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@results.empty?(*args, **options)"}},{"html_id":"empty?(*args,**options,&)-instance-method","name":"empty?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crytic/mutation/result_set.cr","line_number":3,"url":null},"def":{"name":"empty?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"@results.empty?(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"errored_count-instance-method","name":"errored_count","abstract":false,"location":{"filename":"src/crytic/mutation/result_set.cr","line_number":12,"url":null},"def":{"name":"errored_count","visibility":"Public","body":"@results.count(&.errored?)"}},{"html_id":"grouped_by_mutated_file-instance-method","name":"grouped_by_mutated_file","abstract":false,"location":{"filename":"src/crytic/mutation/result_set.cr","line_number":22,"url":null},"def":{"name":"grouped_by_mutated_file","visibility":"Public","body":"@results.group_by(&.mutated_file).transform_values do |by_filename|\n  ResultSet.new(by_filename)\nend"}},{"html_id":"longest_mutated_filename_length-instance-method","name":"longest_mutated_filename_length","abstract":false,"location":{"filename":"src/crytic/mutation/result_set.cr","line_number":28,"url":null},"def":{"name":"longest_mutated_filename_length","visibility":"Public","body":"@results.map do |__arg2|\n  __arg2.mutated_file.size\nend.max? || 0"}},{"html_id":"timeout_count-instance-method","name":"timeout_count","abstract":false,"location":{"filename":"src/crytic/mutation/result_set.cr","line_number":12,"url":null},"def":{"name":"timeout_count","visibility":"Public","body":"@results.count(&.timeout?)"}},{"html_id":"total_count-instance-method","name":"total_count","abstract":false,"location":{"filename":"src/crytic/mutation/result_set.cr","line_number":5,"url":null},"def":{"name":"total_count","visibility":"Public","body":"@results.size"}},{"html_id":"uncovered_count-instance-method","name":"uncovered_count","abstract":false,"location":{"filename":"src/crytic/mutation/result_set.cr","line_number":12,"url":null},"def":{"name":"uncovered_count","visibility":"Public","body":"@results.count(&.uncovered?)"}}]},{"html_id":"crytic/Crytic/Mutation/Status","path":"Crytic/Mutation/Status.html","kind":"enum","full_name":"Crytic::Mutation::Status","name":"Status","abstract":false,"ancestors":[{"html_id":"crytic/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"crytic/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"crytic/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutation/result.cr","line_number":4,"url":null}],"repository_name":"crytic","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Covered","name":"Covered","value":"0"},{"id":"Errored","name":"Errored","value":"1"},{"id":"Timeout","name":"Timeout","value":"2"},{"id":"Uncovered","name":"Uncovered","value":"3"}],"namespace":{"html_id":"crytic/Crytic/Mutation","kind":"module","full_name":"Crytic::Mutation","name":"Mutation"},"instance_methods":[{"html_id":"covered?-instance-method","name":"covered?","abstract":false,"location":{"filename":"src/crytic/mutation/result.cr","line_number":5,"url":null},"def":{"name":"covered?","visibility":"Public","body":"self == Covered"}},{"html_id":"errored?-instance-method","name":"errored?","abstract":false,"location":{"filename":"src/crytic/mutation/result.cr","line_number":6,"url":null},"def":{"name":"errored?","visibility":"Public","body":"self == Errored"}},{"html_id":"timeout?-instance-method","name":"timeout?","abstract":false,"location":{"filename":"src/crytic/mutation/result.cr","line_number":7,"url":null},"def":{"name":"timeout?","visibility":"Public","body":"self == Timeout"}},{"html_id":"uncovered?-instance-method","name":"uncovered?","abstract":false,"location":{"filename":"src/crytic/mutation/result.cr","line_number":8,"url":null},"def":{"name":"uncovered?","visibility":"Public","body":"self == Uncovered"}}]},{"html_id":"crytic/Crytic/Mutation/Tracker","path":"Crytic/Mutation/Tracker.html","kind":"class","full_name":"Crytic::Mutation::Tracker","name":"Tracker","abstract":false,"superclass":{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/mutation/tracker.cr","line_number":5,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Mutation","kind":"module","full_name":"Crytic::Mutation","name":"Mutation"},"instance_methods":[{"html_id":"currently_tracked_count-instance-method","name":"currently_tracked_count","abstract":false,"location":{"filename":"src/crytic/mutation/tracker.cr","line_number":13,"url":null},"def":{"name":"currently_tracked_count","visibility":"Public","body":"require_expanders.size"}},{"html_id":"new_bag-instance-method","name":"new_bag","abstract":false,"location":{"filename":"src/crytic/mutation/tracker.cr","line_number":17,"url":null},"def":{"name":"new_bag","visibility":"Public","body":"list_of_required_file = [] of InjectMutatedSubjectIntoSpecs\nrequire_expanders << list_of_required_file\nlist_of_required_file\n"}},{"html_id":"parse_file_at_path(file,&)-instance-method","name":"parse_file_at_path","abstract":false,"args":[{"name":"file","external_name":"file","restriction":""}],"args_string":"(file, &)","args_html":"(file, &)","location":{"filename":"src/crytic/mutation/tracker.cr","line_number":28,"url":null},"def":{"name":"parse_file_at_path","args":[{"name":"file","external_name":"file","restriction":""}],"yields":0,"visibility":"Public","body":"file = relative_path_to_project(file)\nif is_already_tracked?(file)\nelse\n  tracked_filepaths.add(file)\n  yield\nend\n"}},{"html_id":"register_file(file)-instance-method","name":"register_file","abstract":false,"args":[{"name":"file","external_name":"file","restriction":""}],"args_string":"(file)","args_html":"(file)","location":{"filename":"src/crytic/mutation/tracker.cr","line_number":23,"url":null},"def":{"name":"register_file","args":[{"name":"file","external_name":"file","restriction":""}],"visibility":"Public","body":"tracked_filepaths.add(file.path)\nrelative_path_to_project(File.expand_path(file.path, \".\"))\n"}},{"html_id":"required_files_for_id(expansion_id)-instance-method","name":"required_files_for_id","abstract":false,"args":[{"name":"expansion_id","external_name":"expansion_id","restriction":""}],"args_string":"(expansion_id)","args_html":"(expansion_id)","location":{"filename":"src/crytic/mutation/tracker.cr","line_number":9,"url":null},"def":{"name":"required_files_for_id","args":[{"name":"expansion_id","external_name":"expansion_id","restriction":""}],"visibility":"Public","body":"require_expanders[expansion_id]"}}]}]},{"html_id":"crytic/Crytic/MutationScoreIndicator","path":"Crytic/MutationScoreIndicator.html","kind":"struct","full_name":"Crytic::MutationScoreIndicator","name":"MutationScoreIndicator","abstract":false,"superclass":{"html_id":"crytic/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crytic/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crytic/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/msi_calculator.cr","line_number":5,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic","kind":"module","full_name":"Crytic","name":"Crytic"},"constructors":[{"html_id":"new(value:Float64)-class-method","name":"new","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Float64"}],"args_string":"(value : Float64)","args_html":"(value : Float64)","location":{"filename":"src/crytic/msi_calculator.cr","line_number":5,"url":null},"def":{"name":"new","args":[{"name":"value","external_name":"value","restriction":"Float64"}],"visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"clone-instance-method","name":"clone","abstract":false,"location":{"filename":"src/crytic/msi_calculator.cr","line_number":5,"url":null},"def":{"name":"clone","visibility":"Public","body":"self.class.new(@value.clone)"}},{"html_id":"copy_with(value_value=@value)-instance-method","name":"copy_with","abstract":false,"args":[{"name":"_value","default_value":"@value","external_name":"value","restriction":""}],"args_string":"(value _value = @value)","args_html":"(value _value = @value)","location":{"filename":"src/crytic/msi_calculator.cr","line_number":5,"url":null},"def":{"name":"copy_with","args":[{"name":"_value","default_value":"@value","external_name":"value","restriction":""}],"visibility":"Public","body":"self.class.new(_value)"}},{"html_id":"passes?(threshold)-instance-method","name":"passes?","doc":"Returns true or false depending on whether the msi is higher than or\nequal to the given threshold","summary":"<p>Returns true or false depending on whether the msi is higher than or equal to the given threshold</p>","abstract":false,"args":[{"name":"threshold","external_name":"threshold","restriction":""}],"args_string":"(threshold)","args_html":"(threshold)","location":{"filename":"src/crytic/msi_calculator.cr","line_number":16,"url":null},"def":{"name":"passes?","args":[{"name":"threshold","external_name":"threshold","restriction":""}],"visibility":"Public","body":"if value.finite?\n  value >= threshold\nelse\n  true\nend"}},{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns a string representation of this object.\n\nDescendants must usually **not** override this method. Instead,\nthey must override `to_s(io)`, which must append to the given\nIO object.","summary":"<p>Returns a string representation of this object.</p>","abstract":false,"location":{"filename":"src/crytic/msi_calculator.cr","line_number":6,"url":null},"def":{"name":"to_s","visibility":"Public","body":"if value.finite?\n  \"#{value.round(2)}%\"\nelse\n  \"N/A\"\nend"}},{"html_id":"value:Float64-instance-method","name":"value","abstract":false,"def":{"name":"value","return_type":"Float64","visibility":"Public","body":"@value"}}]},{"html_id":"crytic/Crytic/ProcessProcessRunner","path":"Crytic/ProcessProcessRunner.html","kind":"class","full_name":"Crytic::ProcessProcessRunner","name":"ProcessProcessRunner","abstract":false,"superclass":{"html_id":"crytic/Crytic/ProcessRunner","kind":"class","full_name":"Crytic::ProcessRunner","name":"ProcessRunner"},"ancestors":[{"html_id":"crytic/Crytic/ProcessRunner","kind":"class","full_name":"Crytic::ProcessRunner","name":"ProcessRunner"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/process_process_runner.cr","line_number":6,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic","kind":"module","full_name":"Crytic","name":"Crytic"},"doc":"Runs processes using crystals `Process` class","summary":"<p>Runs processes using crystals <code>Process</code> class</p>","instance_methods":[{"html_id":"run(cmd,args,output,error,timeout)-instance-method","name":"run","doc":"Run the given command with args and save output to given io\nTimes out and kills the provess after given period.","summary":"<p>Run the given command with args and save output to given io Times out and kills the provess after given period.</p>","abstract":false,"args":[{"name":"cmd","external_name":"cmd","restriction":""},{"name":"args","external_name":"args","restriction":""},{"name":"output","external_name":"output","restriction":""},{"name":"error","external_name":"error","restriction":""},{"name":"timeout","external_name":"timeout","restriction":""}],"args_string":"(cmd, args, output, error, timeout)","args_html":"(cmd, args, output, error, timeout)","location":{"filename":"src/crytic/process_process_runner.cr","line_number":14,"url":null},"def":{"name":"run","args":[{"name":"cmd","external_name":"cmd","restriction":""},{"name":"args","external_name":"args","restriction":""},{"name":"output","external_name":"output","restriction":""},{"name":"error","external_name":"error","restriction":""},{"name":"timeout","external_name":"timeout","restriction":""}],"visibility":"Public","body":"channel = Channel(Int32).new\nprocess = Process.new(cmd, args, output: output, error: error)\nspawn do\n  channel.send(process.wait.exit_code)\nend\nselect\nwhen value = channel.receive\n  value\nwhen Timeout.after(timeout)\n  process.signal(Signal::KILL)\n  ProcessRunner::TIMEOUT\nend\n\n"}},{"html_id":"run(cmd,args,output,error)-instance-method","name":"run","doc":"Run the given command with args and save output to given io","summary":"<p>Run the given command with args and save output to given io</p>","abstract":false,"args":[{"name":"cmd","external_name":"cmd","restriction":""},{"name":"args","external_name":"args","restriction":""},{"name":"output","external_name":"output","restriction":""},{"name":"error","external_name":"error","restriction":""}],"args_string":"(cmd, args, output, error)","args_html":"(cmd, args, output, error)","location":{"filename":"src/crytic/process_process_runner.cr","line_number":8,"url":null},"def":{"name":"run","args":[{"name":"cmd","external_name":"cmd","restriction":""},{"name":"args","external_name":"args","restriction":""},{"name":"output","external_name":"output","restriction":""},{"name":"error","external_name":"error","restriction":""}],"visibility":"Public","body":"(Process.run(cmd, args, output: output, error: error)).exit_code"}}]},{"html_id":"crytic/Crytic/ProcessRunner","path":"Crytic/ProcessRunner.html","kind":"class","full_name":"Crytic::ProcessRunner","name":"ProcessRunner","abstract":true,"superclass":{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/process_runner.cr","line_number":4,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"SUCCESS","name":"SUCCESS","value":"0"},{"id":"TIMEOUT","name":"TIMEOUT","value":"28"}],"subclasses":[{"html_id":"crytic/Crytic/ProcessProcessRunner","kind":"class","full_name":"Crytic::ProcessProcessRunner","name":"ProcessProcessRunner"}],"namespace":{"html_id":"crytic/Crytic","kind":"module","full_name":"Crytic","name":"Crytic"},"doc":"Defines the interface to run arbitrary processes outside\nthe crytic process itself","summary":"<p>Defines the interface to run arbitrary processes outside the crytic process itself</p>","instance_methods":[{"html_id":"run(cmd:String,args:Array(String),output,error)-instance-method","name":"run","doc":"Run a process with the given command and args.\nReturns the status code of the finished process","summary":"<p>Run a process with the given command and args.</p>","abstract":true,"args":[{"name":"cmd","external_name":"cmd","restriction":"String"},{"name":"args","external_name":"args","restriction":"Array(String)"},{"name":"output","external_name":"output","restriction":""},{"name":"error","external_name":"error","restriction":""}],"args_string":"(cmd : String, args : Array(String), output, error)","args_html":"(cmd : String, args : Array(String), output, error)","location":{"filename":"src/crytic/process_runner.cr","line_number":10,"url":null},"def":{"name":"run","args":[{"name":"cmd","external_name":"cmd","restriction":"String"},{"name":"args","external_name":"args","restriction":"Array(String)"},{"name":"output","external_name":"output","restriction":""},{"name":"error","external_name":"error","restriction":""}],"visibility":"Public","body":""}}]},{"html_id":"crytic/Crytic/Reporter","path":"Crytic/Reporter.html","kind":"module","full_name":"Crytic::Reporter","name":"Reporter","abstract":false,"locations":[{"filename":"src/crytic/reporter/file_summary_io_reporter.cr","line_number":4,"url":null},{"filename":"src/crytic/reporter/http_client.cr","line_number":4,"url":null},{"filename":"src/crytic/reporter/io_reporter.cr","line_number":7,"url":null},{"filename":"src/crytic/reporter/reporter.cr","line_number":4,"url":null},{"filename":"src/crytic/reporter/stryker_badge_reporter.cr","line_number":6,"url":null},{"filename":"src/crytic/reporter/timer.cr","line_number":1,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic","kind":"module","full_name":"Crytic","name":"Crytic"},"types":[{"html_id":"crytic/Crytic/Reporter/DefaultHttpClient","path":"Crytic/Reporter/DefaultHttpClient.html","kind":"class","full_name":"Crytic::Reporter::DefaultHttpClient","name":"DefaultHttpClient","abstract":false,"superclass":{"html_id":"crytic/Crytic/Reporter/HttpClient","kind":"class","full_name":"Crytic::Reporter::HttpClient","name":"HttpClient"},"ancestors":[{"html_id":"crytic/Crytic/Reporter/HttpClient","kind":"class","full_name":"Crytic::Reporter::HttpClient","name":"HttpClient"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/reporter/http_client.cr","line_number":9,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Reporter","kind":"module","full_name":"Crytic::Reporter","name":"Reporter"},"instance_methods":[{"html_id":"post(url:String,body:Hash(String,String|Float64))-instance-method","name":"post","abstract":false,"args":[{"name":"url","external_name":"url","restriction":"String"},{"name":"body","external_name":"body","restriction":"Hash(String, String | Float64)"}],"args_string":"(url : String, body : Hash(String, String | Float64))","args_html":"(url : String, body : Hash(String, String | Float64))","location":{"filename":"src/crytic/reporter/http_client.cr","line_number":10,"url":null},"def":{"name":"post","args":[{"name":"url","external_name":"url","restriction":"String"},{"name":"body","external_name":"body","restriction":"Hash(String, String | Float64)"}],"visibility":"Public","body":"HTTP::Client.post(url, headers: HTTP::Headers {\"Content-Type\" => \"application/json\"}, body: body.to_json)"}}]},{"html_id":"crytic/Crytic/Reporter/FileSummaryIoReporter","path":"Crytic/Reporter/FileSummaryIoReporter.html","kind":"class","full_name":"Crytic::Reporter::FileSummaryIoReporter","name":"FileSummaryIoReporter","abstract":false,"superclass":{"html_id":"crytic/Crytic/Reporter/Reporter","kind":"class","full_name":"Crytic::Reporter::Reporter","name":"Reporter"},"ancestors":[{"html_id":"crytic/Crytic/Reporter/Reporter","kind":"class","full_name":"Crytic::Reporter::Reporter","name":"Reporter"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/reporter/file_summary_io_reporter.cr","line_number":5,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Reporter","kind":"module","full_name":"Crytic::Reporter","name":"Reporter"},"constructors":[{"html_id":"new(io:IO)-class-method","name":"new","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/crytic/reporter/file_summary_io_reporter.cr","line_number":13,"url":null},"def":{"name":"new","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"_ = allocate\n_.initialize(io)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"report_msi(results)-instance-method","name":"report_msi","abstract":false,"args":[{"name":"results","external_name":"results","restriction":""}],"args_string":"(results)","args_html":"(results)","location":{"filename":"src/crytic/reporter/file_summary_io_reporter.cr","line_number":40,"url":null},"def":{"name":"report_msi","args":[{"name":"results","external_name":"results","restriction":""}],"visibility":"Public","body":""}},{"html_id":"report_mutations(mutations)-instance-method","name":"report_mutations","abstract":false,"args":[{"name":"mutations","external_name":"mutations","restriction":""}],"args_string":"(mutations)","args_html":"(mutations)","location":{"filename":"src/crytic/reporter/file_summary_io_reporter.cr","line_number":19,"url":null},"def":{"name":"report_mutations","args":[{"name":"mutations","external_name":"mutations","restriction":""}],"visibility":"Public","body":""}},{"html_id":"report_neutral_result(result)-instance-method","name":"report_neutral_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":""}],"args_string":"(result)","args_html":"(result)","location":{"filename":"src/crytic/reporter/file_summary_io_reporter.cr","line_number":22,"url":null},"def":{"name":"report_neutral_result","args":[{"name":"result","external_name":"result","restriction":""}],"visibility":"Public","body":""}},{"html_id":"report_original_result(original_result)-instance-method","name":"report_original_result","abstract":false,"args":[{"name":"original_result","external_name":"original_result","restriction":""}],"args_string":"(original_result)","args_html":"(original_result)","location":{"filename":"src/crytic/reporter/file_summary_io_reporter.cr","line_number":16,"url":null},"def":{"name":"report_original_result","args":[{"name":"original_result","external_name":"original_result","restriction":""}],"visibility":"Public","body":""}},{"html_id":"report_result(result)-instance-method","name":"report_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":""}],"args_string":"(result)","args_html":"(result)","location":{"filename":"src/crytic/reporter/file_summary_io_reporter.cr","line_number":25,"url":null},"def":{"name":"report_result","args":[{"name":"result","external_name":"result","restriction":""}],"visibility":"Public","body":""}},{"html_id":"report_summary(results)-instance-method","name":"report_summary","abstract":false,"args":[{"name":"results","external_name":"results","restriction":""}],"args_string":"(results)","args_html":"(results)","location":{"filename":"src/crytic/reporter/file_summary_io_reporter.cr","line_number":28,"url":null},"def":{"name":"report_summary","args":[{"name":"results","external_name":"results","restriction":""}],"visibility":"Public","body":"total_width = header(results.longest_mutated_filename_length)\nresults.grouped_by_mutated_file.each do |filename, by_filename|\n  table_row(filename, by_filename, results.longest_mutated_filename_length)\nend\nfooter(total_width)\n"}}]},{"html_id":"crytic/Crytic/Reporter/HttpClient","path":"Crytic/Reporter/HttpClient.html","kind":"class","full_name":"Crytic::Reporter::HttpClient","name":"HttpClient","abstract":true,"superclass":{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/reporter/http_client.cr","line_number":5,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"crytic/Crytic/Reporter/DefaultHttpClient","kind":"class","full_name":"Crytic::Reporter::DefaultHttpClient","name":"DefaultHttpClient"}],"namespace":{"html_id":"crytic/Crytic/Reporter","kind":"module","full_name":"Crytic::Reporter","name":"Reporter"},"instance_methods":[{"html_id":"post(url:String,body:Hash(String,String|Float64))-instance-method","name":"post","abstract":true,"args":[{"name":"url","external_name":"url","restriction":"String"},{"name":"body","external_name":"body","restriction":"Hash(String, String | Float64)"}],"args_string":"(url : String, body : Hash(String, String | Float64))","args_html":"(url : String, body : Hash(String, String | Float64))","location":{"filename":"src/crytic/reporter/http_client.cr","line_number":6,"url":null},"def":{"name":"post","args":[{"name":"url","external_name":"url","restriction":"String"},{"name":"body","external_name":"body","restriction":"Hash(String, String | Float64)"}],"visibility":"Public","body":""}}]},{"html_id":"crytic/Crytic/Reporter/IoReporter","path":"Crytic/Reporter/IoReporter.html","kind":"class","full_name":"Crytic::Reporter::IoReporter","name":"IoReporter","abstract":false,"superclass":{"html_id":"crytic/Crytic/Reporter/Reporter","kind":"class","full_name":"Crytic::Reporter::Reporter","name":"Reporter"},"ancestors":[{"html_id":"crytic/Crytic/Reporter/Reporter","kind":"class","full_name":"Crytic::Reporter::Reporter","name":"Reporter"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/reporter/io_reporter.cr","line_number":9,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"INDENT","name":"INDENT","value":"\"    \""}],"namespace":{"html_id":"crytic/Crytic/Reporter","kind":"module","full_name":"Crytic::Reporter","name":"Reporter"},"doc":"Reports crytics output into an IO. Useful for e.g. the console output","summary":"<p>Reports crytics output into an IO.</p>","constructors":[{"html_id":"new(io:IO,timer=Timer.new)-class-method","name":"new","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"timer","default_value":"Timer.new","external_name":"timer","restriction":""}],"args_string":"(io : IO, timer = Timer.new)","args_html":"(io : IO, timer = <span class=\"t\">Timer</span>.<span class=\"k\">new</span>)","location":{"filename":"src/crytic/reporter/io_reporter.cr","line_number":12,"url":null},"def":{"name":"new","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"timer","default_value":"Timer.new","external_name":"timer","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(io, timer)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"report_msi(results):Nil-instance-method","name":"report_msi","doc":"intentional noop","summary":"<p>intentional noop</p>","abstract":false,"args":[{"name":"results","external_name":"results","restriction":""}],"args_string":"(results) : Nil","args_html":"(results) : Nil","location":{"filename":"src/crytic/reporter/io_reporter.cr","line_number":73,"url":null},"def":{"name":"report_msi","args":[{"name":"results","external_name":"results","restriction":""}],"return_type":"Nil","visibility":"Public","body":""}},{"html_id":"report_mutations(mutations:Array(Generator::MutationSet)):Nil-instance-method","name":"report_mutations","abstract":false,"args":[{"name":"mutations","external_name":"mutations","restriction":"Array(Generator::MutationSet)"}],"args_string":"(mutations : Array(Generator::MutationSet)) : Nil","args_html":"(mutations : Array(<a href=\"../../Crytic/Generator/MutationSet.html\">Generator::MutationSet</a>)) : Nil","location":{"filename":"src/crytic/reporter/io_reporter.cr","line_number":24,"url":null},"def":{"name":"report_mutations","args":[{"name":"mutations","external_name":"mutations","restriction":"Array(Generator::MutationSet)"}],"return_type":"Nil","visibility":"Public","body":"number_of_mutations = mutations.sum(&.number_of_mutations)\nif number_of_mutations == 0\n  @io << \"No mutations to be run.\"\nend\nif number_of_mutations == 1\n  @io << \"Running 1 mutation.\"\nend\nif number_of_mutations > 1\n  @io << \"Running #{number_of_mutations} mutations.\"\nend\n"}},{"html_id":"report_neutral_result(result):Nil-instance-method","name":"report_neutral_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":""}],"args_string":"(result) : Nil","args_html":"(result) : Nil","location":{"filename":"src/crytic/reporter/io_reporter.cr","line_number":31,"url":null},"def":{"name":"report_neutral_result","args":[{"name":"result","external_name":"result","restriction":""}],"return_type":"Nil","visibility":"Public","body":"if result.errored?\n  @io << \"\\n#{INDENT}🚧 #{result.mutant_name}\"\n  @io << \"\\n#{INDENT + INDENT}in #{result.location.filename}\"\n  @io << \"\\n#{INDENT + INDENT}There was an error running the test-suite using crytic's infrastructure with the unmodified subject.\\n#{INDENT + INDENT}This is very likely a bug in crytic, please go ahead and file an\\n#{INDENT + INDENT}issue at https://github.com/hanneskaeufler/crytic/issues. There are a number of known limitations already which\\n#{INDENT + INDENT}could be the reason for the error, see https://github.com/hanneskaeufler/crytic/issues/19.\\n\"\n  @io << \"#{(INDENT + INDENT) + INDENT} #{result.output}\"\nend"}},{"html_id":"report_original_result(original_result):Nil-instance-method","name":"report_original_result","abstract":false,"args":[{"name":"original_result","external_name":"original_result","restriction":""}],"args_string":"(original_result) : Nil","args_html":"(original_result) : Nil","location":{"filename":"src/crytic/reporter/io_reporter.cr","line_number":15,"url":null},"def":{"name":"report_original_result","args":[{"name":"original_result","external_name":"original_result","restriction":""}],"return_type":"Nil","visibility":"Public","body":"if original_result.exit_code != 0\n  @io << \"❌ Original test suite failed.\\n\"\n  @io << original_result.output\nelse\n  @io << \"✅ Original test suite passed.\\n\"\nend"}},{"html_id":"report_result(result):Nil-instance-method","name":"report_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":""}],"args_string":"(result) : Nil","args_html":"(result) : Nil","location":{"filename":"src/crytic/reporter/io_reporter.cr","line_number":42,"url":null},"def":{"name":"report_result","args":[{"name":"result","external_name":"result","restriction":""}],"return_type":"Nil","visibility":"Public","body":"@io << \"\\n#{INDENT}\"\ncase result.status\nwhen Mutation::Status::Uncovered\n  @io << \"❌ #{result.mutant_name}\"\n  @io << \"\\n#{INDENT + INDENT}in #{result.location}\"\n  @io << \"\\n#{INDENT + INDENT}The following change didn't fail the test-suite:\"\n  @io << \"\\n#{(INDENT + INDENT) + INDENT}\"\n  @io << (result.diff.lines.join(\"\\n#{(INDENT + INDENT) + INDENT}\"))\n  @io << \"\\n\"\nwhen Mutation::Status::Covered, Mutation::Status::Timeout, Mutation::Status::Errored\n  @io << \"✅ #{result.mutant_name}\"\n  @io << \"\\n#{INDENT + INDENT}in #{result.location}\"\nelse\n  raise(\"There were mutations of unreported type\")\nend\n"}},{"html_id":"report_summary(results:Mutation::ResultSet):Nil-instance-method","name":"report_summary","abstract":false,"args":[{"name":"results","external_name":"results","restriction":"Mutation::ResultSet"}],"args_string":"(results : Mutation::ResultSet) : Nil","args_html":"(results : <a href=\"../../Crytic/Mutation/ResultSet.html\">Mutation::ResultSet</a>) : Nil","location":{"filename":"src/crytic/reporter/io_reporter.cr","line_number":60,"url":null},"def":{"name":"report_summary","args":[{"name":"results","external_name":"results","restriction":"Mutation::ResultSet"}],"return_type":"Nil","visibility":"Public","body":"@io << \"\\n\\nFinished in #{Spec.to_human(@timer.elapsed_time)}:\\n\"\nsummary = \"#{results.total_count} mutations, \"\nsummary = summary + \"#{results.covered_count} covered, \"\nsummary = summary + \"#{results.uncovered_count} uncovered, \"\nsummary = summary + \"#{results.errored_count} errored, \"\nsummary = summary + \"#{results.timeout_count} timeout.\"\nsummary = summary + \" Mutation Score Indicator (MSI): #{score_in_percent(results)}\"\nsummary = summary + \"\\n\"\n@io << (summary.colorize(results.all_covered? ? :green : :red)).to_s\n"}}]},{"html_id":"crytic/Crytic/Reporter/Reporter","path":"Crytic/Reporter/Reporter.html","kind":"class","full_name":"Crytic::Reporter::Reporter","name":"Reporter","abstract":true,"superclass":{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/reporter/reporter.cr","line_number":5,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"crytic/Crytic/Reporter/FileSummaryIoReporter","kind":"class","full_name":"Crytic::Reporter::FileSummaryIoReporter","name":"FileSummaryIoReporter"},{"html_id":"crytic/Crytic/Reporter/IoReporter","kind":"class","full_name":"Crytic::Reporter::IoReporter","name":"IoReporter"},{"html_id":"crytic/Crytic/Reporter/StrykerBadgeReporter","kind":"class","full_name":"Crytic::Reporter::StrykerBadgeReporter","name":"StrykerBadgeReporter"}],"namespace":{"html_id":"crytic/Crytic/Reporter","kind":"module","full_name":"Crytic::Reporter","name":"Reporter"},"instance_methods":[{"html_id":"report_msi(results:Mutation::ResultSet)-instance-method","name":"report_msi","abstract":true,"args":[{"name":"results","external_name":"results","restriction":"Mutation::ResultSet"}],"args_string":"(results : Mutation::ResultSet)","args_html":"(results : <a href=\"../../Crytic/Mutation/ResultSet.html\">Mutation::ResultSet</a>)","location":{"filename":"src/crytic/reporter/reporter.cr","line_number":11,"url":null},"def":{"name":"report_msi","args":[{"name":"results","external_name":"results","restriction":"Mutation::ResultSet"}],"visibility":"Public","body":""}},{"html_id":"report_mutations(mutations:Array(Generator::MutationSet))-instance-method","name":"report_mutations","abstract":true,"args":[{"name":"mutations","external_name":"mutations","restriction":"Array(Generator::MutationSet)"}],"args_string":"(mutations : Array(Generator::MutationSet))","args_html":"(mutations : Array(<a href=\"../../Crytic/Generator/MutationSet.html\">Generator::MutationSet</a>))","location":{"filename":"src/crytic/reporter/reporter.cr","line_number":7,"url":null},"def":{"name":"report_mutations","args":[{"name":"mutations","external_name":"mutations","restriction":"Array(Generator::MutationSet)"}],"visibility":"Public","body":""}},{"html_id":"report_neutral_result(result)-instance-method","name":"report_neutral_result","abstract":true,"args":[{"name":"result","external_name":"result","restriction":""}],"args_string":"(result)","args_html":"(result)","location":{"filename":"src/crytic/reporter/reporter.cr","line_number":8,"url":null},"def":{"name":"report_neutral_result","args":[{"name":"result","external_name":"result","restriction":""}],"visibility":"Public","body":""}},{"html_id":"report_original_result(original_result)-instance-method","name":"report_original_result","abstract":true,"args":[{"name":"original_result","external_name":"original_result","restriction":""}],"args_string":"(original_result)","args_html":"(original_result)","location":{"filename":"src/crytic/reporter/reporter.cr","line_number":6,"url":null},"def":{"name":"report_original_result","args":[{"name":"original_result","external_name":"original_result","restriction":""}],"visibility":"Public","body":""}},{"html_id":"report_result(result)-instance-method","name":"report_result","abstract":true,"args":[{"name":"result","external_name":"result","restriction":""}],"args_string":"(result)","args_html":"(result)","location":{"filename":"src/crytic/reporter/reporter.cr","line_number":9,"url":null},"def":{"name":"report_result","args":[{"name":"result","external_name":"result","restriction":""}],"visibility":"Public","body":""}},{"html_id":"report_summary(results:Mutation::ResultSet)-instance-method","name":"report_summary","abstract":true,"args":[{"name":"results","external_name":"results","restriction":"Mutation::ResultSet"}],"args_string":"(results : Mutation::ResultSet)","args_html":"(results : <a href=\"../../Crytic/Mutation/ResultSet.html\">Mutation::ResultSet</a>)","location":{"filename":"src/crytic/reporter/reporter.cr","line_number":10,"url":null},"def":{"name":"report_summary","args":[{"name":"results","external_name":"results","restriction":"Mutation::ResultSet"}],"visibility":"Public","body":""}}]},{"html_id":"crytic/Crytic/Reporter/Reporters","path":"Crytic/Reporter/Reporters.html","kind":"alias","full_name":"Crytic::Reporter::Reporters","name":"Reporters","abstract":false,"locations":[{"filename":"src/crytic/reporter/reporter.cr","line_number":14,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":true,"aliased":"Array(Crytic::Reporter::Reporter)","aliased_html":"Array(<a href=\"../../Crytic/Reporter/Reporter.html\">Crytic::Reporter::Reporter</a>)","const":false,"namespace":{"html_id":"crytic/Crytic/Reporter","kind":"module","full_name":"Crytic::Reporter","name":"Reporter"}},{"html_id":"crytic/Crytic/Reporter/StrykerBadgeReporter","path":"Crytic/Reporter/StrykerBadgeReporter.html","kind":"class","full_name":"Crytic::Reporter::StrykerBadgeReporter","name":"StrykerBadgeReporter","abstract":false,"superclass":{"html_id":"crytic/Crytic/Reporter/Reporter","kind":"class","full_name":"Crytic::Reporter::Reporter","name":"Reporter"},"ancestors":[{"html_id":"crytic/Crytic/Reporter/Reporter","kind":"class","full_name":"Crytic::Reporter::Reporter","name":"Reporter"},{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/reporter/stryker_badge_reporter.cr","line_number":9,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Reporter","kind":"module","full_name":"Crytic::Reporter","name":"Reporter"},"doc":"Sends a MSI score to the stryker dashboard\nSee also https://infection.github.io/guide/mutation-badge.html","summary":"<p>Sends a MSI score to the stryker dashboard See also https://infection.github.io/guide/mutation-badge.html</p>","constructors":[{"html_id":"new(client:HttpClient,env:Hash(String,String),io:IO)-class-method","name":"new","abstract":false,"args":[{"name":"client","external_name":"client","restriction":"HttpClient"},{"name":"env","external_name":"env","restriction":"Hash(String, String)"},{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(client : HttpClient, env : Hash(String, String), io : IO)","args_html":"(client : <a href=\"../../Crytic/Reporter/HttpClient.html\">HttpClient</a>, env : Hash(String, String), io : IO)","location":{"filename":"src/crytic/reporter/stryker_badge_reporter.cr","line_number":12,"url":null},"def":{"name":"new","args":[{"name":"client","external_name":"client","restriction":"HttpClient"},{"name":"env","external_name":"env","restriction":"Hash(String, String)"},{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"_ = allocate\n_.initialize(client, env, io)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"report_msi(results)-instance-method","name":"report_msi","abstract":false,"args":[{"name":"results","external_name":"results","restriction":""}],"args_string":"(results)","args_html":"(results)","location":{"filename":"src/crytic/reporter/stryker_badge_reporter.cr","line_number":15,"url":null},"def":{"name":"report_msi","args":[{"name":"results","external_name":"results","restriction":""}],"visibility":"Public","body":"if results.empty?\n  @io << \"Mutation score wasn't uploaded to stryker dashboard. No results found.\\n\"\n  return\nend\nresponse = @client.post(DASHBOARD_URL, {\"apiKey\" => @env[\"STRYKER_DASHBOARD_API_KEY\"], \"repositorySlug\" => slug, \"branch\" => @env[\"CIRCLE_BRANCH\"], \"mutationScore\" => score(results)})\nprint_status(response)\n"}},{"html_id":"report_mutations(mutations)-instance-method","name":"report_mutations","abstract":false,"args":[{"name":"mutations","external_name":"mutations","restriction":""}],"args_string":"(mutations)","args_html":"(mutations)","location":{"filename":"src/crytic/reporter/stryker_badge_reporter.cr","line_number":34,"url":null},"def":{"name":"report_mutations","args":[{"name":"mutations","external_name":"mutations","restriction":""}],"visibility":"Public","body":""}},{"html_id":"report_neutral_result(result)-instance-method","name":"report_neutral_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":""}],"args_string":"(result)","args_html":"(result)","location":{"filename":"src/crytic/reporter/stryker_badge_reporter.cr","line_number":37,"url":null},"def":{"name":"report_neutral_result","args":[{"name":"result","external_name":"result","restriction":""}],"visibility":"Public","body":""}},{"html_id":"report_original_result(original_result)-instance-method","name":"report_original_result","abstract":false,"args":[{"name":"original_result","external_name":"original_result","restriction":""}],"args_string":"(original_result)","args_html":"(original_result)","location":{"filename":"src/crytic/reporter/stryker_badge_reporter.cr","line_number":31,"url":null},"def":{"name":"report_original_result","args":[{"name":"original_result","external_name":"original_result","restriction":""}],"visibility":"Public","body":""}},{"html_id":"report_result(result)-instance-method","name":"report_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":""}],"args_string":"(result)","args_html":"(result)","location":{"filename":"src/crytic/reporter/stryker_badge_reporter.cr","line_number":40,"url":null},"def":{"name":"report_result","args":[{"name":"result","external_name":"result","restriction":""}],"visibility":"Public","body":""}},{"html_id":"report_summary(results)-instance-method","name":"report_summary","abstract":false,"args":[{"name":"results","external_name":"results","restriction":""}],"args_string":"(results)","args_html":"(results)","location":{"filename":"src/crytic/reporter/stryker_badge_reporter.cr","line_number":43,"url":null},"def":{"name":"report_summary","args":[{"name":"results","external_name":"results","restriction":""}],"visibility":"Public","body":""}}]},{"html_id":"crytic/Crytic/Reporter/Timer","path":"Crytic/Reporter/Timer.html","kind":"class","full_name":"Crytic::Reporter::Timer","name":"Timer","abstract":false,"superclass":{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/reporter/timer.cr","line_number":2,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Reporter","kind":"module","full_name":"Crytic::Reporter","name":"Reporter"},"constructors":[{"html_id":"new(time:->Time=->do\nTime.utc\nend)-class-method","name":"new","abstract":false,"args":[{"name":"time","default_value":"-> do\n  Time.utc\nend","external_name":"time","restriction":"(-> Time)"}],"args_string":"(time :  -> Time = -> do\n  Time.utc\nend)","args_html":"(time :  -> Time = -&gt; <span class=\"k\">do</span>\n  <span class=\"t\">Time</span>.utc\n<span class=\"k\">end</span>)","location":{"filename":"src/crytic/reporter/timer.cr","line_number":5,"url":null},"def":{"name":"new","args":[{"name":"time","default_value":"-> do\n  Time.utc\nend","external_name":"time","restriction":"(-> Time)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(time)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"elapsed_time:Time::Span-instance-method","name":"elapsed_time","abstract":false,"location":{"filename":"src/crytic/reporter/timer.cr","line_number":9,"url":null},"def":{"name":"elapsed_time","return_type":"Time::Span","visibility":"Public","body":"@time.call - @start_time"}}]}]},{"html_id":"crytic/Crytic/Runner","path":"Crytic/Runner.html","kind":"module","full_name":"Crytic::Runner","name":"Runner","abstract":false,"locations":[{"filename":"src/crytic/runner/run.cr","line_number":5,"url":null},{"filename":"src/crytic/runner/sequential.cr","line_number":5,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic","kind":"module","full_name":"Crytic","name":"Crytic"},"types":[{"html_id":"crytic/Crytic/Runner/NoMutationFactory","path":"Crytic/Runner/NoMutationFactory.html","kind":"alias","full_name":"Crytic::Runner::NoMutationFactory","name":"NoMutationFactory","abstract":false,"locations":[{"filename":"src/crytic/runner/run.cr","line_number":6,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":true,"aliased":"Proc(Array(String), Crytic::Mutation::NoMutation)","aliased_html":"Array(String) -> <a href=\"../../Crytic/Mutation/NoMutation.html\">Crytic::Mutation::NoMutation</a>","const":false,"namespace":{"html_id":"crytic/Crytic/Runner","kind":"module","full_name":"Crytic::Runner","name":"Runner"}},{"html_id":"crytic/Crytic/Runner/Run","path":"Crytic/Runner/Run.html","kind":"class","full_name":"Crytic::Runner::Run","name":"Run","abstract":false,"superclass":{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/runner/run.cr","line_number":8,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Runner","kind":"module","full_name":"Crytic::Runner","name":"Runner"},"class_methods":[{"html_id":"from_options(options,generator,no_mutation_factory)-class-method","name":"from_options","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""},{"name":"generator","external_name":"generator","restriction":""},{"name":"no_mutation_factory","external_name":"no_mutation_factory","restriction":""}],"args_string":"(options, generator, no_mutation_factory)","args_html":"(options, generator, no_mutation_factory)","location":{"filename":"src/crytic/runner/run.cr","line_number":19,"url":null},"def":{"name":"from_options","args":[{"name":"options","external_name":"options","restriction":""},{"name":"generator","external_name":"generator","restriction":""},{"name":"no_mutation_factory","external_name":"no_mutation_factory","restriction":""}],"visibility":"Public","body":"new(options.msi_threshold, options.reporters, options.spec_files, options.subject, generator, no_mutation_factory)"}}],"constructors":[{"html_id":"new(msi_threshold:Float64,reporters:Crytic::Reporter::Reporters,spec_files:Array(String),subjects:Array(Subject),generator:Generator::Generator,no_mutation_factory:NoMutationFactory)-class-method","name":"new","abstract":false,"args":[{"name":"msi_threshold","external_name":"msi_threshold","restriction":"Float64"},{"name":"reporters","external_name":"reporters","restriction":"Crytic::Reporter::Reporters"},{"name":"spec_files","external_name":"spec_files","restriction":"Array(String)"},{"name":"subjects","external_name":"subjects","restriction":"Array(Subject)"},{"name":"generator","external_name":"generator","restriction":"Generator::Generator"},{"name":"no_mutation_factory","external_name":"no_mutation_factory","restriction":"NoMutationFactory"}],"args_string":"(msi_threshold : Float64, reporters : Crytic::Reporter::Reporters, spec_files : Array(String), subjects : Array(Subject), generator : Generator::Generator, no_mutation_factory : NoMutationFactory)","args_html":"(msi_threshold : Float64, reporters : <a href=\"../../Crytic/Reporter/Reporters.html\">Crytic::Reporter::Reporters</a>, spec_files : Array(String), subjects : Array(<a href=\"../../Crytic/Subject.html\">Subject</a>), generator : <a href=\"../../Crytic/Generator/Generator.html\">Generator::Generator</a>, no_mutation_factory : <a href=\"../../Crytic/Runner/NoMutationFactory.html\">NoMutationFactory</a>)","location":{"filename":"src/crytic/runner/run.cr","line_number":9,"url":null},"def":{"name":"new","args":[{"name":"msi_threshold","external_name":"msi_threshold","restriction":"Float64"},{"name":"reporters","external_name":"reporters","restriction":"Crytic::Reporter::Reporters"},{"name":"spec_files","external_name":"spec_files","restriction":"Array(String)"},{"name":"subjects","external_name":"subjects","restriction":"Array(Subject)"},{"name":"generator","external_name":"generator","restriction":"Generator::Generator"},{"name":"no_mutation_factory","external_name":"no_mutation_factory","restriction":"NoMutationFactory"}],"visibility":"Public","body":"_ = allocate\n_.initialize(msi_threshold, reporters, spec_files, subjects, generator, no_mutation_factory)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"execute_original_test_suite(side_effects)-instance-method","name":"execute_original_test_suite","abstract":false,"args":[{"name":"side_effects","external_name":"side_effects","restriction":""}],"args_string":"(side_effects)","args_html":"(side_effects)","location":{"filename":"src/crytic/runner/run.cr","line_number":23,"url":null},"def":{"name":"execute_original_test_suite","args":[{"name":"side_effects","external_name":"side_effects","restriction":""}],"visibility":"Public","body":"original_result = (@no_mutation_factory.call(@spec_files)).run(side_effects)\nreport_original_result(original_result)\noriginal_result\n"}},{"html_id":"generate_mutations-instance-method","name":"generate_mutations","abstract":false,"location":{"filename":"src/crytic/runner/run.cr","line_number":29,"url":null},"def":{"name":"generate_mutations","visibility":"Public","body":"(@generator.mutations_for(@subjects, @spec_files)).tap do |mutations|\n  report_mutations(mutations)\nend"}},{"html_id":"report_final(results)-instance-method","name":"report_final","abstract":false,"args":[{"name":"results","external_name":"results","restriction":""}],"args_string":"(results)","args_html":"(results)","location":{"filename":"src/crytic/runner/run.cr","line_number":41,"url":null},"def":{"name":"report_final","args":[{"name":"results","external_name":"results","restriction":""}],"visibility":"Public","body":"report_summary(results)\nreport_msi(results)\n(!results.empty?) && ((MsiCalculator.new(results)).msi.passes?(@msi_threshold))\n"}},{"html_id":"report_msi(result):Nil-instance-method","name":"report_msi","abstract":false,"args":[{"name":"result","external_name":"result","restriction":""}],"args_string":"(result) : Nil","args_html":"(result) : Nil","location":{"filename":"src/crytic/runner/run.cr","line_number":35,"url":null},"def":{"name":"report_msi","args":[{"name":"result","external_name":"result","restriction":""}],"return_type":"Nil","visibility":"Public","body":"@reporters.each(&.report_msi(result))"}},{"html_id":"report_mutations(result):Nil-instance-method","name":"report_mutations","abstract":false,"args":[{"name":"result","external_name":"result","restriction":""}],"args_string":"(result) : Nil","args_html":"(result) : Nil","location":{"filename":"src/crytic/runner/run.cr","line_number":35,"url":null},"def":{"name":"report_mutations","args":[{"name":"result","external_name":"result","restriction":""}],"return_type":"Nil","visibility":"Public","body":"@reporters.each(&.report_mutations(result))"}},{"html_id":"report_neutral_result(result):Nil-instance-method","name":"report_neutral_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":""}],"args_string":"(result) : Nil","args_html":"(result) : Nil","location":{"filename":"src/crytic/runner/run.cr","line_number":35,"url":null},"def":{"name":"report_neutral_result","args":[{"name":"result","external_name":"result","restriction":""}],"return_type":"Nil","visibility":"Public","body":"@reporters.each(&.report_neutral_result(result))"}},{"html_id":"report_original_result(result):Nil-instance-method","name":"report_original_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":""}],"args_string":"(result) : Nil","args_html":"(result) : Nil","location":{"filename":"src/crytic/runner/run.cr","line_number":35,"url":null},"def":{"name":"report_original_result","args":[{"name":"result","external_name":"result","restriction":""}],"return_type":"Nil","visibility":"Public","body":"@reporters.each(&.report_original_result(result))"}},{"html_id":"report_result(result):Nil-instance-method","name":"report_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":""}],"args_string":"(result) : Nil","args_html":"(result) : Nil","location":{"filename":"src/crytic/runner/run.cr","line_number":35,"url":null},"def":{"name":"report_result","args":[{"name":"result","external_name":"result","restriction":""}],"return_type":"Nil","visibility":"Public","body":"@reporters.each(&.report_result(result))"}},{"html_id":"report_summary(result):Nil-instance-method","name":"report_summary","abstract":false,"args":[{"name":"result","external_name":"result","restriction":""}],"args_string":"(result) : Nil","args_html":"(result) : Nil","location":{"filename":"src/crytic/runner/run.cr","line_number":35,"url":null},"def":{"name":"report_summary","args":[{"name":"result","external_name":"result","restriction":""}],"return_type":"Nil","visibility":"Public","body":"@reporters.each(&.report_summary(result))"}}]},{"html_id":"crytic/Crytic/Runner/Sequential","path":"Crytic/Runner/Sequential.html","kind":"class","full_name":"Crytic::Runner::Sequential","name":"Sequential","abstract":false,"superclass":{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/runner/sequential.cr","line_number":6,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic/Runner","kind":"module","full_name":"Crytic::Runner","name":"Runner"},"instance_methods":[{"html_id":"run(run,side_effects):Bool-instance-method","name":"run","abstract":false,"args":[{"name":"run","external_name":"run","restriction":""},{"name":"side_effects","external_name":"side_effects","restriction":""}],"args_string":"(run, side_effects) : Bool","args_html":"(run, side_effects) : Bool","location":{"filename":"src/crytic/runner/sequential.cr","line_number":7,"url":null},"def":{"name":"run","args":[{"name":"run","external_name":"run","restriction":""},{"name":"side_effects","external_name":"side_effects","restriction":""}],"return_type":"Bool","visibility":"Public","body":"original_result = run.execute_original_test_suite(side_effects)\nif original_result.successful?\nelse\n  return false\nend\nmutations = run.generate_mutations\nresults = Mutation::ResultSet.new(run_all_mutations(mutations, run))\nrun.report_final(results)\n"}}]}]},{"html_id":"crytic/Crytic/SideEffects","path":"Crytic/SideEffects.html","kind":"class","full_name":"Crytic::SideEffects","name":"SideEffects","abstract":false,"superclass":{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/side_effects.cr","line_number":3,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic","kind":"module","full_name":"Crytic","name":"Crytic"},"constructors":[{"html_id":"new(std_out,std_err,exit_fun,env,process_runner:ProcessRunner,file_remover:String->Void,tempfile_writer:String,String,String->String)-class-method","name":"new","abstract":false,"args":[{"name":"std_out","external_name":"std_out","restriction":""},{"name":"std_err","external_name":"std_err","restriction":""},{"name":"exit_fun","external_name":"exit_fun","restriction":""},{"name":"env","external_name":"env","restriction":""},{"name":"process_runner","external_name":"process_runner","restriction":"ProcessRunner"},{"name":"file_remover","external_name":"file_remover","restriction":"(String -> Void)"},{"name":"tempfile_writer","external_name":"tempfile_writer","restriction":"(String, String, String -> String)"}],"args_string":"(std_out, std_err, exit_fun, env, process_runner : ProcessRunner, file_remover : String -> Void, tempfile_writer : String, String, String -> String)","args_html":"(std_out, std_err, exit_fun, env, process_runner : <a href=\"../Crytic/ProcessRunner.html\">ProcessRunner</a>, file_remover : String -> Void, tempfile_writer : String, String, String -> String)","location":{"filename":"src/crytic/side_effects.cr","line_number":11,"url":null},"def":{"name":"new","args":[{"name":"std_out","external_name":"std_out","restriction":""},{"name":"std_err","external_name":"std_err","restriction":""},{"name":"exit_fun","external_name":"exit_fun","restriction":""},{"name":"env","external_name":"env","restriction":""},{"name":"process_runner","external_name":"process_runner","restriction":"ProcessRunner"},{"name":"file_remover","external_name":"file_remover","restriction":"(String -> Void)"},{"name":"tempfile_writer","external_name":"tempfile_writer","restriction":"(String, String, String -> String)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(std_out, std_err, exit_fun, env, process_runner, file_remover, tempfile_writer)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"env:Hash(String,String)-instance-method","name":"env","abstract":false,"location":{"filename":"src/crytic/side_effects.cr","line_number":7,"url":null},"def":{"name":"env","return_type":"Hash(String, String)","visibility":"Public","body":"@env"}},{"html_id":"execute(cmd,args,output,error,timeout)-instance-method","name":"execute","abstract":false,"args":[{"name":"cmd","external_name":"cmd","restriction":""},{"name":"args","external_name":"args","restriction":""},{"name":"output","external_name":"output","restriction":""},{"name":"error","external_name":"error","restriction":""},{"name":"timeout","external_name":"timeout","restriction":""}],"args_string":"(cmd, args, output, error, timeout)","args_html":"(cmd, args, output, error, timeout)","location":{"filename":"src/crytic/side_effects.cr","line_number":26,"url":null},"def":{"name":"execute","args":[{"name":"cmd","external_name":"cmd","restriction":""},{"name":"args","external_name":"args","restriction":""},{"name":"output","external_name":"output","restriction":""},{"name":"error","external_name":"error","restriction":""},{"name":"timeout","external_name":"timeout","restriction":""}],"visibility":"Public","body":"@process_runner.run(cmd, args, output, error, timeout)"}},{"html_id":"execute(cmd,args,output,error)-instance-method","name":"execute","abstract":false,"args":[{"name":"cmd","external_name":"cmd","restriction":""},{"name":"args","external_name":"args","restriction":""},{"name":"output","external_name":"output","restriction":""},{"name":"error","external_name":"error","restriction":""}],"args_string":"(cmd, args, output, error)","args_html":"(cmd, args, output, error)","location":{"filename":"src/crytic/side_effects.cr","line_number":22,"url":null},"def":{"name":"execute","args":[{"name":"cmd","external_name":"cmd","restriction":""},{"name":"args","external_name":"args","restriction":""},{"name":"output","external_name":"output","restriction":""},{"name":"error","external_name":"error","restriction":""}],"visibility":"Public","body":"@process_runner.run(cmd, args, output, error)"}},{"html_id":"exit_fun:Int32->-instance-method","name":"exit_fun","abstract":false,"location":{"filename":"src/crytic/side_effects.cr","line_number":6,"url":null},"def":{"name":"exit_fun","return_type":"(Int32 ->)","visibility":"Public","body":"@exit_fun"}},{"html_id":"remove_file(path)-instance-method","name":"remove_file","abstract":false,"args":[{"name":"path","external_name":"path","restriction":""}],"args_string":"(path)","args_html":"(path)","location":{"filename":"src/crytic/side_effects.cr","line_number":30,"url":null},"def":{"name":"remove_file","args":[{"name":"path","external_name":"path","restriction":""}],"visibility":"Public","body":"@file_remover.call(path)"}},{"html_id":"run(*args,**options)-instance-method","name":"run","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crytic/side_effects.cr","line_number":9,"url":null},"def":{"name":"run","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@process_runner.run(*args, **options)"}},{"html_id":"run(*args,**options,&)-instance-method","name":"run","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crytic/side_effects.cr","line_number":9,"url":null},"def":{"name":"run","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"@process_runner.run(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"std_err:IO-instance-method","name":"std_err","abstract":false,"location":{"filename":"src/crytic/side_effects.cr","line_number":5,"url":null},"def":{"name":"std_err","return_type":"IO","visibility":"Public","body":"@std_err"}},{"html_id":"std_out:IO-instance-method","name":"std_out","abstract":false,"location":{"filename":"src/crytic/side_effects.cr","line_number":4,"url":null},"def":{"name":"std_out","return_type":"IO","visibility":"Public","body":"@std_out"}},{"html_id":"write_tempfile(path,ext,content)-instance-method","name":"write_tempfile","abstract":false,"args":[{"name":"path","external_name":"path","restriction":""},{"name":"ext","external_name":"ext","restriction":""},{"name":"content","external_name":"content","restriction":""}],"args_string":"(path, ext, content)","args_html":"(path, ext, content)","location":{"filename":"src/crytic/side_effects.cr","line_number":34,"url":null},"def":{"name":"write_tempfile","args":[{"name":"path","external_name":"path","restriction":""},{"name":"ext","external_name":"ext","restriction":""},{"name":"content","external_name":"content","restriction":""}],"visibility":"Public","body":"@tempfile_writer.call(path, ext, content)"}}]},{"html_id":"crytic/Crytic/SourceCode","path":"Crytic/SourceCode.html","kind":"alias","full_name":"Crytic::SourceCode","name":"SourceCode","abstract":false,"locations":[{"filename":"src/crytic/subject.cr","line_number":7,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":true,"aliased":"String","aliased_html":"String","const":false,"namespace":{"html_id":"crytic/Crytic","kind":"module","full_name":"Crytic","name":"Crytic"}},{"html_id":"crytic/Crytic/Subject","path":"Crytic/Subject.html","kind":"class","full_name":"Crytic::Subject","name":"Subject","abstract":false,"superclass":{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/subject.cr","line_number":9,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic","kind":"module","full_name":"Crytic","name":"Crytic"},"class_methods":[{"html_id":"from_filepath(subject_file_path:String)-class-method","name":"from_filepath","abstract":false,"args":[{"name":"subject_file_path","external_name":"subject_file_path","restriction":"String"}],"args_string":"(subject_file_path : String)","args_html":"(subject_file_path : String)","location":{"filename":"src/crytic/subject.cr","line_number":13,"url":null},"def":{"name":"from_filepath","args":[{"name":"subject_file_path","external_name":"subject_file_path","restriction":"String"}],"visibility":"Public","body":"new(File.read(subject_file_path), subject_file_path)"}}],"constructors":[{"html_id":"new(source:SourceCode,path)-class-method","name":"new","abstract":false,"args":[{"name":"source","external_name":"source","restriction":"SourceCode"},{"name":"path","external_name":"path","restriction":""}],"args_string":"(source : SourceCode, path)","args_html":"(source : <a href=\"../Crytic/SourceCode.html\">SourceCode</a>, path)","location":{"filename":"src/crytic/subject.cr","line_number":17,"url":null},"def":{"name":"new","args":[{"name":"source","external_name":"source","restriction":"SourceCode"},{"name":"path","external_name":"path","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(source, path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"inspect(inspectors:Array(Mutant::Possibilities))-instance-method","name":"inspect","abstract":false,"args":[{"name":"inspectors","external_name":"inspectors","restriction":"Array(Mutant::Possibilities)"}],"args_string":"(inspectors : Array(Mutant::Possibilities))","args_html":"(inspectors : Array(<a href=\"../Crytic/Mutant/Possibilities.html\">Mutant::Possibilities</a>))","location":{"filename":"src/crytic/subject.cr","line_number":34,"url":null},"def":{"name":"inspect","args":[{"name":"inspectors","external_name":"inspectors","restriction":"Array(Mutant::Possibilities)"}],"visibility":"Public","body":"inspectors.map(&.reset).tap(&.each do |inspector|\n  ast.accept(inspector)\nend)"}},{"html_id":"mutated(mutant:Crystal::Transformer)-instance-method","name":"mutated","abstract":false,"args":[{"name":"mutant","external_name":"mutant","restriction":"Crystal::Transformer"}],"args_string":"(mutant : Crystal::Transformer)","args_html":"(mutant : Crystal::Transformer)","location":{"filename":"src/crytic/subject.cr","line_number":24,"url":null},"def":{"name":"mutated","args":[{"name":"mutant","external_name":"mutant","restriction":"Crystal::Transformer"}],"visibility":"Public","body":"MutatedSubject.new(path, ast.to_s, (ast.transform(mutant)).to_s)"}},{"html_id":"mutated(mutant:Crystal::Visitor)-instance-method","name":"mutated","abstract":false,"args":[{"name":"mutant","external_name":"mutant","restriction":"Crystal::Visitor"}],"args_string":"(mutant : Crystal::Visitor)","args_html":"(mutant : Crystal::Visitor)","location":{"filename":"src/crytic/subject.cr","line_number":28,"url":null},"def":{"name":"mutated","args":[{"name":"mutant","external_name":"mutant","restriction":"Crystal::Visitor"}],"visibility":"Public","body":"new_ast = ast.clone\nnew_ast.accept(mutant)\nMutatedSubject.new(path, ast.to_s, new_ast.to_s)\n"}},{"html_id":"path:String-instance-method","name":"path","abstract":false,"location":{"filename":"src/crytic/subject.cr","line_number":10,"url":null},"def":{"name":"path","return_type":"String","visibility":"Public","body":"@path"}}]},{"html_id":"crytic/Crytic/Timeout","path":"Crytic/Timeout.html","kind":"class","full_name":"Crytic::Timeout","name":"Timeout","abstract":false,"superclass":{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crytic/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crytic/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crytic/timeout.cr","line_number":2,"url":null}],"repository_name":"crytic","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crytic/Crytic","kind":"module","full_name":"Crytic","name":"Crytic"},"class_methods":[{"html_id":"after_select_action(seconds)-class-method","name":"after_select_action","abstract":false,"args":[{"name":"seconds","external_name":"seconds","restriction":""}],"args_string":"(seconds)","args_html":"(seconds)","location":{"filename":"src/crytic/timeout.cr","line_number":3,"url":null},"def":{"name":"after_select_action","args":[{"name":"seconds","external_name":"seconds","restriction":""}],"visibility":"Public","body":"ch = Channel(Nil).new\nspawn do\n  sleep(seconds)\n  ch.send(nil)\nend\nch.receive_select_action\n"}}]}]}]}}